{"version":3,"file":"561.ac2c39d081b9e829.js","mappings":"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","names":["parser","o","k","v","o2","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","parser2","trace","yy","symbols_","error","start","timeline","document","EOF","line","SPACE","statement","NEWLINE","title","acc_title","acc_title_value","acc_descr","acc_descr_value","acc_descr_multiline_value","section","period_statement","event_statement","period","event","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","this","$","push","getCommonDb","setDiagramTitle","substr","trim","setAccTitle","setAccDescription","addSection","addTask","addEvent","table","defaultActions","parseError","str","hash","recoverable","Error","parse","input","stack","tstack","vstack","lstack","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","token","ranges","options","getPrototypeOf","symbol","state","action","r","p","len","expected","yyval","pop","lex","Array","errStr","showPosition","join","text","match","loc","first_line","last_line","first_column","last_column","range","apply","concat","Parser","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","INITIAL","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","acc_descr_multiline","inclusive","parser$1","currentSection","currentTaskId","sections","tasks","rawTasks","commonDb","clear","clear$1","txt","getSections","getTasks","allItemsProcessed","compileTasks","iterationCount","rawTask","id","type","task","score","events","find","addTaskOrg","descr","description","classes","compileTask","pos","processed","allProcessed","entries","db","freeze","defineProperty","__proto__","default","Symbol","toStringTag","value","wrap","width","each","word","text2","select","words","reverse","y","attr","dy","parseFloat","tspan","append","j","node","getComputedTextLength","lineHeight","svgDraw","elem","fullSection","conf","nodeElem","class","bkgElem","textElem","bbox","getBBox","fontSize","height","padding","max","maxHeight","rd","defaultBkg","remove","drawTasks","diagram2","tasks2","sectionColor","masterX","masterY","maxTaskHeight","maxEventCount","maxEventLineLength","maxSectionHeight","isWithoutSections","_a","taskNode","number","log","debug","taskWrapper","taskHeight","lineWrapper","lineLength","drawEvents","disableMulticolor","maxEventHeight","eventBeginY","eventNode","eventWrapper","eventHeight","diagram","renderer","setConf","draw","version","diagObj","_b","getConfig","LEFT_MARGIN","leftMargin","securityLevel","sandboxElement","svg","nodes","contentDocument","body","getDiagramTitle","graphics","sections2","depthY","sectionBeginY","sectionNumber","hasSections","forEach","sectionHeight","maxEventLineLengthTemp","tasksForSection","filter","sectionNode","sectionNodeWrapper","box","setupGraphViewbox","useMaxWidth","styles","THEME_COLOR_LIMIT","isDark","lighten","darken","genSections","git0","gitBranchLabel0"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/mermaid/dist/timeline-definition-85554ec2.js"],"sourcesContent":["import { L as commonDb, v as clear$1, c as getConfig, l as log, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { select, arc } from \"d3\";\nimport { isDark, lighten, darken } from \"khroma\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [6, 8, 10, 11, 12, 14, 16, 17, 20, 21], $V1 = [1, 9], $V2 = [1, 10], $V3 = [1, 11], $V4 = [1, 12], $V5 = [1, 13], $V6 = [1, 16], $V7 = [1, 17];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"timeline\": 4, \"document\": 5, \"EOF\": 6, \"line\": 7, \"SPACE\": 8, \"statement\": 9, \"NEWLINE\": 10, \"title\": 11, \"acc_title\": 12, \"acc_title_value\": 13, \"acc_descr\": 14, \"acc_descr_value\": 15, \"acc_descr_multiline_value\": 16, \"section\": 17, \"period_statement\": 18, \"event_statement\": 19, \"period\": 20, \"event\": 21, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"timeline\", 6: \"EOF\", 8: \"SPACE\", 10: \"NEWLINE\", 11: \"title\", 12: \"acc_title\", 13: \"acc_title_value\", 14: \"acc_descr\", 15: \"acc_descr_value\", 16: \"acc_descr_multiline_value\", 17: \"section\", 20: \"period\", 21: \"event\" },\n    productions_: [0, [3, 3], [5, 0], [5, 2], [7, 2], [7, 1], [7, 1], [7, 1], [9, 1], [9, 2], [9, 2], [9, 1], [9, 1], [9, 1], [9, 1], [18, 1], [19, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 1:\n          return $$[$0 - 1];\n        case 2:\n          this.$ = [];\n          break;\n        case 3:\n          $$[$0 - 1].push($$[$0]);\n          this.$ = $$[$0 - 1];\n          break;\n        case 4:\n        case 5:\n          this.$ = $$[$0];\n          break;\n        case 6:\n        case 7:\n          this.$ = [];\n          break;\n        case 8:\n          yy.getCommonDb().setDiagramTitle($$[$0].substr(6));\n          this.$ = $$[$0].substr(6);\n          break;\n        case 9:\n          this.$ = $$[$0].trim();\n          yy.getCommonDb().setAccTitle(this.$);\n          break;\n        case 10:\n        case 11:\n          this.$ = $$[$0].trim();\n          yy.getCommonDb().setAccDescription(this.$);\n          break;\n        case 12:\n          yy.addSection($$[$0].substr(8));\n          this.$ = $$[$0].substr(8);\n          break;\n        case 15:\n          yy.addTask($$[$0], 0, \"\");\n          this.$ = $$[$0];\n          break;\n        case 16:\n          yy.addEvent($$[$0].substr(2));\n          this.$ = $$[$0];\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o($V0, [2, 2], { 5: 3 }), { 6: [1, 4], 7: 5, 8: [1, 6], 9: 7, 10: [1, 8], 11: $V1, 12: $V2, 14: $V3, 16: $V4, 17: $V5, 18: 14, 19: 15, 20: $V6, 21: $V7 }, o($V0, [2, 7], { 1: [2, 1] }), o($V0, [2, 3]), { 9: 18, 11: $V1, 12: $V2, 14: $V3, 16: $V4, 17: $V5, 18: 14, 19: 15, 20: $V6, 21: $V7 }, o($V0, [2, 5]), o($V0, [2, 6]), o($V0, [2, 8]), { 13: [1, 19] }, { 15: [1, 20] }, o($V0, [2, 11]), o($V0, [2, 12]), o($V0, [2, 13]), o($V0, [2, 14]), o($V0, [2, 15]), o($V0, [2, 16]), o($V0, [2, 4]), o($V0, [2, 9]), o($V0, [2, 10])],\n    defaultActions: {},\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            break;\n          case 1:\n            break;\n          case 2:\n            return 10;\n          case 3:\n            break;\n          case 4:\n            break;\n          case 5:\n            return 4;\n          case 6:\n            return 11;\n          case 7:\n            this.begin(\"acc_title\");\n            return 12;\n          case 8:\n            this.popState();\n            return \"acc_title_value\";\n          case 9:\n            this.begin(\"acc_descr\");\n            return 14;\n          case 10:\n            this.popState();\n            return \"acc_descr_value\";\n          case 11:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 12:\n            this.popState();\n            break;\n          case 13:\n            return \"acc_descr_multiline_value\";\n          case 14:\n            return 17;\n          case 15:\n            return 21;\n          case 16:\n            return 20;\n          case 17:\n            return 6;\n          case 18:\n            return \"INVALID\";\n        }\n      },\n      rules: [/^(?:%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:#[^\\n]*)/i, /^(?:timeline\\b)/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:section\\s[^#:\\n;]+)/i, /^(?::\\s[^#:\\n;]+)/i, /^(?:[^#:\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"acc_descr_multiline\": { \"rules\": [12, 13], \"inclusive\": false }, \"acc_descr\": { \"rules\": [10], \"inclusive\": false }, \"acc_title\": { \"rules\": [8], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 14, 15, 16, 17, 18], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet currentSection = \"\";\nlet currentTaskId = 0;\nconst sections = [];\nconst tasks = [];\nconst rawTasks = [];\nconst getCommonDb = () => commonDb;\nconst clear = function() {\n  sections.length = 0;\n  tasks.length = 0;\n  currentSection = \"\";\n  rawTasks.length = 0;\n  clear$1();\n};\nconst addSection = function(txt) {\n  currentSection = txt;\n  sections.push(txt);\n};\nconst getSections = function() {\n  return sections;\n};\nconst getTasks = function() {\n  let allItemsProcessed = compileTasks();\n  const maxDepth = 100;\n  let iterationCount = 0;\n  while (!allItemsProcessed && iterationCount < maxDepth) {\n    allItemsProcessed = compileTasks();\n    iterationCount++;\n  }\n  tasks.push(...rawTasks);\n  return tasks;\n};\nconst addTask = function(period, length, event) {\n  const rawTask = {\n    id: currentTaskId++,\n    section: currentSection,\n    type: currentSection,\n    task: period,\n    score: length ? length : 0,\n    //if event is defined, then add it the events array\n    events: event ? [event] : []\n  };\n  rawTasks.push(rawTask);\n};\nconst addEvent = function(event) {\n  const currentTask = rawTasks.find((task) => task.id === currentTaskId - 1);\n  currentTask.events.push(event);\n};\nconst addTaskOrg = function(descr) {\n  const newTask = {\n    section: currentSection,\n    type: currentSection,\n    description: descr,\n    task: descr,\n    classes: []\n  };\n  tasks.push(newTask);\n};\nconst compileTasks = function() {\n  const compileTask = function(pos) {\n    return rawTasks[pos].processed;\n  };\n  let allProcessed = true;\n  for (const [i, rawTask] of rawTasks.entries()) {\n    compileTask(i);\n    allProcessed = allProcessed && rawTask.processed;\n  }\n  return allProcessed;\n};\nconst timelineDb = {\n  clear,\n  getCommonDb,\n  addSection,\n  getSections,\n  getTasks,\n  addTask,\n  addTaskOrg,\n  addEvent\n};\nconst db = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  addEvent,\n  addSection,\n  addTask,\n  addTaskOrg,\n  clear,\n  default: timelineDb,\n  getCommonDb,\n  getSections,\n  getTasks\n}, Symbol.toStringTag, { value: \"Module\" }));\nconst MAX_SECTIONS = 12;\nconst drawRect = function(elem, rectData) {\n  const rectElem = elem.append(\"rect\");\n  rectElem.attr(\"x\", rectData.x);\n  rectElem.attr(\"y\", rectData.y);\n  rectElem.attr(\"fill\", rectData.fill);\n  rectElem.attr(\"stroke\", rectData.stroke);\n  rectElem.attr(\"width\", rectData.width);\n  rectElem.attr(\"height\", rectData.height);\n  rectElem.attr(\"rx\", rectData.rx);\n  rectElem.attr(\"ry\", rectData.ry);\n  if (rectData.class !== void 0) {\n    rectElem.attr(\"class\", rectData.class);\n  }\n  return rectElem;\n};\nconst drawFace = function(element, faceData) {\n  const radius = 15;\n  const circleElement = element.append(\"circle\").attr(\"cx\", faceData.cx).attr(\"cy\", faceData.cy).attr(\"class\", \"face\").attr(\"r\", radius).attr(\"stroke-width\", 2).attr(\"overflow\", \"visible\");\n  const face = element.append(\"g\");\n  face.append(\"circle\").attr(\"cx\", faceData.cx - radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n  face.append(\"circle\").attr(\"cx\", faceData.cx + radius / 3).attr(\"cy\", faceData.cy - radius / 3).attr(\"r\", 1.5).attr(\"stroke-width\", 2).attr(\"fill\", \"#666\").attr(\"stroke\", \"#666\");\n  function smile(face2) {\n    const arc$1 = arc().startAngle(Math.PI / 2).endAngle(3 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 2) + \")\");\n  }\n  function sad(face2) {\n    const arc$1 = arc().startAngle(3 * Math.PI / 2).endAngle(5 * (Math.PI / 2)).innerRadius(radius / 2).outerRadius(radius / 2.2);\n    face2.append(\"path\").attr(\"class\", \"mouth\").attr(\"d\", arc$1).attr(\"transform\", \"translate(\" + faceData.cx + \",\" + (faceData.cy + 7) + \")\");\n  }\n  function ambivalent(face2) {\n    face2.append(\"line\").attr(\"class\", \"mouth\").attr(\"stroke\", 2).attr(\"x1\", faceData.cx - 5).attr(\"y1\", faceData.cy + 7).attr(\"x2\", faceData.cx + 5).attr(\"y2\", faceData.cy + 7).attr(\"class\", \"mouth\").attr(\"stroke-width\", \"1px\").attr(\"stroke\", \"#666\");\n  }\n  if (faceData.score > 3) {\n    smile(face);\n  } else if (faceData.score < 3) {\n    sad(face);\n  } else {\n    ambivalent(face);\n  }\n  return circleElement;\n};\nconst drawCircle = function(element, circleData) {\n  const circleElement = element.append(\"circle\");\n  circleElement.attr(\"cx\", circleData.cx);\n  circleElement.attr(\"cy\", circleData.cy);\n  circleElement.attr(\"class\", \"actor-\" + circleData.pos);\n  circleElement.attr(\"fill\", circleData.fill);\n  circleElement.attr(\"stroke\", circleData.stroke);\n  circleElement.attr(\"r\", circleData.r);\n  if (circleElement.class !== void 0) {\n    circleElement.attr(\"class\", circleElement.class);\n  }\n  if (circleData.title !== void 0) {\n    circleElement.append(\"title\").text(circleData.title);\n  }\n  return circleElement;\n};\nconst drawText = function(elem, textData) {\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, \" \");\n  const textElem = elem.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.attr(\"class\", \"legend\");\n  textElem.style(\"text-anchor\", textData.anchor);\n  if (textData.class !== void 0) {\n    textElem.attr(\"class\", textData.class);\n  }\n  const span = textElem.append(\"tspan\");\n  span.attr(\"x\", textData.x + textData.textMargin * 2);\n  span.text(nText);\n  return textElem;\n};\nconst drawLabel = function(elem, txtObject) {\n  function genPoints(x, y, width, height, cut) {\n    return x + \",\" + y + \" \" + (x + width) + \",\" + y + \" \" + (x + width) + \",\" + (y + height - cut) + \" \" + (x + width - cut * 1.2) + \",\" + (y + height) + \" \" + x + \",\" + (y + height);\n  }\n  const polygon = elem.append(\"polygon\");\n  polygon.attr(\"points\", genPoints(txtObject.x, txtObject.y, 50, 20, 7));\n  polygon.attr(\"class\", \"labelBox\");\n  txtObject.y = txtObject.y + txtObject.labelMargin;\n  txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n  drawText(elem, txtObject);\n};\nconst drawSection = function(elem, section, conf) {\n  const g = elem.append(\"g\");\n  const rect = getNoteRect();\n  rect.x = section.x;\n  rect.y = section.y;\n  rect.fill = section.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = \"journey-section section-type-\" + section.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n  _drawTextCandidateFunc(conf)(\n    section.text,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"journey-section section-type-\" + section.num },\n    conf,\n    section.colour\n  );\n};\nlet taskCount = -1;\nconst drawTask = function(elem, task, conf) {\n  const center = task.x + conf.width / 2;\n  const g = elem.append(\"g\");\n  taskCount++;\n  const maxHeight = 300 + 5 * 30;\n  g.append(\"line\").attr(\"id\", \"task\" + taskCount).attr(\"x1\", center).attr(\"y1\", task.y).attr(\"x2\", center).attr(\"y2\", maxHeight).attr(\"class\", \"task-line\").attr(\"stroke-width\", \"1px\").attr(\"stroke-dasharray\", \"4 2\").attr(\"stroke\", \"#666\");\n  drawFace(g, {\n    cx: center,\n    cy: 300 + (5 - task.score) * 30,\n    score: task.score\n  });\n  const rect = getNoteRect();\n  rect.x = task.x;\n  rect.y = task.y;\n  rect.fill = task.fill;\n  rect.width = conf.width;\n  rect.height = conf.height;\n  rect.class = \"task task-type-\" + task.num;\n  rect.rx = 3;\n  rect.ry = 3;\n  drawRect(g, rect);\n  task.x + 14;\n  _drawTextCandidateFunc(conf)(\n    task.task,\n    g,\n    rect.x,\n    rect.y,\n    rect.width,\n    rect.height,\n    { class: \"task\" },\n    conf,\n    task.colour\n  );\n};\nconst drawBackgroundRect = function(elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    class: \"rect\"\n  });\n  rectElem.lower();\n};\nconst getTextObj = function() {\n  return {\n    x: 0,\n    y: 0,\n    fill: void 0,\n    \"text-anchor\": \"start\",\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0\n  };\n};\nconst getNoteRect = function() {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    anchor: \"start\",\n    height: 100,\n    rx: 0,\n    ry: 0\n  };\n};\nconst _drawTextCandidateFunc = function() {\n  function byText(content, g, x, y, width, height, textAttrs, colour) {\n    const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y + height / 2 + 5).style(\"font-color\", colour).style(\"text-anchor\", \"middle\").text(content);\n    _setTextAttrs(text, textAttrs);\n  }\n  function byTspan(content, g, x, y, width, height, textAttrs, conf, colour) {\n    const { taskFontSize, taskFontFamily } = conf;\n    const lines = content.split(/<br\\s*\\/?>/gi);\n    for (let i = 0; i < lines.length; i++) {\n      const dy = i * taskFontSize - taskFontSize * (lines.length - 1) / 2;\n      const text = g.append(\"text\").attr(\"x\", x + width / 2).attr(\"y\", y).attr(\"fill\", colour).style(\"text-anchor\", \"middle\").style(\"font-size\", taskFontSize).style(\"font-family\", taskFontFamily);\n      text.append(\"tspan\").attr(\"x\", x + width / 2).attr(\"dy\", dy).text(lines[i]);\n      text.attr(\"y\", y + height / 2).attr(\"dominant-baseline\", \"central\").attr(\"alignment-baseline\", \"central\");\n      _setTextAttrs(text, textAttrs);\n    }\n  }\n  function byFo(content, g, x, y, width, height, textAttrs, conf) {\n    const body = g.append(\"switch\");\n    const f = body.append(\"foreignObject\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", width).attr(\"height\", height).attr(\"position\", \"fixed\");\n    const text = f.append(\"xhtml:div\").style(\"display\", \"table\").style(\"height\", \"100%\").style(\"width\", \"100%\");\n    text.append(\"div\").attr(\"class\", \"label\").style(\"display\", \"table-cell\").style(\"text-align\", \"center\").style(\"vertical-align\", \"middle\").text(content);\n    byTspan(content, body, x, y, width, height, textAttrs, conf);\n    _setTextAttrs(text, textAttrs);\n  }\n  function _setTextAttrs(toText, fromTextAttrsDict) {\n    for (const key in fromTextAttrsDict) {\n      if (key in fromTextAttrsDict) {\n        toText.attr(key, fromTextAttrsDict[key]);\n      }\n    }\n  }\n  return function(conf) {\n    return conf.textPlacement === \"fo\" ? byFo : conf.textPlacement === \"old\" ? byText : byTspan;\n  };\n}();\nconst initGraphics = function(graphics) {\n  graphics.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"refX\", 5).attr(\"refY\", 2).attr(\"markerWidth\", 6).attr(\"markerHeight\", 4).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0,0 V 4 L6,2 Z\");\n};\nfunction wrap(text, width) {\n  text.each(function() {\n    var text2 = select(this), words = text2.text().split(/(\\s+|<br>)/).reverse(), word, line = [], lineHeight = 1.1, y = text2.attr(\"y\"), dy = parseFloat(text2.attr(\"dy\")), tspan = text2.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n    for (let j = 0; j < words.length; j++) {\n      word = words[words.length - 1 - j];\n      line.push(word);\n      tspan.text(line.join(\" \").trim());\n      if (tspan.node().getComputedTextLength() > width || word === \"<br>\") {\n        line.pop();\n        tspan.text(line.join(\" \").trim());\n        if (word === \"<br>\") {\n          line = [\"\"];\n        } else {\n          line = [word];\n        }\n        tspan = text2.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", lineHeight + \"em\").text(word);\n      }\n    }\n  });\n}\nconst drawNode = function(elem, node, fullSection, conf) {\n  const section = fullSection % MAX_SECTIONS - 1;\n  const nodeElem = elem.append(\"g\");\n  node.section = section;\n  nodeElem.attr(\n    \"class\",\n    (node.class ? node.class + \" \" : \"\") + \"timeline-node \" + (\"section-\" + section)\n  );\n  const bkgElem = nodeElem.append(\"g\");\n  const textElem = nodeElem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  node.height = bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n  node.height = Math.max(node.height, node.maxHeight);\n  node.width = node.width + 2 * node.padding;\n  textElem.attr(\"transform\", \"translate(\" + node.width / 2 + \", \" + node.padding / 2 + \")\");\n  defaultBkg(bkgElem, node, section);\n  return node;\n};\nconst getVirtualNodeHeight = function(elem, node, conf) {\n  const textElem = elem.append(\"g\");\n  const txt = textElem.append(\"text\").text(node.descr).attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").call(wrap, node.width);\n  const bbox = txt.node().getBBox();\n  const fontSize = conf.fontSize && conf.fontSize.replace ? conf.fontSize.replace(\"px\", \"\") : conf.fontSize;\n  textElem.remove();\n  return bbox.height + fontSize * 1.1 * 0.5 + node.padding;\n};\nconst defaultBkg = function(elem, node, section) {\n  const rd = 5;\n  elem.append(\"path\").attr(\"id\", \"node-\" + node.id).attr(\"class\", \"node-bkg node-\" + node.type).attr(\n    \"d\",\n    `M0 ${node.height - rd} v${-node.height + 2 * rd} q0,-5 5,-5 h${node.width - 2 * rd} q5,0 5,5 v${node.height - rd} H0 Z`\n  );\n  elem.append(\"line\").attr(\"class\", \"node-line-\" + section).attr(\"x1\", 0).attr(\"y1\", node.height).attr(\"x2\", node.width).attr(\"y2\", node.height);\n};\nconst svgDraw = {\n  drawRect,\n  drawCircle,\n  drawSection,\n  drawText,\n  drawLabel,\n  drawTask,\n  drawBackgroundRect,\n  getTextObj,\n  getNoteRect,\n  initGraphics,\n  drawNode,\n  getVirtualNodeHeight\n};\nconst draw = function(text, id, version, diagObj) {\n  var _a, _b;\n  const conf = getConfig();\n  const LEFT_MARGIN = conf.leftMargin ?? 50;\n  log.debug(\"timeline\", diagObj.db);\n  const securityLevel = conf.securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(\"#\" + id);\n  svg.append(\"g\");\n  const tasks2 = diagObj.db.getTasks();\n  const title = diagObj.db.getCommonDb().getDiagramTitle();\n  log.debug(\"task\", tasks2);\n  svgDraw.initGraphics(svg);\n  const sections2 = diagObj.db.getSections();\n  log.debug(\"sections\", sections2);\n  let maxSectionHeight = 0;\n  let maxTaskHeight = 0;\n  let depthY = 0;\n  let sectionBeginY = 0;\n  let masterX = 50 + LEFT_MARGIN;\n  let masterY = 50;\n  sectionBeginY = 50;\n  let sectionNumber = 0;\n  let hasSections = true;\n  sections2.forEach(function(section) {\n    const sectionNode = {\n      number: sectionNumber,\n      descr: section,\n      section: sectionNumber,\n      width: 150,\n      padding: 20,\n      maxHeight: maxSectionHeight\n    };\n    const sectionHeight = svgDraw.getVirtualNodeHeight(svg, sectionNode, conf);\n    log.debug(\"sectionHeight before draw\", sectionHeight);\n    maxSectionHeight = Math.max(maxSectionHeight, sectionHeight + 20);\n  });\n  let maxEventCount = 0;\n  let maxEventLineLength = 0;\n  log.debug(\"tasks.length\", tasks2.length);\n  for (const [i, task] of tasks2.entries()) {\n    const taskNode = {\n      number: i,\n      descr: task,\n      section: task.section,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight\n    };\n    const taskHeight = svgDraw.getVirtualNodeHeight(svg, taskNode, conf);\n    log.debug(\"taskHeight before draw\", taskHeight);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight + 20);\n    maxEventCount = Math.max(maxEventCount, task.events.length);\n    let maxEventLineLengthTemp = 0;\n    for (let j = 0; j < task.events.length; j++) {\n      const event = task.events[j];\n      const eventNode = {\n        descr: event,\n        section: task.section,\n        number: task.section,\n        width: 150,\n        padding: 20,\n        maxHeight: 50\n      };\n      maxEventLineLengthTemp += svgDraw.getVirtualNodeHeight(svg, eventNode, conf);\n    }\n    maxEventLineLength = Math.max(maxEventLineLength, maxEventLineLengthTemp);\n  }\n  log.debug(\"maxSectionHeight before draw\", maxSectionHeight);\n  log.debug(\"maxTaskHeight before draw\", maxTaskHeight);\n  if (sections2 && sections2.length > 0) {\n    sections2.forEach((section) => {\n      const tasksForSection = tasks2.filter((task) => task.section === section);\n      const sectionNode = {\n        number: sectionNumber,\n        descr: section,\n        section: sectionNumber,\n        width: 200 * Math.max(tasksForSection.length, 1) - 50,\n        padding: 20,\n        maxHeight: maxSectionHeight\n      };\n      log.debug(\"sectionNode\", sectionNode);\n      const sectionNodeWrapper = svg.append(\"g\");\n      const node = svgDraw.drawNode(sectionNodeWrapper, sectionNode, sectionNumber, conf);\n      log.debug(\"sectionNode output\", node);\n      sectionNodeWrapper.attr(\"transform\", `translate(${masterX}, ${sectionBeginY})`);\n      masterY += maxSectionHeight + 50;\n      if (tasksForSection.length > 0) {\n        drawTasks(\n          svg,\n          tasksForSection,\n          sectionNumber,\n          masterX,\n          masterY,\n          maxTaskHeight,\n          conf,\n          maxEventCount,\n          maxEventLineLength,\n          maxSectionHeight,\n          false\n        );\n      }\n      masterX += 200 * Math.max(tasksForSection.length, 1);\n      masterY = sectionBeginY;\n      sectionNumber++;\n    });\n  } else {\n    hasSections = false;\n    drawTasks(\n      svg,\n      tasks2,\n      sectionNumber,\n      masterX,\n      masterY,\n      maxTaskHeight,\n      conf,\n      maxEventCount,\n      maxEventLineLength,\n      maxSectionHeight,\n      true\n    );\n  }\n  const box = svg.node().getBBox();\n  log.debug(\"bounds\", box);\n  if (title) {\n    svg.append(\"text\").text(title).attr(\"x\", box.width / 2 - LEFT_MARGIN).attr(\"font-size\", \"4ex\").attr(\"font-weight\", \"bold\").attr(\"y\", 20);\n  }\n  depthY = hasSections ? maxSectionHeight + maxTaskHeight + 150 : maxTaskHeight + 100;\n  const lineWrapper = svg.append(\"g\").attr(\"class\", \"lineWrapper\");\n  lineWrapper.append(\"line\").attr(\"x1\", LEFT_MARGIN).attr(\"y1\", depthY).attr(\"x2\", box.width + 3 * LEFT_MARGIN).attr(\"y2\", depthY).attr(\"stroke-width\", 4).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\");\n  setupGraphViewbox(\n    void 0,\n    svg,\n    ((_a = conf.timeline) == null ? void 0 : _a.padding) ?? 50,\n    ((_b = conf.timeline) == null ? void 0 : _b.useMaxWidth) ?? false\n  );\n};\nconst drawTasks = function(diagram2, tasks2, sectionColor, masterX, masterY, maxTaskHeight, conf, maxEventCount, maxEventLineLength, maxSectionHeight, isWithoutSections) {\n  var _a;\n  for (const task of tasks2) {\n    const taskNode = {\n      descr: task.task,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: maxTaskHeight\n    };\n    log.debug(\"taskNode\", taskNode);\n    const taskWrapper = diagram2.append(\"g\").attr(\"class\", \"taskWrapper\");\n    const node = svgDraw.drawNode(taskWrapper, taskNode, sectionColor, conf);\n    const taskHeight = node.height;\n    log.debug(\"taskHeight after draw\", taskHeight);\n    taskWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n    maxTaskHeight = Math.max(maxTaskHeight, taskHeight);\n    if (task.events) {\n      const lineWrapper = diagram2.append(\"g\").attr(\"class\", \"lineWrapper\");\n      let lineLength = maxTaskHeight;\n      masterY += 100;\n      lineLength = lineLength + drawEvents(diagram2, task.events, sectionColor, masterX, masterY, conf);\n      masterY -= 100;\n      lineWrapper.append(\"line\").attr(\"x1\", masterX + 190 / 2).attr(\"y1\", masterY + maxTaskHeight).attr(\"x2\", masterX + 190 / 2).attr(\n        \"y2\",\n        masterY + maxTaskHeight + (isWithoutSections ? maxTaskHeight : maxSectionHeight) + maxEventLineLength + 120\n      ).attr(\"stroke-width\", 2).attr(\"stroke\", \"black\").attr(\"marker-end\", \"url(#arrowhead)\").attr(\"stroke-dasharray\", \"5,5\");\n    }\n    masterX = masterX + 200;\n    if (isWithoutSections && !((_a = conf.timeline) == null ? void 0 : _a.disableMulticolor)) {\n      sectionColor++;\n    }\n  }\n  masterY = masterY - 10;\n};\nconst drawEvents = function(diagram2, events, sectionColor, masterX, masterY, conf) {\n  let maxEventHeight = 0;\n  const eventBeginY = masterY;\n  masterY = masterY + 100;\n  for (const event of events) {\n    const eventNode = {\n      descr: event,\n      section: sectionColor,\n      number: sectionColor,\n      width: 150,\n      padding: 20,\n      maxHeight: 50\n    };\n    log.debug(\"eventNode\", eventNode);\n    const eventWrapper = diagram2.append(\"g\").attr(\"class\", \"eventWrapper\");\n    const node = svgDraw.drawNode(eventWrapper, eventNode, sectionColor, conf);\n    const eventHeight = node.height;\n    maxEventHeight = maxEventHeight + eventHeight;\n    eventWrapper.attr(\"transform\", `translate(${masterX}, ${masterY})`);\n    masterY = masterY + 10 + eventHeight;\n  }\n  masterY = eventBeginY;\n  return maxEventHeight;\n};\nconst renderer = {\n  setConf: () => {\n  },\n  draw\n};\nconst genSections = (options) => {\n  let sections2 = \"\";\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    options[\"lineColor\" + i] = options[\"lineColor\" + i] || options[\"cScaleInv\" + i];\n    if (isDark(options[\"lineColor\" + i])) {\n      options[\"lineColor\" + i] = lighten(options[\"lineColor\" + i], 20);\n    } else {\n      options[\"lineColor\" + i] = darken(options[\"lineColor\" + i], 20);\n    }\n  }\n  for (let i = 0; i < options.THEME_COLOR_LIMIT; i++) {\n    const sw = \"\" + (17 - 3 * i);\n    sections2 += `\n    .section-${i - 1} rect, .section-${i - 1} path, .section-${i - 1} circle, .section-${i - 1} path  {\n      fill: ${options[\"cScale\" + i]};\n    }\n    .section-${i - 1} text {\n     fill: ${options[\"cScaleLabel\" + i]};\n    }\n    .node-icon-${i - 1} {\n      font-size: 40px;\n      color: ${options[\"cScaleLabel\" + i]};\n    }\n    .section-edge-${i - 1}{\n      stroke: ${options[\"cScale\" + i]};\n    }\n    .edge-depth-${i - 1}{\n      stroke-width: ${sw};\n    }\n    .section-${i - 1} line {\n      stroke: ${options[\"cScaleInv\" + i]} ;\n      stroke-width: 3;\n    }\n\n    .lineWrapper line{\n      stroke: ${options[\"cScaleLabel\" + i]} ;\n    }\n\n    .disabled, .disabled circle, .disabled text {\n      fill: lightgray;\n    }\n    .disabled text {\n      fill: #efefef;\n    }\n    `;\n  }\n  return sections2;\n};\nconst getStyles = (options) => `\n  .edge {\n    stroke-width: 3;\n  }\n  ${genSections(options)}\n  .section-root rect, .section-root path, .section-root circle  {\n    fill: ${options.git0};\n  }\n  .section-root text {\n    fill: ${options.gitBranchLabel0};\n  }\n  .icon-container {\n    height:100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .edge {\n    fill: none;\n  }\n  .eventWrapper  {\n   filter: brightness(120%);\n  }\n`;\nconst styles = getStyles;\nconst diagram = {\n  db,\n  renderer,\n  parser: parser$1,\n  styles\n};\nexport {\n  diagram\n};\n"],"x_google_ignoreList":[0]}