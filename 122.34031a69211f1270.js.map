{"version":3,"file":"122.34031a69211f1270.js","mappings":"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","names":["__WEBPACK_EXTERNAL_MODULE__140__","module","exports","require","__webpack_modules__","Object","assign","bind","tgt","_len","arguments","length","srcs","Array","_key","forEach","src","keys","k","__unused_webpack_exports","__webpack_require__","_slicedToArray","arr","i","isArray","Symbol","iterator","sliceIterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","return","TypeError","LinkedList","layoutBase","auxiliary","nodes","nodesMap","id","filter","ele","parent","cy","eles","topMostNodes","dummyNodes","queue","visited","Set","visitedTopMostNodes","currentNeighbor","minDegreeNode","minDegree","isConnected","count","nodesConnectedToDummy","components","_loop","cmpt","collection","currentNode","childrenOfCurrentNode","merge","descendants","intersection","node","add","_loop2","shift","neighborNodes","neighborhood","edgesWith","neighborNode","union","ancestors","has","connectedEdges","e","source","target","temp","difference","set","size","originalCenter","componentResult","options","fixedNodeConstraint","minXCoord","Number","POSITIVE_INFINITY","maxXCoord","NEGATIVE_INFINITY","minYCoord","maxYCoord","quality","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","nodeIndexes","_ref2","cyNode","getElementById","nodeBB","boundingBox","leftX","xCoords","w","rightX","topY","yCoords","h","bottomY","diffOnX","x","diffOnY","y","map","item","getRect","width","height","_diffOnX","_diffOnY","setCenter","getCenterX","getCenterY","parentNode","left","MAX_SAFE_INTEGER","right","MIN_SAFE_INTEGER","top","bottom","nodeLeft","nodeRight","nodeTop","nodeBottom","not","s","get","topLeftX","topLeftY","parentsWithoutChildren","check","children","child","css","aux","CoSELayout","CoSENode","PointD","DimensionD","LayoutConstants","FDLayoutConstants","CoSEConstants","coseLayout","spectralResult","edges","idToLNode","randomize","isFn","fn","optFn","opt","calcParentsWithoutChildren","nestingFactor","PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR","gravity","DEFAULT_GRAVITY_STRENGTH","numIter","MAX_ITERATIONS","gravityRange","DEFAULT_GRAVITY_RANGE_FACTOR","gravityCompound","DEFAULT_COMPOUND_GRAVITY_STRENGTH","gravityRangeCompound","DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR","initialEnergyOnIncremental","DEFAULT_COOLING_FACTOR_INCREMENTAL","tilingCompareBy","TILING_COMPARE_BY","QUALITY","NODE_DIMENSIONS_INCLUDE_LABELS","nodeDimensionsIncludeLabels","DEFAULT_INCREMENTAL","ANIMATE","animate","TILE","tile","TILING_PADDING_VERTICAL","tilingPaddingVertical","call","TILING_PADDING_HORIZONTAL","tilingPaddingHorizontal","PURE_INCREMENTAL","DEFAULT_UNIFORM_LEAF_NODE_SIZES","uniformNodeDimensions","step","TRANSFORM_ON_CONSTRAINT_HANDLING","ENFORCE_CONSTRAINTS","APPLY_LAYOUT","TREE_REDUCTION_ON_INCREMENTAL","alignmentConstraint","relativePlacementConstraint","layout","gm","newGraphManager","processChildrenList","theChild","children_of_children","theNode","dimensions","layoutDimensions","outerWidth","outerHeight","isParent","parentInfo","calcBoundingBox","graphManager","parseFloat","position","this","data","nodeRepulsion","paddingLeft","parseInt","paddingTop","paddingRight","paddingBottom","labelWidth","includeLabels","includeNodes","includeOverlays","labelHeight","labelPosVertical","labelPosHorizontal","isNaN","rect","getGraphManager","newGraph","addRoot","getTopMostNodes","idealLengthTotal","edgeCount","edge","sourceNode","targetNode","getEdgesBetween","e1","newEdge","idealLength","idealEdgeLength","edgeElasticity","DEFAULT_EDGE_LENGTH","MIN_REPULSION_DIST","DEFAULT_RADIAL_SEPARATION","processEdges","constraints","runLayout","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","spectralLayout","defaults","freeze","animationDuration","animationEasing","fit","padding","packComponents","samplingType","sampleSize","nodeSeparation","piTol","ready","stop","Layout","_classCallCheck","instance","coseResult","componentCenters","vertical","horizontal","layUtil","packingEnabled","layoutUtilities","connectComponents","component","x1","y1","toBeTiledNodes","tempSpectralResult","Map","indexesToBeDeleted","index","_boundingBox","splice","relocateComponent","componentsEvaluated","subgraphs","hiddenEles","subgraph","nodeIndex","boundingbox","getLeft","getTop","getWidth","getHeight","sourceNodeIndex","targetNodeIndex","sourceCenter","targetCenter","_parentInfo","startX","startY","endX","endY","shiftResult","shifts","result","newXCoords","dx","newYCoords","dy","_count","nodeRectangle","getPositions","pos","theId","_pos","_hiddenEles","layoutPositions","console","log","Matrix","SVD","parentNodes","parentChildMap","allNodesNeighborhood","samplesColumn","minDistancesColumn","C","PHI","INV","nodeSize","infinity","small","BFS","pivot","samplingMethod","path","front","back","current","distance","max_dist","max_ind","neighbors","_i2","_i3","_i13","min","ele2","eleIndex","disconnectedId","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_i14","_i15","sample","Math","floor","random","_i4","_i5","flag","randomSampleCR","_i6","j","_i7","_i8","_j","allBFS","SVDResult","svd","a_q","S","a_u","U","a_v","V","max_s","a_Sig","multMat","transpose","theta1","theta2","Y1","Y2","V1","V2","normalize","previous","_i9","multGamma","multL","dotProduct","abs","_i10","_i11","minusOp","multCons","_i12","sqrt","powerIteration","firstNode","firstNodePos","firstNodeWidth","secondNodeWidth","impl","register","cytoscape","__webpack_module_cache__","moduleId","cachedModule","ArchitectureDirectionName","L","R","T","B","ArchitectureDirectionArrow","__name","scale","ArchitectureDirectionArrowShift","orig","arrowSize","_arrowSize","getOppositeArchitectureDirection","isArchitectureDirectionX","isArchitectureDirection","isArchitectureDirectionY","isArchitectureDirectionXY","a","b","aX_bY","aY_bX","isArchitecturePairXY","pair","lhs","rhs","isValidArchitectureDirectionPair","getArchitectureDirectionPair","sourceDir","targetDir","shiftPositionByArchitectureDirectionPair","getArchitectureDirectionXYFactors","getArchitectureDirectionAlignment","isArchitectureService","type","isArchitectureJunction","edgeData","nodeData","DEFAULT_ARCHITECTURE_CONFIG","defaultConfig_default","architecture","ArchitectureDB","constructor","groups","registeredIds","elements","setAccTitle","getAccTitle","setDiagramTitle","getDiagramTitle","getAccDescription","setAccDescription","clear","dataStructures","addService","icon","in","title","iconText","Error","getServices","values","addJunction","getJunctions","getNodes","getNode","addGroup","getGroups","addEdge","lhsId","rhsId","lhsDir","rhsDir","lhsInto","rhsInto","lhsGroup","rhsGroup","String","lhsGroupId","rhsGroupId","getEdges","getDataStructures","groupAlignments","adjList","entries","reduce","prevOuter","service","prevInner","alignment","firstId","G","notVisited","prev","mt","startingId","spatialMap","ht","adj","posX","posY","dir","spatialMaps","setElementForId","element","getConfig","cleanAndMerge","getConfigField","field","static","_staticBlock","_setFunctionName","populateDb","ast","db","populateCommonDb","group","services","junctions","parser","yy","parse","_ref","_asyncToGenerator","input","debug","_x","apply","architectureStyles_default","archEdgeWidth","archEdgeColor","archEdgeArrowColor","archGroupBorderColor","archGroupBorderWidth","wrapIcon","architectureIcons","prefix","icons","database","body","server","disk","internet","cloud","unknown","unknownIcon","blank","drawEdges","edgesEl","iconSize","halfIconSize","halfArrowSize","Promise","all","_ref3","sourceArrow","sourceGroup","targetArrow","targetGroup","label","sourceEndpoint","midX","midY","midpoint","targetEndpoint","groupEdgeShift","_private","rscratch","g","insert","attr","xShift","yShift","axis","textElem","append","createText","useHtmlLabels","classes","getConfig2","bboxOrig","getBoundingClientRect","bboxNew","_x5","_x2","_x3","_x4","drawGroups","_ref4","groupsEl","groupIconSize","fontSize","_ref5","groupLabelContainer","shiftedX1","shiftedY1","bkgElem","html","getIconSVG","fallbackPrefix","_x9","_x6","_x7","_x8","drawServices","_ref6","elem","config","serviceElem","divElem","sanitizeText","window","getComputedStyle","getPropertyValue","replace","_groups","getBBox","_x0","_x1","_x10","drawJunctions","junction","junctionElem","addServices","addJunctions","positionNodes","addGroups","addEdges","parsedEdge","edgeType","getAlignments","flattenAlignments","alignmentObj","alignmentDir","alignments2","cnt","aGroupId","aNodeIds","bGroupId","bNodeIds","alignments","horizontalAlignments","verticalAlignments","nodeGroup","horiz","vert","prevHoriz","prevVert","getRelativeConstraints","relativeConstraints","posToStr","strToPos","split","p","invSpatialMap","fromEntries","directions","curr","currId","currPos","newPos","newId","gap","layoutArchitecture","resolve","renderEl","select","container","document","style","selector","name","x2","y2","remove","styleEnabled","nodeA","nodeB","connectedNodes","parentA","parentB","one","getSegmentWeights","pointX","pointY","W","D","sX","sY","tX","tY","pow","delta1","delta2","distances","weights","startBatch","sEP","tEP","endBatch","run","info","registerIconPacks","use","fcose","renderer","draw","_ref7","text","_version","diagObj","ds","svg","selectSvgElement","edgesElem","servicesElem","groupElem","setupGraphViewbox","_x11","_x12","_x13","_x14","diagram","styles","modules","installedModules","l","m","c","d","getter","o","n","__esModule","default","object","property","hasOwnProperty","DEFAULT_CREATE_BENDS_AS_NEEDED","DEFAULT_ANIMATION_ON_LAYOUT","DEFAULT_ANIMATION_DURING_LAYOUT","DEFAULT_ANIMATION_PERIOD","DEFAULT_GRAPH_MARGIN","SIMPLE_NODE_HALF_SIZE","SIMPLE_NODE_SIZE","EMPTY_COMPOUND_NODE_SIZE","MIN_EDGE_LENGTH","INITIAL_WORLD_BOUNDARY","WORLD_BOUNDARY","WORLD_CENTER_X","WORLD_CENTER_Y","LGraphObject","IGeometry","IMath","LEdge","vEdge","isOverlapingSourceAndTarget","vGraphObject","bendpoints","prop","create","getSource","getTarget","isInterGraph","getLength","getBendpoints","getLca","lca","getSourceInLca","sourceInLca","getTargetInLca","targetInLca","getOtherEnd","getOtherEndInGraph","graph","otherEnd","root","getRoot","getOwner","getParent","updateLength","clipPointCoordinates","getIntersection","lengthX","lengthY","sign","updateLengthSimple","Integer","RectangleD","RandomSeed","LNode","loc","vNode","estimatedSize","MIN_VALUE","inclusionTreeDepth","MAX_VALUE","getChild","owner","setWidth","setHeight","getCenter","getLocation","getDiagonal","getHalfTheDiagonal","setRect","upperLeft","dimension","cx","setLocation","moveBy","getEdgeListToNode","to","edgeList","self","other","getNeighborsList","withChildren","withNeighborsList","getNoOfChildren","noOfChildren","getEstimatedSize","calcEstimatedSize","scatter","randomCenterX","randomCenterY","minX","maxX","nextDouble","minY","maxY","updateBounds","childGraph","getRight","getBottom","getInclusionTreeDepth","transform","trans","leftTop","vLeftTop","inverseTransformPoint","DEFAULT_SPRING_STRENGTH","DEFAULT_REPULSION_STRENGTH","DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION","DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION","COOLING_ADAPTATION_FACTOR","ADAPTATION_LOWER_NODE_LIMIT","ADAPTATION_UPPER_NODE_LIMIT","MAX_NODE_DISPLACEMENT","MAX_NODE_DISPLACEMENT_INCREMENTAL","CONVERGENCE_CHECK_PERIOD","GRID_CALCULATION_CHECK_PERIOD","getX","getY","setX","setY","getDifference","pt","getCopy","translate","dim","LGraphManager","Point","LGraph","obj2","vGraph","margin","obj1","newNode","indexOf","obj","edgesToBeRemoved","slice","sourceIndex","targetIndex","updateLeftTop","lNode","recursive","boundingRect","calculateBounds","updateConnected","neighborEdges","noOfVisitedInThisGraph","visitedNode","graphs","ngraph","nnode","setRootGraph","rootGraph","sourceGraph","targetGraph","lObj","concat","nodesToBeRemoved","getGraphs","getAllNodes","allNodes","nodeList","resetAllNodes","resetAllEdges","allEdges","resetAllNodesToApplyGravitation","allNodesToApplyGravitation","getAllEdges","getAllNodesToApplyGravitation","setAllNodesToApplyGravitation","getLayout","isOneAncestorOfOther","secondNode","ownerGraph","calcLowestCommonAncestors","sourceAncestorGraph","targetAncestorGraph","calcLowestCommonAncestor","firstOwnerGraph","secondOwnerGraph","calcInclusionTreeDepths","depth","includesInvalidEdge","edgesToRemove","calcSeparationAmount","rectA","rectB","overlapAmount","separationBuffer","intersects","decideDirectionsForOverlappingNodes","max","slope","moveByY","moveByX","getIntersection2","p1x","p1y","p2x","p2y","topLeftAx","topLeftAy","topRightAx","bottomLeftAx","bottomLeftAy","bottomRightAx","halfWidthA","getWidthHalf","halfHeightA","getHeightHalf","topLeftBx","topLeftBy","topRightBx","bottomLeftBx","bottomLeftBy","bottomRightBx","halfWidthB","halfHeightB","clipPointAFound","clipPointBFound","slopeA","slopeB","slopePrime","cardinalDirectionA","cardinalDirectionB","tempPointAy","tempPointBy","getCardinalDirection","line","s1","s2","f1","f2","a1","a2","b1","b2","c1","c2","denom","x3","y3","x4","y4","angleOfVector","Cx","Cy","Nx","Ny","C_angle","atan","PI","TWO_PI","ONE_AND_HALF_PI","HALF_PI","doIntersect","p1","p2","p3","p4","q","r","det","lambda","gamma","findCircleLineIntersections","Ex","Ey","Lx","Ly","t1","t2","THREE_PI","ceil","nodeFrom","list","head","tail","_remove","vals","_this","v","val","otherNode","move","equals","toString","getMinX","getMaxX","getMinY","getMaxY","_typeof","UniqueIDGeneretor","lastID","createID","isPrimitive","uniqueID","getString","arg","_toConsumableArray","arr2","from","Transform","Emitter","isRemoteUse","layoutQuality","createBendsAsNeeded","incremental","animationOnLayout","animationDuringLayout","animationPeriod","uniformLeafNodeSizes","edgeToDummyNodes","isLayoutFinished","isSubLayout","RANDOM_SEED","checkLayoutSuccess","isLayoutSuccessfull","tilingPreLayout","initParameters","doPostLayout","tilingPostLayout","update","update2","createBendpointsFromDummyNodes","newLeftTop","setWorldOrgX","setWorldOrgY","setDeviceOrgX","setDeviceOrgY","positionNodesRandomly","getFlatForest","flatForest","isForest","isFlat","toBeVisited","parents","unProcessedNodes","createDummyNodesForBendpoints","dummyNode","Dimension","dummyEdge","lEdge","ebp","sliderValue","defaultValue","minDiv","maxMul","findCenterOfTree","removedNodes","remainingDegrees","foundCenter","centerNode","degree","tempList","tempList2","neighbour","newDegree","setGraphManager","seed","sin","lworldOrgX","lworldOrgY","ldeviceOrgX","ldeviceOrgY","lworldExtX","lworldExtY","ldeviceExtX","ldeviceExtY","getWorldOrgX","wox","getWorldOrgY","woy","getWorldExtX","setWorldExtX","wex","getWorldExtY","setWorldExtY","wey","getDeviceOrgX","dox","getDeviceOrgY","doy","getDeviceExtX","setDeviceExtX","dex","getDeviceExtY","setDeviceExtY","dey","transformX","xDevice","worldExtX","transformY","yDevice","worldExtY","inverseTransformX","xWorld","deviceExtX","inverseTransformY","yWorld","deviceExtY","inPoint","FDLayout","useSmartIdealEdgeLengthCalculation","gravityConstant","compoundGravityConstant","gravityRangeFactor","compoundGravityRangeFactor","displacementThresholdPerNode","coolingFactor","initialCoolingFactor","totalDisplacement","oldTotalDisplacement","maxIterations","totalIterations","notAnimatedIterations","useFRGridVariant","grid","calcIdealEdgeLengths","originalIdealLength","lcaDepth","sizeOfSourceInLca","sizeOfTargetInLca","initSpringEmbedder","maxNodeDisplacement","totalDisplacementThreshold","repulsionRange","calcRepulsionRange","calcSpringForces","lEdges","calcSpringForce","calcRepulsionForces","processedNodeSet","gridUpdateAllowed","forceToNodeSurroundingUpdate","lNodes","updateGrid","calculateRepulsionForceOfANode","calcRepulsionForce","calcGravitationalForces","calcGravitationalForce","moveNodes","springForce","springForceX","springForceY","distanceX","distanceY","distanceSquared","repulsionForce","repulsionForceX","repulsionForceY","clipPoints","childrenConstant","ownerCenterX","ownerCenterY","absDistanceX","absDistanceY","gravitationForceX","gravitationForceY","isConverged","converged","oscilating","calcNoOfChildrenForAllNodes","calcGrid","sizeX","sizeY","addNodeToGrid","finishX","finishY","setGridCoordinates","surrounding","FDLayoutEdge","FDLayoutNode","displacementX","displacementY","_startX","_finishX","_startY","_finishY","HashMap","put","contains","keySet","HashSet","isEmpty","addAllTo","addAll","array1","array2","array","constant","product","mag","magnitude","sum","temp1","temp2","_sum","_sum2","_j2","Quicksort","A","compareFunction","_defaultCompareFunction","_quicksort","_partition","_get","_swap","get_object_at","set_object_at","_set","nu","allocate","dims","work","wantv","nct","nrt","hypot","t","wantu","_t","_j3","_k","_j4","_t2","_i16","_k2","_j5","_t3","_i17","_i18","_i19","pp","eps","tiny","_k3","kase","ks","_t4","f","_j6","_t5","cs","sn","_i20","_f","_j7","_t6","_cs","_sn","_i21","sp","spm1","epm1","sk","ek","_f2","_j8","_t7","_cs2","_sn2","_i22","_i23","_i24","_t8","_i25","_i26","NeedlemanWunsch","sequence1","sequence2","match_score","mismatch_penalty","gap_penalty","iMax","jMax","tracebackGrid","score","computeGrids","maxOf","indices","arrayAllMaxIndexes","includes","inProcessAlignments","seq1","seq2","indexes","getAllIndexes","listeners","addListener","event","callback","removeListener","emit","__WEBPACK_EXTERNAL_MODULE__551__","coseBase","CoSEEdge","CoSEGraph","CoSEGraphManager","ConstraintHandler","DEFAULT_USE_MULTI_LEVEL_SCALING","DEFAULT_COMPONENT_SEPERATION","RELAX_MOVEMENT_ON_CONSTRAINTS","graphMgr","toBeTiled","prunedNodesAll","growTreeIterations","afterGrowthIterations","isTreeGrowing","isGrowthFinished","coolingCycle","maxCoolingCycle","finalTemperature","coolingAdjuster","createBendpoints","level","classicLayout","nodesWithGravity","calculateNodesToApplyGravitationTo","reduceTrees","forest","positionNodesRadially","handleConstraints","initConstraintVariables","runSpringEmbedder","tick","initialAnimationPeriod","growTree","getPositionsData","pData","layoutEnded","calculateDisplacement","updateDisplacements","idToNodeMap","fixedNodeSet","calculateCompoundWeight","compoundNode","fixedNodeWeight","nodeId","nodeToDummyForVerticalAlignment","nodeToDummyForHorizontalAlignment","dummyToNodeForVerticalAlignment","dummyToNodeForHorizontalAlignment","fixedNodesOnHorizontal","fixedNodesOnVertical","verticalAlignment","horizontalAlignment","shuffle","nodesInRelativeHorizontal","nodesInRelativeVertical","nodeToRelativeConstraintMapHorizontal","nodeToRelativeConstraintMapVertical","nodeToTempPositionMapHorizontal","nodeToTempPositionMapVertical","constraint","nodeIdLeft","nodeIdRight","nodeIdTop","nodeIdBottom","subGraphOnHorizontal","subGraphOnVertical","constructComponents","fixedNodes","isFixed","neighbor","resultOnHorizontal","componentsOnHorizontal","fixedComponentsOnHorizontal","resultOnVertical","componentsOnVertical","fixedComponentsOnVertical","fixedNode","allVerticalAlignments","totalDisplacementX","averageDisplacementX","allHorizontalAlignments","totalDisplacementY","averageDisplacementY","displacement","diff","actualNodes","averageDisplacement","multiEdge","currentStartingPoint","numberOfColumns","currentY","currentX","point","tree","radialLayout","startingPoint","radialSep","maxDiagonalInTree","branchRadialLayout","bounds","bottomRight","parentOfNode","startAngle","endAngle","radialSeparation","halfInterval","teta","x_","cos","y_","childCount","startIndex","branchCount","incEdgesCount","stepAngle","childStartAngle","maxDiagonal","diagonal","groupZeroDegreeMembers","tempMemberGroups","memberGroups","idToDummyNode","zeroDegree","getNodeDegreeWithChildren","getToBeTiled","p_id","dummyCompoundId","dummyCompound","dummyParentGraph","parentGraph","clearCompounds","childGraphMap","idToNode","performDFSOnCompounds","compoundOrder","tileCompoundMembers","clearZeroDegreeMembers","tiledZeroDegreePack","tileNodes","centerX","centerY","labelMarginLeft","labelMarginTop","repopulateCompounds","lCompoundNode","adjustLocations","tiledMemberPack","repopulateZeroDegreeMembers","tiledPack","getNodeDegree","fillCompexOrderByDFS","organization","compoundHorizontalMargin","compoundVerticalMargin","compoundLabelMarginLeft","compoundLabelMarginTop","rows","row","maxHeight","lnode","horizontalPadding","verticalPadding","minWidth","horizontalOrg","tileNodesByFavoringDim","verticalOrg","horizontalRatio","getOrgRatio","ratio","calcIdealRowWidth","members","favorHorizontalDim","membersSize","totalWidth","totalHeight","maxWidth","horizontalCount","averageWidth","averageHeight","delta","horizontalCountDouble","idealWidth","rowWidth","rowHeight","idealRowWidth","getNodeArea","areaCompareFcn","n1","n2","sort","cmpBy","sumCenterX","sumCenterY","insertNodeToRow","canAddHorizontal","rowIndex","getShortestRowIndex","shiftToLastRow","minCompoundSize","extraHeight","getLongestRowIndex","extraWidth","sri","add_to_row_ratio","add_new_row_ratio","hDiff","longest","last","prevTotal","containsLeaf","prunedNodesInStepTemp","relativePosition","prunedNodesInStep","findPlaceforPrunedNode","gridForPrunedNode","nodeToConnect","prunedNode","startGridX","finishGridX","startGridY","finishGridY","controlRegions","minCount","minIndex","propogateDisplacementToChildren","dX","dY","setPred1","pred1","getPred1","getPred2","pred2","setNext","getNext","setProcessed","processed","isProcessed","calculateAvgPosition","nodeIdSet","xPosSum","yPosSum","findAppropriatePositionForRelativePlacement","direction","dummyPositions","componentSources","inDegrees","adjacent","positionMap","pastMap","fixedIds","fixedId","_position","fixedPosition","setUnion","setA","setB","sinkNodes","_components","isFixedComponent","isExist","existAt","minBefore","minAfter","maxBefore","maxAfter","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","posBefore","posAfter","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_nodeId","applyReflectionForRelativePlacement","relativePlacementConstraints","reflectOnY","notReflectOnY","reflectOnX","notReflectOnX","findComponents","_currentNode","dagToUndirected","dag","undirected","dagToReversed","reversed","targetMatrix","sourceMatrix","standardTransformation","reflectionType","dagUndirected","verticalAlign","alignmentSet","xPos","horizontalAlign","_loop3","yPos","largestComponentSize","largestComponentIndex","constraintsInlargestComponent","positionMapHorizontal","positionMapVertical","transformationMatrix","targetMatrixTranspose","sourceMatrixTranspose","tempMatrix","temp3","translationAmount","posInTheory","posDiff","pos1","pos2","calculatePositionDiff","xAlign","_loop4","yAlign","_loop5","dummyPositionsForVerticalAlignment","dummyPositionsForHorizontalAlignment","_loop6","_loop7","dagOnHorizontal","dagOnVertical","_loop8","sourceId","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","undirectedOnHorizontal","undirectedOnVertical","reversedDagOnHorizontal","reversedDagOnVertical","componentSourcesOnHorizontal","componentSourcesOnVertical","_loop9","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_loop10","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_node"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/cytoscape-fcose/cytoscape-fcose.js","./node_modules/mermaid/dist/chunks/mermaid.core/architectureDiagram-W76B3OCA.mjs","./node_modules/cytoscape-fcose/node_modules/layout-base/layout-base.js","./node_modules/cytoscape-fcose/node_modules/cose-base/cose-base.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"cose-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"cose-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeFcose\"] = factory(require(\"cose-base\"));\n\telse\n\t\troot[\"cytoscapeFcose\"] = factory(root[\"coseBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__140__) {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 658:\n/***/ ((module) => {\n\n\n\n// Simple, internal Object.assign() polyfill for options objects etc.\n\nmodule.exports = Object.assign != null ? Object.assign.bind(Object) : function (tgt) {\n  for (var _len = arguments.length, srcs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    srcs[_key - 1] = arguments[_key];\n  }\n\n  srcs.forEach(function (src) {\n    Object.keys(src).forEach(function (k) {\n      return tgt[k] = src[k];\n    });\n  });\n\n  return tgt;\n};\n\n/***/ }),\n\n/***/ 548:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/*\n * Auxiliary functions\n */\n\nvar LinkedList = __webpack_require__(140).layoutBase.LinkedList;\n\nvar auxiliary = {};\n\n// get the top most nodes\nauxiliary.getTopMostNodes = function (nodes) {\n  var nodesMap = {};\n  for (var i = 0; i < nodes.length; i++) {\n    nodesMap[nodes[i].id()] = true;\n  }\n  var roots = nodes.filter(function (ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var parent = ele.parent()[0];\n    while (parent != null) {\n      if (nodesMap[parent.id()]) {\n        return false;\n      }\n      parent = parent.parent()[0];\n    }\n    return true;\n  });\n\n  return roots;\n};\n\n// find disconnected components and create dummy nodes that connect them\nauxiliary.connectComponents = function (cy, eles, topMostNodes, dummyNodes) {\n  var queue = new LinkedList();\n  var visited = new Set();\n  var visitedTopMostNodes = [];\n  var currentNeighbor = void 0;\n  var minDegreeNode = void 0;\n  var minDegree = void 0;\n\n  var isConnected = false;\n  var count = 1;\n  var nodesConnectedToDummy = [];\n  var components = [];\n\n  var _loop = function _loop() {\n    var cmpt = cy.collection();\n    components.push(cmpt);\n\n    var currentNode = topMostNodes[0];\n    var childrenOfCurrentNode = cy.collection();\n    childrenOfCurrentNode.merge(currentNode).merge(currentNode.descendants().intersection(eles));\n    visitedTopMostNodes.push(currentNode);\n\n    childrenOfCurrentNode.forEach(function (node) {\n      queue.push(node);\n      visited.add(node);\n      cmpt.merge(node);\n    });\n\n    var _loop2 = function _loop2() {\n      currentNode = queue.shift();\n\n      // Traverse all neighbors of this node\n      var neighborNodes = cy.collection();\n      currentNode.neighborhood().nodes().forEach(function (node) {\n        if (eles.intersection(currentNode.edgesWith(node)).length > 0) {\n          neighborNodes.merge(node);\n        }\n      });\n\n      for (var i = 0; i < neighborNodes.length; i++) {\n        var neighborNode = neighborNodes[i];\n        currentNeighbor = topMostNodes.intersection(neighborNode.union(neighborNode.ancestors()));\n        if (currentNeighbor != null && !visited.has(currentNeighbor[0])) {\n          var childrenOfNeighbor = currentNeighbor.union(currentNeighbor.descendants());\n\n          childrenOfNeighbor.forEach(function (node) {\n            queue.push(node);\n            visited.add(node);\n            cmpt.merge(node);\n            if (topMostNodes.has(node)) {\n              visitedTopMostNodes.push(node);\n            }\n          });\n        }\n      }\n    };\n\n    while (queue.length != 0) {\n      _loop2();\n    }\n\n    cmpt.forEach(function (node) {\n      eles.intersection(node.connectedEdges()).forEach(function (e) {\n        // connectedEdges() usually cached\n        if (cmpt.has(e.source()) && cmpt.has(e.target())) {\n          // has() is cheap\n          cmpt.merge(e);\n        }\n      });\n    });\n\n    if (visitedTopMostNodes.length == topMostNodes.length) {\n      isConnected = true;\n    }\n\n    if (!isConnected || isConnected && count > 1) {\n      minDegreeNode = visitedTopMostNodes[0];\n      minDegree = minDegreeNode.connectedEdges().length;\n      visitedTopMostNodes.forEach(function (node) {\n        if (node.connectedEdges().length < minDegree) {\n          minDegree = node.connectedEdges().length;\n          minDegreeNode = node;\n        }\n      });\n      nodesConnectedToDummy.push(minDegreeNode.id());\n      // TO DO: Check efficiency of this part\n      var temp = cy.collection();\n      temp.merge(visitedTopMostNodes[0]);\n      visitedTopMostNodes.forEach(function (node) {\n        temp.merge(node);\n      });\n      visitedTopMostNodes = [];\n      topMostNodes = topMostNodes.difference(temp);\n      count++;\n    }\n  };\n\n  do {\n    _loop();\n  } while (!isConnected);\n\n  if (dummyNodes) {\n    if (nodesConnectedToDummy.length > 0) {\n      dummyNodes.set('dummy' + (dummyNodes.size + 1), nodesConnectedToDummy);\n    }\n  }\n  return components;\n};\n\n// relocates componentResult to originalCenter if there is no fixedNodeConstraint\nauxiliary.relocateComponent = function (originalCenter, componentResult, options) {\n  if (!options.fixedNodeConstraint) {\n    var minXCoord = Number.POSITIVE_INFINITY;\n    var maxXCoord = Number.NEGATIVE_INFINITY;\n    var minYCoord = Number.POSITIVE_INFINITY;\n    var maxYCoord = Number.NEGATIVE_INFINITY;\n    if (options.quality == \"draft\") {\n      // calculate current bounding box\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = componentResult.nodeIndexes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _ref = _step.value;\n\n          var _ref2 = _slicedToArray(_ref, 2);\n\n          var key = _ref2[0];\n          var value = _ref2[1];\n\n          var cyNode = options.cy.getElementById(key);\n          if (cyNode) {\n            var nodeBB = cyNode.boundingBox();\n            var leftX = componentResult.xCoords[value] - nodeBB.w / 2;\n            var rightX = componentResult.xCoords[value] + nodeBB.w / 2;\n            var topY = componentResult.yCoords[value] - nodeBB.h / 2;\n            var bottomY = componentResult.yCoords[value] + nodeBB.h / 2;\n\n            if (leftX < minXCoord) minXCoord = leftX;\n            if (rightX > maxXCoord) maxXCoord = rightX;\n            if (topY < minYCoord) minYCoord = topY;\n            if (bottomY > maxYCoord) maxYCoord = bottomY;\n          }\n        }\n        // find difference between current and original center\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var diffOnX = originalCenter.x - (maxXCoord + minXCoord) / 2;\n      var diffOnY = originalCenter.y - (maxYCoord + minYCoord) / 2;\n      // move component to original center\n      componentResult.xCoords = componentResult.xCoords.map(function (x) {\n        return x + diffOnX;\n      });\n      componentResult.yCoords = componentResult.yCoords.map(function (y) {\n        return y + diffOnY;\n      });\n    } else {\n      // calculate current bounding box\n      Object.keys(componentResult).forEach(function (item) {\n        var node = componentResult[item];\n        var leftX = node.getRect().x;\n        var rightX = node.getRect().x + node.getRect().width;\n        var topY = node.getRect().y;\n        var bottomY = node.getRect().y + node.getRect().height;\n\n        if (leftX < minXCoord) minXCoord = leftX;\n        if (rightX > maxXCoord) maxXCoord = rightX;\n        if (topY < minYCoord) minYCoord = topY;\n        if (bottomY > maxYCoord) maxYCoord = bottomY;\n      });\n      // find difference between current and original center\n      var _diffOnX = originalCenter.x - (maxXCoord + minXCoord) / 2;\n      var _diffOnY = originalCenter.y - (maxYCoord + minYCoord) / 2;\n      // move component to original center\n      Object.keys(componentResult).forEach(function (item) {\n        var node = componentResult[item];\n        node.setCenter(node.getCenterX() + _diffOnX, node.getCenterY() + _diffOnY);\n      });\n    }\n  }\n};\n\nauxiliary.calcBoundingBox = function (parentNode, xCoords, yCoords, nodeIndexes) {\n  // calculate bounds\n  var left = Number.MAX_SAFE_INTEGER;\n  var right = Number.MIN_SAFE_INTEGER;\n  var top = Number.MAX_SAFE_INTEGER;\n  var bottom = Number.MIN_SAFE_INTEGER;\n  var nodeLeft = void 0;\n  var nodeRight = void 0;\n  var nodeTop = void 0;\n  var nodeBottom = void 0;\n\n  var nodes = parentNode.descendants().not(\":parent\");\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    var node = nodes[i];\n\n    nodeLeft = xCoords[nodeIndexes.get(node.id())] - node.width() / 2;\n    nodeRight = xCoords[nodeIndexes.get(node.id())] + node.width() / 2;\n    nodeTop = yCoords[nodeIndexes.get(node.id())] - node.height() / 2;\n    nodeBottom = yCoords[nodeIndexes.get(node.id())] + node.height() / 2;\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingBox = {};\n  boundingBox.topLeftX = left;\n  boundingBox.topLeftY = top;\n  boundingBox.width = right - left;\n  boundingBox.height = bottom - top;\n  return boundingBox;\n};\n\n// This function finds and returns parent nodes whose all children are hidden\nauxiliary.calcParentsWithoutChildren = function (cy, eles) {\n  var parentsWithoutChildren = cy.collection();\n  eles.nodes(':parent').forEach(function (parent) {\n    var check = false;\n    parent.children().forEach(function (child) {\n      if (child.css('display') != 'none') {\n        check = true;\n      }\n    });\n    if (!check) {\n      parentsWithoutChildren.merge(parent);\n    }\n  });\n\n  return parentsWithoutChildren;\n};\n\nmodule.exports = auxiliary;\n\n/***/ }),\n\n/***/ 816:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\n/**\n  The implementation of the postprocessing part that applies CoSE layout over the spectral layout\n*/\n\nvar aux = __webpack_require__(548);\nvar CoSELayout = __webpack_require__(140).CoSELayout;\nvar CoSENode = __webpack_require__(140).CoSENode;\nvar PointD = __webpack_require__(140).layoutBase.PointD;\nvar DimensionD = __webpack_require__(140).layoutBase.DimensionD;\nvar LayoutConstants = __webpack_require__(140).layoutBase.LayoutConstants;\nvar FDLayoutConstants = __webpack_require__(140).layoutBase.FDLayoutConstants;\nvar CoSEConstants = __webpack_require__(140).CoSEConstants;\n\n// main function that cose layout is processed\nvar coseLayout = function coseLayout(options, spectralResult) {\n\n  var cy = options.cy;\n  var eles = options.eles;\n  var nodes = eles.nodes();\n  var edges = eles.edges();\n\n  var nodeIndexes = void 0;\n  var xCoords = void 0;\n  var yCoords = void 0;\n  var idToLNode = {};\n\n  if (options.randomize) {\n    nodeIndexes = spectralResult[\"nodeIndexes\"];\n    xCoords = spectralResult[\"xCoords\"];\n    yCoords = spectralResult[\"yCoords\"];\n  }\n\n  var isFn = function isFn(fn) {\n    return typeof fn === 'function';\n  };\n\n  var optFn = function optFn(opt, ele) {\n    if (isFn(opt)) {\n      return opt(ele);\n    } else {\n      return opt;\n    }\n  };\n\n  /**** Postprocessing functions ****/\n\n  var parentsWithoutChildren = aux.calcParentsWithoutChildren(cy, eles);\n\n  // transfer cytoscape nodes to cose nodes\n  var processChildrenList = function processChildrenList(parent, children, layout, options) {\n    var size = children.length;\n    for (var i = 0; i < size; i++) {\n      var theChild = children[i];\n      var children_of_children = null;\n      if (theChild.intersection(parentsWithoutChildren).length == 0) {\n        children_of_children = theChild.children();\n      }\n      var theNode = void 0;\n\n      var dimensions = theChild.layoutDimensions({\n        nodeDimensionsIncludeLabels: options.nodeDimensionsIncludeLabels\n      });\n\n      if (theChild.outerWidth() != null && theChild.outerHeight() != null) {\n        if (options.randomize) {\n          if (!theChild.isParent()) {\n            theNode = parent.add(new CoSENode(layout.graphManager, new PointD(xCoords[nodeIndexes.get(theChild.id())] - dimensions.w / 2, yCoords[nodeIndexes.get(theChild.id())] - dimensions.h / 2), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n          } else {\n            var parentInfo = aux.calcBoundingBox(theChild, xCoords, yCoords, nodeIndexes);\n            if (theChild.intersection(parentsWithoutChildren).length == 0) {\n              theNode = parent.add(new CoSENode(layout.graphManager, new PointD(parentInfo.topLeftX, parentInfo.topLeftY), new DimensionD(parentInfo.width, parentInfo.height)));\n            } else {\n              // for the parentsWithoutChildren\n              theNode = parent.add(new CoSENode(layout.graphManager, new PointD(parentInfo.topLeftX, parentInfo.topLeftY), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n            }\n          }\n        } else {\n          theNode = parent.add(new CoSENode(layout.graphManager, new PointD(theChild.position('x') - dimensions.w / 2, theChild.position('y') - dimensions.h / 2), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n        }\n      } else {\n        theNode = parent.add(new CoSENode(this.graphManager));\n      }\n      // Attach id to the layout node and repulsion value\n      theNode.id = theChild.data(\"id\");\n      theNode.nodeRepulsion = optFn(options.nodeRepulsion, theChild);\n      // Attach the paddings of cy node to layout node\n      theNode.paddingLeft = parseInt(theChild.css('padding'));\n      theNode.paddingTop = parseInt(theChild.css('padding'));\n      theNode.paddingRight = parseInt(theChild.css('padding'));\n      theNode.paddingBottom = parseInt(theChild.css('padding'));\n\n      //Attach the label properties to both compound and simple nodes if labels will be included in node dimensions\n      //These properties will be used while updating bounds of compounds during iterations or tiling\n      //and will be used for simple nodes while transferring final positions to cytoscape\n      if (options.nodeDimensionsIncludeLabels) {\n        theNode.labelWidth = theChild.boundingBox({ includeLabels: true, includeNodes: false, includeOverlays: false }).w;\n        theNode.labelHeight = theChild.boundingBox({ includeLabels: true, includeNodes: false, includeOverlays: false }).h;\n        theNode.labelPosVertical = theChild.css(\"text-valign\");\n        theNode.labelPosHorizontal = theChild.css(\"text-halign\");\n      }\n\n      // Map the layout node\n      idToLNode[theChild.data(\"id\")] = theNode;\n\n      if (isNaN(theNode.rect.x)) {\n        theNode.rect.x = 0;\n      }\n\n      if (isNaN(theNode.rect.y)) {\n        theNode.rect.y = 0;\n      }\n\n      if (children_of_children != null && children_of_children.length > 0) {\n        var theNewGraph = void 0;\n        theNewGraph = layout.getGraphManager().add(layout.newGraph(), theNode);\n        processChildrenList(theNewGraph, children_of_children, layout, options);\n      }\n    }\n  };\n\n  // transfer cytoscape edges to cose edges\n  var processEdges = function processEdges(layout, gm, edges) {\n    var idealLengthTotal = 0;\n    var edgeCount = 0;\n    for (var i = 0; i < edges.length; i++) {\n      var edge = edges[i];\n      var sourceNode = idToLNode[edge.data(\"source\")];\n      var targetNode = idToLNode[edge.data(\"target\")];\n      if (sourceNode && targetNode && sourceNode !== targetNode && sourceNode.getEdgesBetween(targetNode).length == 0) {\n        var e1 = gm.add(layout.newEdge(), sourceNode, targetNode);\n        e1.id = edge.id();\n        e1.idealLength = optFn(options.idealEdgeLength, edge);\n        e1.edgeElasticity = optFn(options.edgeElasticity, edge);\n        idealLengthTotal += e1.idealLength;\n        edgeCount++;\n      }\n    }\n    // we need to update the ideal edge length constant with the avg. ideal length value after processing edges\n    // in case there is no edge, use other options\n    if (options.idealEdgeLength != null) {\n      if (edgeCount > 0) CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = idealLengthTotal / edgeCount;else if (!isFn(options.idealEdgeLength)) // in case there is no edge, but option gives a value to use\n        CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = options.idealEdgeLength;else // in case there is no edge and we cannot get a value from option (because it's a function)\n        CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = 50;\n      // we need to update these constant values based on the ideal edge length constant\n      CoSEConstants.MIN_REPULSION_DIST = FDLayoutConstants.MIN_REPULSION_DIST = FDLayoutConstants.DEFAULT_EDGE_LENGTH / 10.0;\n      CoSEConstants.DEFAULT_RADIAL_SEPARATION = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n    }\n  };\n\n  // transfer cytoscape constraints to cose layout\n  var processConstraints = function processConstraints(layout, options) {\n    // get nodes to be fixed\n    if (options.fixedNodeConstraint) {\n      layout.constraints[\"fixedNodeConstraint\"] = options.fixedNodeConstraint;\n    }\n    // get nodes to be aligned\n    if (options.alignmentConstraint) {\n      layout.constraints[\"alignmentConstraint\"] = options.alignmentConstraint;\n    }\n    // get nodes to be relatively placed\n    if (options.relativePlacementConstraint) {\n      layout.constraints[\"relativePlacementConstraint\"] = options.relativePlacementConstraint;\n    }\n  };\n\n  /**** Apply postprocessing ****/\n  if (options.nestingFactor != null) CoSEConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = options.nestingFactor;\n  if (options.gravity != null) CoSEConstants.DEFAULT_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = options.gravity;\n  if (options.numIter != null) CoSEConstants.MAX_ITERATIONS = FDLayoutConstants.MAX_ITERATIONS = options.numIter;\n  if (options.gravityRange != null) CoSEConstants.DEFAULT_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = options.gravityRange;\n  if (options.gravityCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = options.gravityCompound;\n  if (options.gravityRangeCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = options.gravityRangeCompound;\n  if (options.initialEnergyOnIncremental != null) CoSEConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = options.initialEnergyOnIncremental;\n\n  if (options.tilingCompareBy != null) CoSEConstants.TILING_COMPARE_BY = options.tilingCompareBy;\n\n  if (options.quality == 'proof') LayoutConstants.QUALITY = 2;else LayoutConstants.QUALITY = 0;\n\n  CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS = FDLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = options.nodeDimensionsIncludeLabels;\n  CoSEConstants.DEFAULT_INCREMENTAL = FDLayoutConstants.DEFAULT_INCREMENTAL = LayoutConstants.DEFAULT_INCREMENTAL = !options.randomize;\n  CoSEConstants.ANIMATE = FDLayoutConstants.ANIMATE = LayoutConstants.ANIMATE = options.animate;\n  CoSEConstants.TILE = options.tile;\n  CoSEConstants.TILING_PADDING_VERTICAL = typeof options.tilingPaddingVertical === 'function' ? options.tilingPaddingVertical.call() : options.tilingPaddingVertical;\n  CoSEConstants.TILING_PADDING_HORIZONTAL = typeof options.tilingPaddingHorizontal === 'function' ? options.tilingPaddingHorizontal.call() : options.tilingPaddingHorizontal;\n\n  CoSEConstants.DEFAULT_INCREMENTAL = FDLayoutConstants.DEFAULT_INCREMENTAL = LayoutConstants.DEFAULT_INCREMENTAL = true;\n  CoSEConstants.PURE_INCREMENTAL = !options.randomize;\n  LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES = options.uniformNodeDimensions;\n\n  // This part is for debug/demo purpose\n  if (options.step == \"transformed\") {\n    CoSEConstants.TRANSFORM_ON_CONSTRAINT_HANDLING = true;\n    CoSEConstants.ENFORCE_CONSTRAINTS = false;\n    CoSEConstants.APPLY_LAYOUT = false;\n  }\n  if (options.step == \"enforced\") {\n    CoSEConstants.TRANSFORM_ON_CONSTRAINT_HANDLING = false;\n    CoSEConstants.ENFORCE_CONSTRAINTS = true;\n    CoSEConstants.APPLY_LAYOUT = false;\n  }\n  if (options.step == \"cose\") {\n    CoSEConstants.TRANSFORM_ON_CONSTRAINT_HANDLING = false;\n    CoSEConstants.ENFORCE_CONSTRAINTS = false;\n    CoSEConstants.APPLY_LAYOUT = true;\n  }\n  if (options.step == \"all\") {\n    if (options.randomize) CoSEConstants.TRANSFORM_ON_CONSTRAINT_HANDLING = true;else CoSEConstants.TRANSFORM_ON_CONSTRAINT_HANDLING = false;\n    CoSEConstants.ENFORCE_CONSTRAINTS = true;\n    CoSEConstants.APPLY_LAYOUT = true;\n  }\n\n  if (options.fixedNodeConstraint || options.alignmentConstraint || options.relativePlacementConstraint) {\n    CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = false;\n  } else {\n    CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = true;\n  }\n\n  var coseLayout = new CoSELayout();\n  var gm = coseLayout.newGraphManager();\n\n  processChildrenList(gm.addRoot(), aux.getTopMostNodes(nodes), coseLayout, options);\n  processEdges(coseLayout, gm, edges);\n  processConstraints(coseLayout, options);\n\n  coseLayout.runLayout();\n\n  return idToLNode;\n};\n\nmodule.exports = { coseLayout: coseLayout };\n\n/***/ }),\n\n/***/ 212:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n  The implementation of the fcose layout algorithm\n*/\n\nvar assign = __webpack_require__(658);\nvar aux = __webpack_require__(548);\n\nvar _require = __webpack_require__(657),\n    spectralLayout = _require.spectralLayout;\n\nvar _require2 = __webpack_require__(816),\n    coseLayout = _require2.coseLayout;\n\nvar defaults = Object.freeze({\n\n  // 'draft', 'default' or 'proof' \n  // - 'draft' only applies spectral layout \n  // - 'default' improves the quality with subsequent CoSE layout (fast cooling rate)\n  // - 'proof' improves the quality with subsequent CoSE layout (slow cooling rate) \n  quality: \"default\",\n  // Use random node positions at beginning of layout\n  // if this is set to false, then quality option must be \"proof\"\n  randomize: true,\n  // Whether or not to animate the layout\n  animate: true,\n  // Duration of animation in ms, if enabled\n  animationDuration: 1000,\n  // Easing of animation, if enabled\n  animationEasing: undefined,\n  // Fit the viewport to the repositioned nodes\n  fit: true,\n  // Padding around layout\n  padding: 30,\n  // Whether to include labels in node dimensions. Valid in \"proof\" quality\n  nodeDimensionsIncludeLabels: false,\n  // Whether or not simple nodes (non-compound nodes) are of uniform dimensions\n  uniformNodeDimensions: false,\n  // Whether to pack disconnected components - valid only if randomize: true\n  packComponents: true,\n  // Layout step - all, transformed, enforced, cose - for debug purpose only\n  step: \"all\",\n\n  /* spectral layout options */\n\n  // False for random, true for greedy\n  samplingType: true,\n  // Sample size to construct distance matrix\n  sampleSize: 25,\n  // Separation amount between nodes\n  nodeSeparation: 75,\n  // Power iteration tolerance\n  piTol: 0.0000001,\n\n  /* CoSE layout options */\n\n  // Node repulsion (non overlapping) multiplier\n  nodeRepulsion: function nodeRepulsion(node) {\n    return 4500;\n  },\n  // Ideal edge (non nested) length\n  idealEdgeLength: function idealEdgeLength(edge) {\n    return 50;\n  },\n  // Divisor to compute edge forces\n  edgeElasticity: function edgeElasticity(edge) {\n    return 0.45;\n  },\n  // Nesting factor (multiplier) to compute ideal edge length for nested edges\n  nestingFactor: 0.1,\n  // Gravity force (constant)\n  gravity: 0.25,\n  // Maximum number of iterations to perform\n  numIter: 2500,\n  // For enabling tiling\n  tile: true,\n  // The function that specifies the criteria for comparing nodes while sorting them during tiling operation.\n  // Takes the node id as a parameter and the default tiling operation is perfomed when this option is not set.\n  tilingCompareBy: undefined,\n  // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingVertical: 10,\n  // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingHorizontal: 10,\n  // Gravity range (constant) for compounds\n  gravityRangeCompound: 1.5,\n  // Gravity force (constant) for compounds\n  gravityCompound: 1.0,\n  // Gravity range (constant)\n  gravityRange: 3.8,\n  // Initial cooling factor for incremental layout  \n  initialEnergyOnIncremental: 0.3,\n\n  /* constraint options */\n\n  // Fix required nodes to predefined positions\n  // [{nodeId: 'n1', position: {x: 100, y: 200}, {...}]\n  fixedNodeConstraint: undefined,\n  // Align required nodes in vertical/horizontal direction\n  // {vertical: [['n1', 'n2')], ['n3', 'n4']], horizontal: ['n2', 'n4']}\n  alignmentConstraint: undefined,\n  // Place two nodes relatively in vertical/horizontal direction \n  // [{top: 'n1', bottom: 'n2', gap: 100}, {left: 'n3', right: 'n4', gap: 75}]\n  relativePlacementConstraint: undefined,\n\n  /* layout event callbacks */\n  ready: function ready() {}, // on layoutready\n  stop: function stop() {} // on layoutstop\n});\n\nvar Layout = function () {\n  function Layout(options) {\n    _classCallCheck(this, Layout);\n\n    this.options = assign({}, defaults, options);\n  }\n\n  _createClass(Layout, [{\n    key: 'run',\n    value: function run() {\n      var layout = this;\n      var options = this.options;\n      var cy = options.cy;\n      var eles = options.eles;\n\n      var spectralResult = [];\n      var xCoords = void 0;\n      var yCoords = void 0;\n      var coseResult = [];\n      var components = void 0;\n      var componentCenters = [];\n\n      // basic validity check for constraint inputs \n      if (options.fixedNodeConstraint && (!Array.isArray(options.fixedNodeConstraint) || options.fixedNodeConstraint.length == 0)) {\n        options.fixedNodeConstraint = undefined;\n      }\n\n      if (options.alignmentConstraint) {\n        if (options.alignmentConstraint.vertical && (!Array.isArray(options.alignmentConstraint.vertical) || options.alignmentConstraint.vertical.length == 0)) {\n          options.alignmentConstraint.vertical = undefined;\n        }\n        if (options.alignmentConstraint.horizontal && (!Array.isArray(options.alignmentConstraint.horizontal) || options.alignmentConstraint.horizontal.length == 0)) {\n          options.alignmentConstraint.horizontal = undefined;\n        }\n      }\n\n      if (options.relativePlacementConstraint && (!Array.isArray(options.relativePlacementConstraint) || options.relativePlacementConstraint.length == 0)) {\n        options.relativePlacementConstraint = undefined;\n      }\n\n      // if any constraint exists, set some options\n      var constraintExist = options.fixedNodeConstraint || options.alignmentConstraint || options.relativePlacementConstraint;\n      if (constraintExist) {\n        // constraints work with these options\n        options.tile = false;\n        options.packComponents = false;\n      }\n\n      // decide component packing is enabled or not\n      var layUtil = void 0;\n      var packingEnabled = false;\n      if (cy.layoutUtilities && options.packComponents) {\n        layUtil = cy.layoutUtilities(\"get\");\n        if (!layUtil) layUtil = cy.layoutUtilities();\n        packingEnabled = true;\n      }\n\n      if (eles.nodes().length > 0) {\n        // if packing is not enabled, perform layout on the whole graph\n        if (!packingEnabled) {\n          // store component center\n          var boundingBox = options.eles.boundingBox();\n          componentCenters.push({ x: boundingBox.x1 + boundingBox.w / 2, y: boundingBox.y1 + boundingBox.h / 2 });\n          // apply spectral layout\n          if (options.randomize) {\n            var result = spectralLayout(options);\n            spectralResult.push(result);\n          }\n          // apply cose layout as postprocessing\n          if (options.quality == \"default\" || options.quality == \"proof\") {\n            coseResult.push(coseLayout(options, spectralResult[0]));\n            aux.relocateComponent(componentCenters[0], coseResult[0], options); // relocate center to original position\n          } else {\n            aux.relocateComponent(componentCenters[0], spectralResult[0], options); // relocate center to original position\n          }\n        } else {\n          // packing is enabled\n          var topMostNodes = aux.getTopMostNodes(options.eles.nodes());\n          components = aux.connectComponents(cy, options.eles, topMostNodes);\n          // store component centers\n          components.forEach(function (component) {\n            var boundingBox = component.boundingBox();\n            componentCenters.push({ x: boundingBox.x1 + boundingBox.w / 2, y: boundingBox.y1 + boundingBox.h / 2 });\n          });\n\n          //send each component to spectral layout if randomized\n          if (options.randomize) {\n            components.forEach(function (component) {\n              options.eles = component;\n              spectralResult.push(spectralLayout(options));\n            });\n          }\n\n          if (options.quality == \"default\" || options.quality == \"proof\") {\n            var toBeTiledNodes = cy.collection();\n            if (options.tile) {\n              // behave nodes to be tiled as one component\n              var nodeIndexes = new Map();\n              var _xCoords = [];\n              var _yCoords = [];\n              var count = 0;\n              var tempSpectralResult = { nodeIndexes: nodeIndexes, xCoords: _xCoords, yCoords: _yCoords };\n              var indexesToBeDeleted = [];\n              components.forEach(function (component, index) {\n                if (component.edges().length == 0) {\n                  component.nodes().forEach(function (node, i) {\n                    toBeTiledNodes.merge(component.nodes()[i]);\n                    if (!node.isParent()) {\n                      tempSpectralResult.nodeIndexes.set(component.nodes()[i].id(), count++);\n                      tempSpectralResult.xCoords.push(component.nodes()[0].position().x);\n                      tempSpectralResult.yCoords.push(component.nodes()[0].position().y);\n                    }\n                  });\n                  indexesToBeDeleted.push(index);\n                }\n              });\n              if (toBeTiledNodes.length > 1) {\n                var _boundingBox = toBeTiledNodes.boundingBox();\n                componentCenters.push({ x: _boundingBox.x1 + _boundingBox.w / 2, y: _boundingBox.y1 + _boundingBox.h / 2 });\n                components.push(toBeTiledNodes);\n                spectralResult.push(tempSpectralResult);\n                for (var i = indexesToBeDeleted.length - 1; i >= 0; i--) {\n                  components.splice(indexesToBeDeleted[i], 1);\n                  spectralResult.splice(indexesToBeDeleted[i], 1);\n                  componentCenters.splice(indexesToBeDeleted[i], 1);\n                };\n              }\n            }\n            components.forEach(function (component, index) {\n              // send each component to cose layout\n              options.eles = component;\n              coseResult.push(coseLayout(options, spectralResult[index]));\n              aux.relocateComponent(componentCenters[index], coseResult[index], options); // relocate center to original position\n            });\n          } else {\n            components.forEach(function (component, index) {\n              aux.relocateComponent(componentCenters[index], spectralResult[index], options); // relocate center to original position\n            });\n          }\n\n          // packing\n          var componentsEvaluated = new Set();\n          if (components.length > 1) {\n            var subgraphs = [];\n            var hiddenEles = eles.filter(function (ele) {\n              return ele.css('display') == 'none';\n            });\n            components.forEach(function (component, index) {\n              var nodeIndexes = void 0;\n              if (options.quality == \"draft\") {\n                nodeIndexes = spectralResult[index].nodeIndexes;\n              }\n\n              if (component.nodes().not(hiddenEles).length > 0) {\n                var subgraph = {};\n                subgraph.edges = [];\n                subgraph.nodes = [];\n                var nodeIndex = void 0;\n                component.nodes().not(hiddenEles).forEach(function (node) {\n                  if (options.quality == \"draft\") {\n                    if (!node.isParent()) {\n                      nodeIndex = nodeIndexes.get(node.id());\n                      subgraph.nodes.push({ x: spectralResult[index].xCoords[nodeIndex] - node.boundingbox().w / 2, y: spectralResult[index].yCoords[nodeIndex] - node.boundingbox().h / 2, width: node.boundingbox().w, height: node.boundingbox().h });\n                    } else {\n                      var parentInfo = aux.calcBoundingBox(node, spectralResult[index].xCoords, spectralResult[index].yCoords, nodeIndexes);\n                      subgraph.nodes.push({ x: parentInfo.topLeftX, y: parentInfo.topLeftY, width: parentInfo.width, height: parentInfo.height });\n                    }\n                  } else {\n                    if (coseResult[index][node.id()]) {\n                      subgraph.nodes.push({ x: coseResult[index][node.id()].getLeft(), y: coseResult[index][node.id()].getTop(), width: coseResult[index][node.id()].getWidth(), height: coseResult[index][node.id()].getHeight() });\n                    }\n                  }\n                });\n                component.edges().forEach(function (edge) {\n                  var source = edge.source();\n                  var target = edge.target();\n                  if (source.css(\"display\") != \"none\" && target.css(\"display\") != \"none\") {\n                    if (options.quality == \"draft\") {\n                      var sourceNodeIndex = nodeIndexes.get(source.id());\n                      var targetNodeIndex = nodeIndexes.get(target.id());\n                      var sourceCenter = [];\n                      var targetCenter = [];\n                      if (source.isParent()) {\n                        var parentInfo = aux.calcBoundingBox(source, spectralResult[index].xCoords, spectralResult[index].yCoords, nodeIndexes);\n                        sourceCenter.push(parentInfo.topLeftX + parentInfo.width / 2);\n                        sourceCenter.push(parentInfo.topLeftY + parentInfo.height / 2);\n                      } else {\n                        sourceCenter.push(spectralResult[index].xCoords[sourceNodeIndex]);\n                        sourceCenter.push(spectralResult[index].yCoords[sourceNodeIndex]);\n                      }\n                      if (target.isParent()) {\n                        var _parentInfo = aux.calcBoundingBox(target, spectralResult[index].xCoords, spectralResult[index].yCoords, nodeIndexes);\n                        targetCenter.push(_parentInfo.topLeftX + _parentInfo.width / 2);\n                        targetCenter.push(_parentInfo.topLeftY + _parentInfo.height / 2);\n                      } else {\n                        targetCenter.push(spectralResult[index].xCoords[targetNodeIndex]);\n                        targetCenter.push(spectralResult[index].yCoords[targetNodeIndex]);\n                      }\n                      subgraph.edges.push({ startX: sourceCenter[0], startY: sourceCenter[1], endX: targetCenter[0], endY: targetCenter[1] });\n                    } else {\n                      if (coseResult[index][source.id()] && coseResult[index][target.id()]) {\n                        subgraph.edges.push({ startX: coseResult[index][source.id()].getCenterX(), startY: coseResult[index][source.id()].getCenterY(), endX: coseResult[index][target.id()].getCenterX(), endY: coseResult[index][target.id()].getCenterY() });\n                      }\n                    }\n                  }\n                });\n                if (subgraph.nodes.length > 0) {\n                  subgraphs.push(subgraph);\n                  componentsEvaluated.add(index);\n                }\n              }\n            });\n            var shiftResult = layUtil.packComponents(subgraphs, options.randomize).shifts;\n            if (options.quality == \"draft\") {\n              spectralResult.forEach(function (result, index) {\n                var newXCoords = result.xCoords.map(function (x) {\n                  return x + shiftResult[index].dx;\n                });\n                var newYCoords = result.yCoords.map(function (y) {\n                  return y + shiftResult[index].dy;\n                });\n                result.xCoords = newXCoords;\n                result.yCoords = newYCoords;\n              });\n            } else {\n              var _count = 0;\n              componentsEvaluated.forEach(function (index) {\n                Object.keys(coseResult[index]).forEach(function (item) {\n                  var nodeRectangle = coseResult[index][item];\n                  nodeRectangle.setCenter(nodeRectangle.getCenterX() + shiftResult[_count].dx, nodeRectangle.getCenterY() + shiftResult[_count].dy);\n                });\n                _count++;\n              });\n            }\n          }\n        }\n      }\n\n      // get each element's calculated position\n      var getPositions = function getPositions(ele, i) {\n        if (options.quality == \"default\" || options.quality == \"proof\") {\n          if (typeof ele === \"number\") {\n            ele = i;\n          }\n          var pos = void 0;\n          var node = void 0;\n          var theId = ele.data('id');\n          coseResult.forEach(function (result) {\n            if (theId in result) {\n              pos = { x: result[theId].getRect().getCenterX(), y: result[theId].getRect().getCenterY() };\n              node = result[theId];\n            }\n          });\n          if (options.nodeDimensionsIncludeLabels) {\n            if (node.labelWidth) {\n              if (node.labelPosHorizontal == \"left\") {\n                pos.x += node.labelWidth / 2;\n              } else if (node.labelPosHorizontal == \"right\") {\n                pos.x -= node.labelWidth / 2;\n              }\n            }\n            if (node.labelHeight) {\n              if (node.labelPosVertical == \"top\") {\n                pos.y += node.labelHeight / 2;\n              } else if (node.labelPosVertical == \"bottom\") {\n                pos.y -= node.labelHeight / 2;\n              }\n            }\n          }\n          if (pos == undefined) pos = { x: ele.position(\"x\"), y: ele.position(\"y\") };\n          return {\n            x: pos.x,\n            y: pos.y\n          };\n        } else {\n          var _pos = void 0;\n          spectralResult.forEach(function (result) {\n            var index = result.nodeIndexes.get(ele.id());\n            if (index != undefined) {\n              _pos = { x: result.xCoords[index], y: result.yCoords[index] };\n            }\n          });\n          if (_pos == undefined) _pos = { x: ele.position(\"x\"), y: ele.position(\"y\") };\n          return {\n            x: _pos.x,\n            y: _pos.y\n          };\n        }\n      };\n\n      // quality = \"draft\" and randomize = false are contradictive so in that case positions don't change\n      if (options.quality == \"default\" || options.quality == \"proof\" || options.randomize) {\n        // transfer calculated positions to nodes (positions of only simple nodes are evaluated, compounds are positioned automatically)\n        var parentsWithoutChildren = aux.calcParentsWithoutChildren(cy, eles);\n        var _hiddenEles = eles.filter(function (ele) {\n          return ele.css('display') == 'none';\n        });\n        options.eles = eles.not(_hiddenEles);\n\n        eles.nodes().not(\":parent\").not(_hiddenEles).layoutPositions(layout, options, getPositions);\n\n        if (parentsWithoutChildren.length > 0) {\n          parentsWithoutChildren.forEach(function (ele) {\n            ele.position(getPositions(ele));\n          });\n        }\n      } else {\n        console.log(\"If randomize option is set to false, then quality option must be 'default' or 'proof'.\");\n      }\n    }\n  }]);\n\n  return Layout;\n}();\n\nmodule.exports = Layout;\n\n/***/ }),\n\n/***/ 657:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\n/**\n  The implementation of the spectral layout that is the first part of the fcose layout algorithm\n*/\n\nvar aux = __webpack_require__(548);\nvar Matrix = __webpack_require__(140).layoutBase.Matrix;\nvar SVD = __webpack_require__(140).layoutBase.SVD;\n\n// main function that spectral layout is processed\nvar spectralLayout = function spectralLayout(options) {\n\n  var cy = options.cy;\n  var eles = options.eles;\n  var nodes = eles.nodes();\n  var parentNodes = eles.nodes(\":parent\");\n\n  var dummyNodes = new Map(); // map to keep dummy nodes and their neighbors\n  var nodeIndexes = new Map(); // map to keep indexes to nodes\n  var parentChildMap = new Map(); // mapping btw. compound and its representative node \n  var allNodesNeighborhood = []; // array to keep neighborhood of all nodes\n  var xCoords = [];\n  var yCoords = [];\n\n  var samplesColumn = []; // sampled vertices\n  var minDistancesColumn = [];\n  var C = []; // column sampling matrix\n  var PHI = []; // intersection of column and row sampling matrices \n  var INV = []; // inverse of PHI \n\n  var firstSample = void 0; // the first sampled node\n  var nodeSize = void 0;\n\n  var infinity = 100000000;\n  var small = 0.000000001;\n\n  var piTol = options.piTol;\n  var samplingType = options.samplingType; // false for random, true for greedy\n  var nodeSeparation = options.nodeSeparation;\n  var sampleSize = void 0;\n\n  /**** Spectral-preprocessing functions ****/\n\n  /**** Spectral layout functions ****/\n\n  // determine which columns to be sampled\n  var randomSampleCR = function randomSampleCR() {\n    var sample = 0;\n    var count = 0;\n    var flag = false;\n\n    while (count < sampleSize) {\n      sample = Math.floor(Math.random() * nodeSize);\n\n      flag = false;\n      for (var i = 0; i < count; i++) {\n        if (samplesColumn[i] == sample) {\n          flag = true;\n          break;\n        }\n      }\n\n      if (!flag) {\n        samplesColumn[count] = sample;\n        count++;\n      } else {\n        continue;\n      }\n    }\n  };\n\n  // takes the index of the node(pivot) to initiate BFS as a parameter\n  var BFS = function BFS(pivot, index, samplingMethod) {\n    var path = []; // the front of the path\n    var front = 0; // the back of the path\n    var back = 0;\n    var current = 0;\n    var temp = void 0;\n    var distance = [];\n\n    var max_dist = 0; // the furthest node to be returned\n    var max_ind = 1;\n\n    for (var i = 0; i < nodeSize; i++) {\n      distance[i] = infinity;\n    }\n\n    path[back] = pivot;\n    distance[pivot] = 0;\n\n    while (back >= front) {\n      current = path[front++];\n      var neighbors = allNodesNeighborhood[current];\n      for (var _i = 0; _i < neighbors.length; _i++) {\n        temp = nodeIndexes.get(neighbors[_i]);\n        if (distance[temp] == infinity) {\n          distance[temp] = distance[current] + 1;\n          path[++back] = temp;\n        }\n      }\n      C[current][index] = distance[current] * nodeSeparation;\n    }\n\n    if (samplingMethod) {\n      for (var _i2 = 0; _i2 < nodeSize; _i2++) {\n        if (C[_i2][index] < minDistancesColumn[_i2]) minDistancesColumn[_i2] = C[_i2][index];\n      }\n\n      for (var _i3 = 0; _i3 < nodeSize; _i3++) {\n        if (minDistancesColumn[_i3] > max_dist) {\n          max_dist = minDistancesColumn[_i3];\n          max_ind = _i3;\n        }\n      }\n    }\n    return max_ind;\n  };\n\n  // apply BFS to all nodes or selected samples\n  var allBFS = function allBFS(samplingMethod) {\n\n    var sample = void 0;\n\n    if (!samplingMethod) {\n      randomSampleCR();\n\n      // call BFS\n      for (var i = 0; i < sampleSize; i++) {\n        BFS(samplesColumn[i], i, samplingMethod, false);\n      }\n    } else {\n      sample = Math.floor(Math.random() * nodeSize);\n      firstSample = sample;\n\n      for (var _i4 = 0; _i4 < nodeSize; _i4++) {\n        minDistancesColumn[_i4] = infinity;\n      }\n\n      for (var _i5 = 0; _i5 < sampleSize; _i5++) {\n        samplesColumn[_i5] = sample;\n        sample = BFS(sample, _i5, samplingMethod);\n      }\n    }\n\n    // form the squared distances for C\n    for (var _i6 = 0; _i6 < nodeSize; _i6++) {\n      for (var j = 0; j < sampleSize; j++) {\n        C[_i6][j] *= C[_i6][j];\n      }\n    }\n\n    // form PHI\n    for (var _i7 = 0; _i7 < sampleSize; _i7++) {\n      PHI[_i7] = [];\n    }\n\n    for (var _i8 = 0; _i8 < sampleSize; _i8++) {\n      for (var _j = 0; _j < sampleSize; _j++) {\n        PHI[_i8][_j] = C[samplesColumn[_j]][_i8];\n      }\n    }\n  };\n\n  // perform the SVD algorithm and apply a regularization step\n  var sample = function sample() {\n\n    var SVDResult = SVD.svd(PHI);\n\n    var a_q = SVDResult.S;\n    var a_u = SVDResult.U;\n    var a_v = SVDResult.V;\n\n    var max_s = a_q[0] * a_q[0] * a_q[0];\n\n    var a_Sig = [];\n\n    //  regularization\n    for (var i = 0; i < sampleSize; i++) {\n      a_Sig[i] = [];\n      for (var j = 0; j < sampleSize; j++) {\n        a_Sig[i][j] = 0;\n        if (i == j) {\n          a_Sig[i][j] = a_q[i] / (a_q[i] * a_q[i] + max_s / (a_q[i] * a_q[i]));\n        }\n      }\n    }\n\n    INV = Matrix.multMat(Matrix.multMat(a_v, a_Sig), Matrix.transpose(a_u));\n  };\n\n  // calculate final coordinates \n  var powerIteration = function powerIteration() {\n    // two largest eigenvalues\n    var theta1 = void 0;\n    var theta2 = void 0;\n\n    // initial guesses for eigenvectors\n    var Y1 = [];\n    var Y2 = [];\n\n    var V1 = [];\n    var V2 = [];\n\n    for (var i = 0; i < nodeSize; i++) {\n      Y1[i] = Math.random();\n      Y2[i] = Math.random();\n    }\n\n    Y1 = Matrix.normalize(Y1);\n    Y2 = Matrix.normalize(Y2);\n\n    var count = 0;\n    // to keep track of the improvement ratio in power iteration\n    var current = small;\n    var previous = small;\n\n    var temp = void 0;\n\n    while (true) {\n      count++;\n\n      for (var _i9 = 0; _i9 < nodeSize; _i9++) {\n        V1[_i9] = Y1[_i9];\n      }\n\n      Y1 = Matrix.multGamma(Matrix.multL(Matrix.multGamma(V1), C, INV));\n      theta1 = Matrix.dotProduct(V1, Y1);\n      Y1 = Matrix.normalize(Y1);\n\n      current = Matrix.dotProduct(V1, Y1);\n\n      temp = Math.abs(current / previous);\n\n      if (temp <= 1 + piTol && temp >= 1) {\n        break;\n      }\n\n      previous = current;\n    }\n\n    for (var _i10 = 0; _i10 < nodeSize; _i10++) {\n      V1[_i10] = Y1[_i10];\n    }\n\n    count = 0;\n    previous = small;\n    while (true) {\n      count++;\n\n      for (var _i11 = 0; _i11 < nodeSize; _i11++) {\n        V2[_i11] = Y2[_i11];\n      }\n\n      V2 = Matrix.minusOp(V2, Matrix.multCons(V1, Matrix.dotProduct(V1, V2)));\n      Y2 = Matrix.multGamma(Matrix.multL(Matrix.multGamma(V2), C, INV));\n      theta2 = Matrix.dotProduct(V2, Y2);\n      Y2 = Matrix.normalize(Y2);\n\n      current = Matrix.dotProduct(V2, Y2);\n\n      temp = Math.abs(current / previous);\n\n      if (temp <= 1 + piTol && temp >= 1) {\n        break;\n      }\n\n      previous = current;\n    }\n\n    for (var _i12 = 0; _i12 < nodeSize; _i12++) {\n      V2[_i12] = Y2[_i12];\n    }\n\n    // theta1 now contains dominant eigenvalue\n    // theta2 now contains the second-largest eigenvalue\n    // V1 now contains theta1's eigenvector\n    // V2 now contains theta2's eigenvector\n\n    //populate the two vectors\n    xCoords = Matrix.multCons(V1, Math.sqrt(Math.abs(theta1)));\n    yCoords = Matrix.multCons(V2, Math.sqrt(Math.abs(theta2)));\n  };\n\n  /**** Preparation for spectral layout (Preprocessing) ****/\n\n  // connect disconnected components (first top level, then inside of each compound node)\n  aux.connectComponents(cy, eles, aux.getTopMostNodes(nodes), dummyNodes);\n\n  parentNodes.forEach(function (ele) {\n    aux.connectComponents(cy, eles, aux.getTopMostNodes(ele.descendants().intersection(eles)), dummyNodes);\n  });\n\n  // assign indexes to nodes (first real, then dummy nodes)\n  var index = 0;\n  for (var i = 0; i < nodes.length; i++) {\n    if (!nodes[i].isParent()) {\n      nodeIndexes.set(nodes[i].id(), index++);\n    }\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = dummyNodes.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n\n      nodeIndexes.set(key, index++);\n    }\n\n    // instantiate the neighborhood matrix\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  for (var _i13 = 0; _i13 < nodeIndexes.size; _i13++) {\n    allNodesNeighborhood[_i13] = [];\n  }\n\n  // form a parent-child map to keep representative node of each compound node  \n  parentNodes.forEach(function (ele) {\n    var children = ele.children().intersection(eles);\n\n    //      let random = 0;\n    while (children.nodes(\":childless\").length == 0) {\n      //        random = Math.floor(Math.random() * children.nodes().length); // if all children are compound then proceed randomly\n      children = children.nodes()[0].children().intersection(eles);\n    }\n    //  select the representative node - we can apply different methods here\n    //      random = Math.floor(Math.random() * children.nodes(\":childless\").length);\n    var index = 0;\n    var min = children.nodes(\":childless\")[0].connectedEdges().length;\n    children.nodes(\":childless\").forEach(function (ele2, i) {\n      if (ele2.connectedEdges().length < min) {\n        min = ele2.connectedEdges().length;\n        index = i;\n      }\n    });\n    parentChildMap.set(ele.id(), children.nodes(\":childless\")[index].id());\n  });\n\n  // add neighborhood relations (first real, then dummy nodes)\n  nodes.forEach(function (ele) {\n    var eleIndex = void 0;\n\n    if (ele.isParent()) eleIndex = nodeIndexes.get(parentChildMap.get(ele.id()));else eleIndex = nodeIndexes.get(ele.id());\n\n    ele.neighborhood().nodes().forEach(function (node) {\n      if (eles.intersection(ele.edgesWith(node)).length > 0) {\n        if (node.isParent()) allNodesNeighborhood[eleIndex].push(parentChildMap.get(node.id()));else allNodesNeighborhood[eleIndex].push(node.id());\n      }\n    });\n  });\n\n  var _loop = function _loop(_key) {\n    var eleIndex = nodeIndexes.get(_key);\n    var disconnectedId = void 0;\n    dummyNodes.get(_key).forEach(function (id) {\n      if (cy.getElementById(id).isParent()) disconnectedId = parentChildMap.get(id);else disconnectedId = id;\n\n      allNodesNeighborhood[eleIndex].push(disconnectedId);\n      allNodesNeighborhood[nodeIndexes.get(disconnectedId)].push(_key);\n    });\n  };\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = dummyNodes.keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _key = _step2.value;\n\n      _loop(_key);\n    }\n\n    // nodeSize now only considers the size of transformed graph\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  nodeSize = nodeIndexes.size;\n\n  var spectralResult = void 0;\n\n  // If number of nodes in transformed graph is 1 or 2, either SVD or powerIteration causes problem\n  // So skip spectral and layout the graph with cose\n  if (nodeSize > 2) {\n    // if # of nodes in transformed graph is smaller than sample size,\n    // then use # of nodes as sample size\n    sampleSize = nodeSize < options.sampleSize ? nodeSize : options.sampleSize;\n\n    // instantiates the partial matrices that will be used in spectral layout\n    for (var _i14 = 0; _i14 < nodeSize; _i14++) {\n      C[_i14] = [];\n    }\n    for (var _i15 = 0; _i15 < sampleSize; _i15++) {\n      INV[_i15] = [];\n    }\n\n    /**** Apply spectral layout ****/\n\n    if (options.quality == \"draft\" || options.step == \"all\") {\n      allBFS(samplingType);\n      sample();\n      powerIteration();\n\n      spectralResult = { nodeIndexes: nodeIndexes, xCoords: xCoords, yCoords: yCoords };\n    } else {\n      nodeIndexes.forEach(function (value, key) {\n        xCoords.push(cy.getElementById(key).position(\"x\"));\n        yCoords.push(cy.getElementById(key).position(\"y\"));\n      });\n      spectralResult = { nodeIndexes: nodeIndexes, xCoords: xCoords, yCoords: yCoords };\n    }\n    return spectralResult;\n  } else {\n    var iterator = nodeIndexes.keys();\n    var firstNode = cy.getElementById(iterator.next().value);\n    var firstNodePos = firstNode.position();\n    var firstNodeWidth = firstNode.outerWidth();\n    xCoords.push(firstNodePos.x);\n    yCoords.push(firstNodePos.y);\n    if (nodeSize == 2) {\n      var secondNode = cy.getElementById(iterator.next().value);\n      var secondNodeWidth = secondNode.outerWidth();\n      xCoords.push(firstNodePos.x + firstNodeWidth / 2 + secondNodeWidth / 2 + options.idealEdgeLength);\n      yCoords.push(firstNodePos.y);\n    }\n\n    spectralResult = { nodeIndexes: nodeIndexes, xCoords: xCoords, yCoords: yCoords };\n    return spectralResult;\n  }\n};\n\nmodule.exports = { spectralLayout: spectralLayout };\n\n/***/ }),\n\n/***/ 579:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar impl = __webpack_require__(212);\n\n// registers the extension on a cytoscape lib ref\nvar register = function register(cytoscape) {\n  if (!cytoscape) {\n    return;\n  } // can't register if cytoscape unspecified\n\n  cytoscape('layout', 'fcose', impl); // register with cytoscape.js\n};\n\nif (typeof cytoscape !== 'undefined') {\n  // expose to global cytoscape (i.e. window.cytoscape)\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ }),\n\n/***/ 140:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__140__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __webpack_exports__ = __webpack_require__(579);\n/******/ \t\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});","import {\n  selectSvgElement\n} from \"./chunk-EXTU4WIE.mjs\";\nimport {\n  createText,\n  getIconSVG,\n  registerIconPacks,\n  unknownIcon\n} from \"./chunk-JA3XYJ7Z.mjs\";\nimport {\n  populateCommonDb\n} from \"./chunk-4BX2VUAB.mjs\";\nimport {\n  cleanAndMerge\n} from \"./chunk-S3R3BYOJ.mjs\";\nimport {\n  clear,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getConfig2,\n  getDiagramTitle,\n  sanitizeText,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n  setupGraphViewbox\n} from \"./chunk-ABZYJK2D.mjs\";\nimport {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/architecture/architectureParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/architecture/architectureTypes.ts\nvar ArchitectureDirectionName = {\n  L: \"left\",\n  R: \"right\",\n  T: \"top\",\n  B: \"bottom\"\n};\nvar ArchitectureDirectionArrow = {\n  L: /* @__PURE__ */ __name((scale) => `${scale},${scale / 2} 0,${scale} 0,0`, \"L\"),\n  R: /* @__PURE__ */ __name((scale) => `0,${scale / 2} ${scale},0 ${scale},${scale}`, \"R\"),\n  T: /* @__PURE__ */ __name((scale) => `0,0 ${scale},0 ${scale / 2},${scale}`, \"T\"),\n  B: /* @__PURE__ */ __name((scale) => `${scale / 2},0 ${scale},${scale} 0,${scale}`, \"B\")\n};\nvar ArchitectureDirectionArrowShift = {\n  L: /* @__PURE__ */ __name((orig, arrowSize) => orig - arrowSize + 2, \"L\"),\n  R: /* @__PURE__ */ __name((orig, _arrowSize) => orig - 2, \"R\"),\n  T: /* @__PURE__ */ __name((orig, arrowSize) => orig - arrowSize + 2, \"T\"),\n  B: /* @__PURE__ */ __name((orig, _arrowSize) => orig - 2, \"B\")\n};\nvar getOppositeArchitectureDirection = /* @__PURE__ */ __name(function(x) {\n  if (isArchitectureDirectionX(x)) {\n    return x === \"L\" ? \"R\" : \"L\";\n  } else {\n    return x === \"T\" ? \"B\" : \"T\";\n  }\n}, \"getOppositeArchitectureDirection\");\nvar isArchitectureDirection = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp === \"L\" || temp === \"R\" || temp === \"T\" || temp === \"B\";\n}, \"isArchitectureDirection\");\nvar isArchitectureDirectionX = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp === \"L\" || temp === \"R\";\n}, \"isArchitectureDirectionX\");\nvar isArchitectureDirectionY = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp === \"T\" || temp === \"B\";\n}, \"isArchitectureDirectionY\");\nvar isArchitectureDirectionXY = /* @__PURE__ */ __name(function(a, b) {\n  const aX_bY = isArchitectureDirectionX(a) && isArchitectureDirectionY(b);\n  const aY_bX = isArchitectureDirectionY(a) && isArchitectureDirectionX(b);\n  return aX_bY || aY_bX;\n}, \"isArchitectureDirectionXY\");\nvar isArchitecturePairXY = /* @__PURE__ */ __name(function(pair) {\n  const lhs = pair[0];\n  const rhs = pair[1];\n  const aX_bY = isArchitectureDirectionX(lhs) && isArchitectureDirectionY(rhs);\n  const aY_bX = isArchitectureDirectionY(lhs) && isArchitectureDirectionX(rhs);\n  return aX_bY || aY_bX;\n}, \"isArchitecturePairXY\");\nvar isValidArchitectureDirectionPair = /* @__PURE__ */ __name(function(x) {\n  return x !== \"LL\" && x !== \"RR\" && x !== \"TT\" && x !== \"BB\";\n}, \"isValidArchitectureDirectionPair\");\nvar getArchitectureDirectionPair = /* @__PURE__ */ __name(function(sourceDir, targetDir) {\n  const pair = `${sourceDir}${targetDir}`;\n  return isValidArchitectureDirectionPair(pair) ? pair : void 0;\n}, \"getArchitectureDirectionPair\");\nvar shiftPositionByArchitectureDirectionPair = /* @__PURE__ */ __name(function([x, y], pair) {\n  const lhs = pair[0];\n  const rhs = pair[1];\n  if (isArchitectureDirectionX(lhs)) {\n    if (isArchitectureDirectionY(rhs)) {\n      return [x + (lhs === \"L\" ? -1 : 1), y + (rhs === \"T\" ? 1 : -1)];\n    } else {\n      return [x + (lhs === \"L\" ? -1 : 1), y];\n    }\n  } else {\n    if (isArchitectureDirectionX(rhs)) {\n      return [x + (rhs === \"L\" ? 1 : -1), y + (lhs === \"T\" ? 1 : -1)];\n    } else {\n      return [x, y + (lhs === \"T\" ? 1 : -1)];\n    }\n  }\n}, \"shiftPositionByArchitectureDirectionPair\");\nvar getArchitectureDirectionXYFactors = /* @__PURE__ */ __name(function(pair) {\n  if (pair === \"LT\" || pair === \"TL\") {\n    return [1, 1];\n  } else if (pair === \"BL\" || pair === \"LB\") {\n    return [1, -1];\n  } else if (pair === \"BR\" || pair === \"RB\") {\n    return [-1, -1];\n  } else {\n    return [-1, 1];\n  }\n}, \"getArchitectureDirectionXYFactors\");\nvar getArchitectureDirectionAlignment = /* @__PURE__ */ __name(function(a, b) {\n  if (isArchitectureDirectionXY(a, b)) {\n    return \"bend\";\n  } else if (isArchitectureDirectionX(a)) {\n    return \"horizontal\";\n  }\n  return \"vertical\";\n}, \"getArchitectureDirectionAlignment\");\nvar isArchitectureService = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp.type === \"service\";\n}, \"isArchitectureService\");\nvar isArchitectureJunction = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp.type === \"junction\";\n}, \"isArchitectureJunction\");\nvar edgeData = /* @__PURE__ */ __name((edge) => {\n  return edge.data();\n}, \"edgeData\");\nvar nodeData = /* @__PURE__ */ __name((node) => {\n  return node.data();\n}, \"nodeData\");\n\n// src/diagrams/architecture/architectureDb.ts\nvar DEFAULT_ARCHITECTURE_CONFIG = defaultConfig_default.architecture;\nvar ArchitectureDB = class {\n  constructor() {\n    this.nodes = {};\n    this.groups = {};\n    this.edges = [];\n    this.registeredIds = {};\n    this.elements = {};\n    this.setAccTitle = setAccTitle;\n    this.getAccTitle = getAccTitle;\n    this.setDiagramTitle = setDiagramTitle;\n    this.getDiagramTitle = getDiagramTitle;\n    this.getAccDescription = getAccDescription;\n    this.setAccDescription = setAccDescription;\n    this.clear();\n  }\n  static {\n    __name(this, \"ArchitectureDB\");\n  }\n  clear() {\n    this.nodes = {};\n    this.groups = {};\n    this.edges = [];\n    this.registeredIds = {};\n    this.dataStructures = void 0;\n    this.elements = {};\n    clear();\n  }\n  addService({\n    id,\n    icon,\n    in: parent,\n    title,\n    iconText\n  }) {\n    if (this.registeredIds[id] !== void 0) {\n      throw new Error(\n        `The service id [${id}] is already in use by another ${this.registeredIds[id]}`\n      );\n    }\n    if (parent !== void 0) {\n      if (id === parent) {\n        throw new Error(`The service [${id}] cannot be placed within itself`);\n      }\n      if (this.registeredIds[parent] === void 0) {\n        throw new Error(\n          `The service [${id}]'s parent does not exist. Please make sure the parent is created before this service`\n        );\n      }\n      if (this.registeredIds[parent] === \"node\") {\n        throw new Error(`The service [${id}]'s parent is not a group`);\n      }\n    }\n    this.registeredIds[id] = \"node\";\n    this.nodes[id] = {\n      id,\n      type: \"service\",\n      icon,\n      iconText,\n      title,\n      edges: [],\n      in: parent\n    };\n  }\n  getServices() {\n    return Object.values(this.nodes).filter(isArchitectureService);\n  }\n  addJunction({ id, in: parent }) {\n    this.registeredIds[id] = \"node\";\n    this.nodes[id] = {\n      id,\n      type: \"junction\",\n      edges: [],\n      in: parent\n    };\n  }\n  getJunctions() {\n    return Object.values(this.nodes).filter(isArchitectureJunction);\n  }\n  getNodes() {\n    return Object.values(this.nodes);\n  }\n  getNode(id) {\n    return this.nodes[id] ?? null;\n  }\n  addGroup({ id, icon, in: parent, title }) {\n    if (this.registeredIds?.[id] !== void 0) {\n      throw new Error(\n        `The group id [${id}] is already in use by another ${this.registeredIds[id]}`\n      );\n    }\n    if (parent !== void 0) {\n      if (id === parent) {\n        throw new Error(`The group [${id}] cannot be placed within itself`);\n      }\n      if (this.registeredIds?.[parent] === void 0) {\n        throw new Error(\n          `The group [${id}]'s parent does not exist. Please make sure the parent is created before this group`\n        );\n      }\n      if (this.registeredIds?.[parent] === \"node\") {\n        throw new Error(`The group [${id}]'s parent is not a group`);\n      }\n    }\n    this.registeredIds[id] = \"group\";\n    this.groups[id] = {\n      id,\n      icon,\n      title,\n      in: parent\n    };\n  }\n  getGroups() {\n    return Object.values(this.groups);\n  }\n  addEdge({\n    lhsId,\n    rhsId,\n    lhsDir,\n    rhsDir,\n    lhsInto,\n    rhsInto,\n    lhsGroup,\n    rhsGroup,\n    title\n  }) {\n    if (!isArchitectureDirection(lhsDir)) {\n      throw new Error(\n        `Invalid direction given for left hand side of edge ${lhsId}--${rhsId}. Expected (L,R,T,B) got ${String(lhsDir)}`\n      );\n    }\n    if (!isArchitectureDirection(rhsDir)) {\n      throw new Error(\n        `Invalid direction given for right hand side of edge ${lhsId}--${rhsId}. Expected (L,R,T,B) got ${String(rhsDir)}`\n      );\n    }\n    if (this.nodes[lhsId] === void 0 && this.groups[lhsId] === void 0) {\n      throw new Error(\n        `The left-hand id [${lhsId}] does not yet exist. Please create the service/group before declaring an edge to it.`\n      );\n    }\n    if (this.nodes[rhsId] === void 0 && this.groups[rhsId] === void 0) {\n      throw new Error(\n        `The right-hand id [${rhsId}] does not yet exist. Please create the service/group before declaring an edge to it.`\n      );\n    }\n    const lhsGroupId = this.nodes[lhsId].in;\n    const rhsGroupId = this.nodes[rhsId].in;\n    if (lhsGroup && lhsGroupId && rhsGroupId && lhsGroupId == rhsGroupId) {\n      throw new Error(\n        `The left-hand id [${lhsId}] is modified to traverse the group boundary, but the edge does not pass through two groups.`\n      );\n    }\n    if (rhsGroup && lhsGroupId && rhsGroupId && lhsGroupId == rhsGroupId) {\n      throw new Error(\n        `The right-hand id [${rhsId}] is modified to traverse the group boundary, but the edge does not pass through two groups.`\n      );\n    }\n    const edge = {\n      lhsId,\n      lhsDir,\n      lhsInto,\n      lhsGroup,\n      rhsId,\n      rhsDir,\n      rhsInto,\n      rhsGroup,\n      title\n    };\n    this.edges.push(edge);\n    if (this.nodes[lhsId] && this.nodes[rhsId]) {\n      this.nodes[lhsId].edges.push(this.edges[this.edges.length - 1]);\n      this.nodes[rhsId].edges.push(this.edges[this.edges.length - 1]);\n    }\n  }\n  getEdges() {\n    return this.edges;\n  }\n  /**\n   * Returns the current diagram's adjacency list, spatial map, & group alignments.\n   * If they have not been created, run the algorithms to generate them.\n   * @returns\n   */\n  getDataStructures() {\n    if (this.dataStructures === void 0) {\n      const groupAlignments = {};\n      const adjList = Object.entries(this.nodes).reduce((prevOuter, [id, service]) => {\n        prevOuter[id] = service.edges.reduce((prevInner, edge) => {\n          const lhsGroupId = this.getNode(edge.lhsId)?.in;\n          const rhsGroupId = this.getNode(edge.rhsId)?.in;\n          if (lhsGroupId && rhsGroupId && lhsGroupId !== rhsGroupId) {\n            const alignment = getArchitectureDirectionAlignment(edge.lhsDir, edge.rhsDir);\n            if (alignment !== \"bend\") {\n              groupAlignments[lhsGroupId] ??= {};\n              groupAlignments[lhsGroupId][rhsGroupId] = alignment;\n              groupAlignments[rhsGroupId] ??= {};\n              groupAlignments[rhsGroupId][lhsGroupId] = alignment;\n            }\n          }\n          if (edge.lhsId === id) {\n            const pair = getArchitectureDirectionPair(edge.lhsDir, edge.rhsDir);\n            if (pair) {\n              prevInner[pair] = edge.rhsId;\n            }\n          } else {\n            const pair = getArchitectureDirectionPair(edge.rhsDir, edge.lhsDir);\n            if (pair) {\n              prevInner[pair] = edge.lhsId;\n            }\n          }\n          return prevInner;\n        }, {});\n        return prevOuter;\n      }, {});\n      const firstId = Object.keys(adjList)[0];\n      const visited = { [firstId]: 1 };\n      const notVisited = Object.keys(adjList).reduce(\n        (prev, id) => id === firstId ? prev : { ...prev, [id]: 1 },\n        {}\n      );\n      const BFS = /* @__PURE__ */ __name((startingId) => {\n        const spatialMap = { [startingId]: [0, 0] };\n        const queue = [startingId];\n        while (queue.length > 0) {\n          const id = queue.shift();\n          if (id) {\n            visited[id] = 1;\n            delete notVisited[id];\n            const adj = adjList[id];\n            const [posX, posY] = spatialMap[id];\n            Object.entries(adj).forEach(([dir, rhsId]) => {\n              if (!visited[rhsId]) {\n                spatialMap[rhsId] = shiftPositionByArchitectureDirectionPair(\n                  [posX, posY],\n                  dir\n                );\n                queue.push(rhsId);\n              }\n            });\n          }\n        }\n        return spatialMap;\n      }, \"BFS\");\n      const spatialMaps = [BFS(firstId)];\n      while (Object.keys(notVisited).length > 0) {\n        spatialMaps.push(BFS(Object.keys(notVisited)[0]));\n      }\n      this.dataStructures = {\n        adjList,\n        spatialMaps,\n        groupAlignments\n      };\n    }\n    return this.dataStructures;\n  }\n  setElementForId(id, element) {\n    this.elements[id] = element;\n  }\n  getElementById(id) {\n    return this.elements[id];\n  }\n  getConfig() {\n    return cleanAndMerge({\n      ...DEFAULT_ARCHITECTURE_CONFIG,\n      ...getConfig().architecture\n    });\n  }\n  getConfigField(field) {\n    return this.getConfig()[field];\n  }\n};\n\n// src/diagrams/architecture/architectureParser.ts\nvar populateDb = /* @__PURE__ */ __name((ast, db) => {\n  populateCommonDb(ast, db);\n  ast.groups.map((group) => db.addGroup(group));\n  ast.services.map((service) => db.addService({ ...service, type: \"service\" }));\n  ast.junctions.map((service) => db.addJunction({ ...service, type: \"junction\" }));\n  ast.edges.map((edge) => db.addEdge(edge));\n}, \"populateDb\");\nvar parser = {\n  parser: {\n    // @ts-expect-error - ArchitectureDB is not assignable to DiagramDB\n    yy: void 0\n  },\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"architecture\", input);\n    log.debug(ast);\n    const db = parser.parser?.yy;\n    if (!(db instanceof ArchitectureDB)) {\n      throw new Error(\n        \"parser.parser?.yy was not a ArchitectureDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.\"\n      );\n    }\n    populateDb(ast, db);\n  }, \"parse\")\n};\n\n// src/diagrams/architecture/architectureStyles.ts\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .edge {\n    stroke-width: ${options.archEdgeWidth};\n    stroke: ${options.archEdgeColor};\n    fill: none;\n  }\n\n  .arrow {\n    fill: ${options.archEdgeArrowColor};\n  }\n\n  .node-bkg {\n    fill: none;\n    stroke: ${options.archGroupBorderColor};\n    stroke-width: ${options.archGroupBorderWidth};\n    stroke-dasharray: 8;\n  }\n  .node-icon-text {\n    display: flex; \n    align-items: center;\n  }\n  \n  .node-icon-text > div {\n    color: #fff;\n    margin: 1px;\n    height: fit-content;\n    text-align: center;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n  }\n`, \"getStyles\");\nvar architectureStyles_default = getStyles;\n\n// src/diagrams/architecture/architectureRenderer.ts\nimport cytoscape from \"cytoscape\";\nimport fcose from \"cytoscape-fcose\";\nimport { select } from \"d3\";\n\n// src/diagrams/architecture/architectureIcons.ts\nvar wrapIcon = /* @__PURE__ */ __name((icon) => {\n  return `<g><rect width=\"80\" height=\"80\" style=\"fill: #087ebf; stroke-width: 0px;\"/>${icon}</g>`;\n}, \"wrapIcon\");\nvar architectureIcons = {\n  prefix: \"mermaid-architecture\",\n  height: 80,\n  width: 80,\n  icons: {\n    database: {\n      body: wrapIcon(\n        '<path id=\"b\" data-name=\"4\" d=\"m20,57.86c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path id=\"c\" data-name=\"3\" d=\"m20,45.95c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path id=\"d\" data-name=\"2\" d=\"m20,34.05c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse id=\"e\" data-name=\"1\" cx=\"40\" cy=\"22.14\" rx=\"20\" ry=\"7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"20\" y1=\"57.86\" x2=\"20\" y2=\"22.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"60\" y1=\"57.86\" x2=\"60\" y2=\"22.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>'\n      )\n    },\n    server: {\n      body: wrapIcon(\n        '<rect x=\"17.5\" y=\"17.5\" width=\"45\" height=\"45\" rx=\"2\" ry=\"2\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"32.5\" x2=\"62.5\" y2=\"32.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"47.5\" x2=\"62.5\" y2=\"47.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><g><path d=\"m56.25,25c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,25c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><path d=\"m56.25,40c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,40c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><path d=\"m56.25,55c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,55c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g>'\n      )\n    },\n    disk: {\n      body: wrapIcon(\n        '<rect x=\"20\" y=\"15\" width=\"40\" height=\"50\" rx=\"1\" ry=\"1\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"24\" cy=\"19.17\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"56\" cy=\"19.17\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"24\" cy=\"60.83\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"56\" cy=\"60.83\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"40\" cy=\"33.75\" rx=\"14\" ry=\"14.58\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"40\" cy=\"33.75\" rx=\"4\" ry=\"4.17\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m37.51,42.52l-4.83,13.22c-.26.71-1.1,1.02-1.76.64l-4.18-2.42c-.66-.38-.81-1.26-.33-1.84l9.01-10.8c.88-1.05,2.56-.08,2.09,1.2Z\" style=\"fill: #fff; stroke-width: 0px;\"/>'\n      )\n    },\n    internet: {\n      body: wrapIcon(\n        '<circle cx=\"40\" cy=\"40\" r=\"22.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"40\" y1=\"17.5\" x2=\"40\" y2=\"62.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"40\" x2=\"62.5\" y2=\"40\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m39.99,17.51c-15.28,11.1-15.28,33.88,0,44.98\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m40.01,17.51c15.28,11.1,15.28,33.88,0,44.98\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"19.75\" y1=\"30.1\" x2=\"60.25\" y2=\"30.1\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"19.75\" y1=\"49.9\" x2=\"60.25\" y2=\"49.9\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>'\n      )\n    },\n    cloud: {\n      body: wrapIcon(\n        '<path d=\"m65,47.5c0,2.76-2.24,5-5,5H20c-2.76,0-5-2.24-5-5,0-1.87,1.03-3.51,2.56-4.36-.04-.21-.06-.42-.06-.64,0-2.6,2.48-4.74,5.65-4.97,1.65-4.51,6.34-7.76,11.85-7.76.86,0,1.69.08,2.5.23,2.09-1.57,4.69-2.5,7.5-2.5,6.1,0,11.19,4.38,12.28,10.17,2.14.56,3.72,2.51,3.72,4.83,0,.03,0,.07-.01.1,2.29.46,4.01,2.48,4.01,4.9Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>'\n      )\n    },\n    unknown: unknownIcon,\n    blank: {\n      body: wrapIcon(\"\")\n    }\n  }\n};\n\n// src/diagrams/architecture/svgDraw.ts\nvar drawEdges = /* @__PURE__ */ __name(async function(edgesEl, cy, db) {\n  const padding = db.getConfigField(\"padding\");\n  const iconSize = db.getConfigField(\"iconSize\");\n  const halfIconSize = iconSize / 2;\n  const arrowSize = iconSize / 6;\n  const halfArrowSize = arrowSize / 2;\n  await Promise.all(\n    cy.edges().map(async (edge) => {\n      const {\n        source,\n        sourceDir,\n        sourceArrow,\n        sourceGroup,\n        target,\n        targetDir,\n        targetArrow,\n        targetGroup,\n        label\n      } = edgeData(edge);\n      let { x: startX, y: startY } = edge[0].sourceEndpoint();\n      const { x: midX, y: midY } = edge[0].midpoint();\n      let { x: endX, y: endY } = edge[0].targetEndpoint();\n      const groupEdgeShift = padding + 4;\n      if (sourceGroup) {\n        if (isArchitectureDirectionX(sourceDir)) {\n          startX += sourceDir === \"L\" ? -groupEdgeShift : groupEdgeShift;\n        } else {\n          startY += sourceDir === \"T\" ? -groupEdgeShift : groupEdgeShift + 18;\n        }\n      }\n      if (targetGroup) {\n        if (isArchitectureDirectionX(targetDir)) {\n          endX += targetDir === \"L\" ? -groupEdgeShift : groupEdgeShift;\n        } else {\n          endY += targetDir === \"T\" ? -groupEdgeShift : groupEdgeShift + 18;\n        }\n      }\n      if (!sourceGroup && db.getNode(source)?.type === \"junction\") {\n        if (isArchitectureDirectionX(sourceDir)) {\n          startX += sourceDir === \"L\" ? halfIconSize : -halfIconSize;\n        } else {\n          startY += sourceDir === \"T\" ? halfIconSize : -halfIconSize;\n        }\n      }\n      if (!targetGroup && db.getNode(target)?.type === \"junction\") {\n        if (isArchitectureDirectionX(targetDir)) {\n          endX += targetDir === \"L\" ? halfIconSize : -halfIconSize;\n        } else {\n          endY += targetDir === \"T\" ? halfIconSize : -halfIconSize;\n        }\n      }\n      if (edge[0]._private.rscratch) {\n        const g = edgesEl.insert(\"g\");\n        g.insert(\"path\").attr(\"d\", `M ${startX},${startY} L ${midX},${midY} L${endX},${endY} `).attr(\"class\", \"edge\");\n        if (sourceArrow) {\n          const xShift = isArchitectureDirectionX(sourceDir) ? ArchitectureDirectionArrowShift[sourceDir](startX, arrowSize) : startX - halfArrowSize;\n          const yShift = isArchitectureDirectionY(sourceDir) ? ArchitectureDirectionArrowShift[sourceDir](startY, arrowSize) : startY - halfArrowSize;\n          g.insert(\"polygon\").attr(\"points\", ArchitectureDirectionArrow[sourceDir](arrowSize)).attr(\"transform\", `translate(${xShift},${yShift})`).attr(\"class\", \"arrow\");\n        }\n        if (targetArrow) {\n          const xShift = isArchitectureDirectionX(targetDir) ? ArchitectureDirectionArrowShift[targetDir](endX, arrowSize) : endX - halfArrowSize;\n          const yShift = isArchitectureDirectionY(targetDir) ? ArchitectureDirectionArrowShift[targetDir](endY, arrowSize) : endY - halfArrowSize;\n          g.insert(\"polygon\").attr(\"points\", ArchitectureDirectionArrow[targetDir](arrowSize)).attr(\"transform\", `translate(${xShift},${yShift})`).attr(\"class\", \"arrow\");\n        }\n        if (label) {\n          const axis = !isArchitectureDirectionXY(sourceDir, targetDir) ? isArchitectureDirectionX(sourceDir) ? \"X\" : \"Y\" : \"XY\";\n          let width = 0;\n          if (axis === \"X\") {\n            width = Math.abs(startX - endX);\n          } else if (axis === \"Y\") {\n            width = Math.abs(startY - endY) / 1.5;\n          } else {\n            width = Math.abs(startX - endX) / 2;\n          }\n          const textElem = g.append(\"g\");\n          await createText(\n            textElem,\n            label,\n            {\n              useHtmlLabels: false,\n              width,\n              classes: \"architecture-service-label\"\n            },\n            getConfig2()\n          );\n          textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n          if (axis === \"X\") {\n            textElem.attr(\"transform\", \"translate(\" + midX + \", \" + midY + \")\");\n          } else if (axis === \"Y\") {\n            textElem.attr(\"transform\", \"translate(\" + midX + \", \" + midY + \") rotate(-90)\");\n          } else if (axis === \"XY\") {\n            const pair = getArchitectureDirectionPair(sourceDir, targetDir);\n            if (pair && isArchitecturePairXY(pair)) {\n              const bboxOrig = textElem.node().getBoundingClientRect();\n              const [x, y] = getArchitectureDirectionXYFactors(pair);\n              textElem.attr(\"dominant-baseline\", \"auto\").attr(\"transform\", `rotate(${-1 * x * y * 45})`);\n              const bboxNew = textElem.node().getBoundingClientRect();\n              textElem.attr(\n                \"transform\",\n                `\n                translate(${midX}, ${midY - bboxOrig.height / 2})\n                translate(${x * bboxNew.width / 2}, ${y * bboxNew.height / 2})\n                rotate(${-1 * x * y * 45}, 0, ${bboxOrig.height / 2})\n              `\n              );\n            }\n          }\n        }\n      }\n    })\n  );\n}, \"drawEdges\");\nvar drawGroups = /* @__PURE__ */ __name(async function(groupsEl, cy, db) {\n  const padding = db.getConfigField(\"padding\");\n  const groupIconSize = padding * 0.75;\n  const fontSize = db.getConfigField(\"fontSize\");\n  const iconSize = db.getConfigField(\"iconSize\");\n  const halfIconSize = iconSize / 2;\n  await Promise.all(\n    cy.nodes().map(async (node) => {\n      const data = nodeData(node);\n      if (data.type === \"group\") {\n        const { h, w, x1, y1 } = node.boundingBox();\n        groupsEl.append(\"rect\").attr(\"x\", x1 + halfIconSize).attr(\"y\", y1 + halfIconSize).attr(\"width\", w).attr(\"height\", h).attr(\"class\", \"node-bkg\");\n        const groupLabelContainer = groupsEl.append(\"g\");\n        let shiftedX1 = x1;\n        let shiftedY1 = y1;\n        if (data.icon) {\n          const bkgElem = groupLabelContainer.append(\"g\");\n          bkgElem.html(\n            `<g>${await getIconSVG(data.icon, { height: groupIconSize, width: groupIconSize, fallbackPrefix: architectureIcons.prefix })}</g>`\n          );\n          bkgElem.attr(\n            \"transform\",\n            \"translate(\" + (shiftedX1 + halfIconSize + 1) + \", \" + (shiftedY1 + halfIconSize + 1) + \")\"\n          );\n          shiftedX1 += groupIconSize;\n          shiftedY1 += fontSize / 2 - 1 - 2;\n        }\n        if (data.label) {\n          const textElem = groupLabelContainer.append(\"g\");\n          await createText(\n            textElem,\n            data.label,\n            {\n              useHtmlLabels: false,\n              width: w,\n              classes: \"architecture-service-label\"\n            },\n            getConfig2()\n          );\n          textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"start\").attr(\"text-anchor\", \"start\");\n          textElem.attr(\n            \"transform\",\n            \"translate(\" + (shiftedX1 + halfIconSize + 4) + \", \" + (shiftedY1 + halfIconSize + 2) + \")\"\n          );\n        }\n      }\n    })\n  );\n}, \"drawGroups\");\nvar drawServices = /* @__PURE__ */ __name(async function(db, elem, services) {\n  const config = getConfig2();\n  for (const service of services) {\n    const serviceElem = elem.append(\"g\");\n    const iconSize = db.getConfigField(\"iconSize\");\n    if (service.title) {\n      const textElem = serviceElem.append(\"g\");\n      await createText(\n        textElem,\n        service.title,\n        {\n          useHtmlLabels: false,\n          width: iconSize * 1.5,\n          classes: \"architecture-service-label\"\n        },\n        config\n      );\n      textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n      textElem.attr(\"transform\", \"translate(\" + iconSize / 2 + \", \" + iconSize + \")\");\n    }\n    const bkgElem = serviceElem.append(\"g\");\n    if (service.icon) {\n      bkgElem.html(\n        `<g>${await getIconSVG(service.icon, { height: iconSize, width: iconSize, fallbackPrefix: architectureIcons.prefix })}</g>`\n      );\n    } else if (service.iconText) {\n      bkgElem.html(\n        `<g>${await getIconSVG(\"blank\", { height: iconSize, width: iconSize, fallbackPrefix: architectureIcons.prefix })}</g>`\n      );\n      const textElemContainer = bkgElem.append(\"g\");\n      const fo = textElemContainer.append(\"foreignObject\").attr(\"width\", iconSize).attr(\"height\", iconSize);\n      const divElem = fo.append(\"div\").attr(\"class\", \"node-icon-text\").attr(\"style\", `height: ${iconSize}px;`).append(\"div\").html(sanitizeText(service.iconText, config));\n      const fontSize = parseInt(\n        window.getComputedStyle(divElem.node(), null).getPropertyValue(\"font-size\").replace(/\\D/g, \"\")\n      ) ?? 16;\n      divElem.attr(\"style\", `-webkit-line-clamp: ${Math.floor((iconSize - 2) / fontSize)};`);\n    } else {\n      bkgElem.append(\"path\").attr(\"class\", \"node-bkg\").attr(\"id\", \"node-\" + service.id).attr(\n        \"d\",\n        `M0 ${iconSize} v${-iconSize} q0,-5 5,-5 h${iconSize} q5,0 5,5 v${iconSize} H0 Z`\n      );\n    }\n    serviceElem.attr(\"class\", \"architecture-service\");\n    const { width, height } = serviceElem._groups[0][0].getBBox();\n    service.width = width;\n    service.height = height;\n    db.setElementForId(service.id, serviceElem);\n  }\n  return 0;\n}, \"drawServices\");\nvar drawJunctions = /* @__PURE__ */ __name(function(db, elem, junctions) {\n  junctions.forEach((junction) => {\n    const junctionElem = elem.append(\"g\");\n    const iconSize = db.getConfigField(\"iconSize\");\n    const bkgElem = junctionElem.append(\"g\");\n    bkgElem.append(\"rect\").attr(\"id\", \"node-\" + junction.id).attr(\"fill-opacity\", \"0\").attr(\"width\", iconSize).attr(\"height\", iconSize);\n    junctionElem.attr(\"class\", \"architecture-junction\");\n    const { width, height } = junctionElem._groups[0][0].getBBox();\n    junctionElem.width = width;\n    junctionElem.height = height;\n    db.setElementForId(junction.id, junctionElem);\n  });\n}, \"drawJunctions\");\n\n// src/diagrams/architecture/architectureRenderer.ts\nregisterIconPacks([\n  {\n    name: architectureIcons.prefix,\n    icons: architectureIcons\n  }\n]);\ncytoscape.use(fcose);\nfunction addServices(services, cy, db) {\n  services.forEach((service) => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"service\",\n        id: service.id,\n        icon: service.icon,\n        label: service.title,\n        parent: service.in,\n        width: db.getConfigField(\"iconSize\"),\n        height: db.getConfigField(\"iconSize\")\n      },\n      classes: \"node-service\"\n    });\n  });\n}\n__name(addServices, \"addServices\");\nfunction addJunctions(junctions, cy, db) {\n  junctions.forEach((junction) => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"junction\",\n        id: junction.id,\n        parent: junction.in,\n        width: db.getConfigField(\"iconSize\"),\n        height: db.getConfigField(\"iconSize\")\n      },\n      classes: \"node-junction\"\n    });\n  });\n}\n__name(addJunctions, \"addJunctions\");\nfunction positionNodes(db, cy) {\n  cy.nodes().map((node) => {\n    const data = nodeData(node);\n    if (data.type === \"group\") {\n      return;\n    }\n    data.x = node.position().x;\n    data.y = node.position().y;\n    const nodeElem = db.getElementById(data.id);\n    nodeElem.attr(\"transform\", \"translate(\" + (data.x || 0) + \",\" + (data.y || 0) + \")\");\n  });\n}\n__name(positionNodes, \"positionNodes\");\nfunction addGroups(groups, cy) {\n  groups.forEach((group) => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"group\",\n        id: group.id,\n        icon: group.icon,\n        label: group.title,\n        parent: group.in\n      },\n      classes: \"node-group\"\n    });\n  });\n}\n__name(addGroups, \"addGroups\");\nfunction addEdges(edges, cy) {\n  edges.forEach((parsedEdge) => {\n    const { lhsId, rhsId, lhsInto, lhsGroup, rhsInto, lhsDir, rhsDir, rhsGroup, title } = parsedEdge;\n    const edgeType = isArchitectureDirectionXY(parsedEdge.lhsDir, parsedEdge.rhsDir) ? \"segments\" : \"straight\";\n    const edge = {\n      id: `${lhsId}-${rhsId}`,\n      label: title,\n      source: lhsId,\n      sourceDir: lhsDir,\n      sourceArrow: lhsInto,\n      sourceGroup: lhsGroup,\n      sourceEndpoint: lhsDir === \"L\" ? \"0 50%\" : lhsDir === \"R\" ? \"100% 50%\" : lhsDir === \"T\" ? \"50% 0\" : \"50% 100%\",\n      target: rhsId,\n      targetDir: rhsDir,\n      targetArrow: rhsInto,\n      targetGroup: rhsGroup,\n      targetEndpoint: rhsDir === \"L\" ? \"0 50%\" : rhsDir === \"R\" ? \"100% 50%\" : rhsDir === \"T\" ? \"50% 0\" : \"50% 100%\"\n    };\n    cy.add({\n      group: \"edges\",\n      data: edge,\n      classes: edgeType\n    });\n  });\n}\n__name(addEdges, \"addEdges\");\nfunction getAlignments(db, spatialMaps, groupAlignments) {\n  const flattenAlignments = /* @__PURE__ */ __name((alignmentObj, alignmentDir) => {\n    return Object.entries(alignmentObj).reduce(\n      (prev, [dir, alignments2]) => {\n        let cnt = 0;\n        const arr = Object.entries(alignments2);\n        if (arr.length === 1) {\n          prev[dir] = arr[0][1];\n          return prev;\n        }\n        for (let i = 0; i < arr.length - 1; i++) {\n          for (let j = i + 1; j < arr.length; j++) {\n            const [aGroupId, aNodeIds] = arr[i];\n            const [bGroupId, bNodeIds] = arr[j];\n            const alignment = groupAlignments[aGroupId]?.[bGroupId];\n            if (alignment === alignmentDir) {\n              prev[dir] ??= [];\n              prev[dir] = [...prev[dir], ...aNodeIds, ...bNodeIds];\n            } else if (aGroupId === \"default\" || bGroupId === \"default\") {\n              prev[dir] ??= [];\n              prev[dir] = [...prev[dir], ...aNodeIds, ...bNodeIds];\n            } else {\n              const keyA = `${dir}-${cnt++}`;\n              prev[keyA] = aNodeIds;\n              const keyB = `${dir}-${cnt++}`;\n              prev[keyB] = bNodeIds;\n            }\n          }\n        }\n        return prev;\n      },\n      {}\n    );\n  }, \"flattenAlignments\");\n  const alignments = spatialMaps.map((spatialMap) => {\n    const horizontalAlignments = {};\n    const verticalAlignments = {};\n    Object.entries(spatialMap).forEach(([id, [x, y]]) => {\n      const nodeGroup = db.getNode(id)?.in ?? \"default\";\n      horizontalAlignments[y] ??= {};\n      horizontalAlignments[y][nodeGroup] ??= [];\n      horizontalAlignments[y][nodeGroup].push(id);\n      verticalAlignments[x] ??= {};\n      verticalAlignments[x][nodeGroup] ??= [];\n      verticalAlignments[x][nodeGroup].push(id);\n    });\n    return {\n      horiz: Object.values(flattenAlignments(horizontalAlignments, \"horizontal\")).filter(\n        (arr) => arr.length > 1\n      ),\n      vert: Object.values(flattenAlignments(verticalAlignments, \"vertical\")).filter(\n        (arr) => arr.length > 1\n      )\n    };\n  });\n  const [horizontal, vertical] = alignments.reduce(\n    ([prevHoriz, prevVert], { horiz, vert }) => {\n      return [\n        [...prevHoriz, ...horiz],\n        [...prevVert, ...vert]\n      ];\n    },\n    [[], []]\n  );\n  return {\n    horizontal,\n    vertical\n  };\n}\n__name(getAlignments, \"getAlignments\");\nfunction getRelativeConstraints(spatialMaps, db) {\n  const relativeConstraints = [];\n  const posToStr = /* @__PURE__ */ __name((pos) => `${pos[0]},${pos[1]}`, \"posToStr\");\n  const strToPos = /* @__PURE__ */ __name((pos) => pos.split(\",\").map((p) => parseInt(p)), \"strToPos\");\n  spatialMaps.forEach((spatialMap) => {\n    const invSpatialMap = Object.fromEntries(\n      Object.entries(spatialMap).map(([id, pos]) => [posToStr(pos), id])\n    );\n    const queue = [posToStr([0, 0])];\n    const visited = {};\n    const directions = {\n      L: [-1, 0],\n      R: [1, 0],\n      T: [0, 1],\n      B: [0, -1]\n    };\n    while (queue.length > 0) {\n      const curr = queue.shift();\n      if (curr) {\n        visited[curr] = 1;\n        const currId = invSpatialMap[curr];\n        if (currId) {\n          const currPos = strToPos(curr);\n          Object.entries(directions).forEach(([dir, shift]) => {\n            const newPos = posToStr([currPos[0] + shift[0], currPos[1] + shift[1]]);\n            const newId = invSpatialMap[newPos];\n            if (newId && !visited[newPos]) {\n              queue.push(newPos);\n              relativeConstraints.push({\n                [ArchitectureDirectionName[dir]]: newId,\n                [ArchitectureDirectionName[getOppositeArchitectureDirection(dir)]]: currId,\n                gap: 1.5 * db.getConfigField(\"iconSize\")\n              });\n            }\n          });\n        }\n      }\n    }\n  });\n  return relativeConstraints;\n}\n__name(getRelativeConstraints, \"getRelativeConstraints\");\nfunction layoutArchitecture(services, junctions, groups, edges, db, { spatialMaps, groupAlignments }) {\n  return new Promise((resolve) => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      style: [\n        {\n          selector: \"edge\",\n          style: {\n            \"curve-style\": \"straight\",\n            label: \"data(label)\",\n            \"source-endpoint\": \"data(sourceEndpoint)\",\n            \"target-endpoint\": \"data(targetEndpoint)\"\n          }\n        },\n        {\n          selector: \"edge.segments\",\n          style: {\n            \"curve-style\": \"segments\",\n            \"segment-weights\": \"0\",\n            \"segment-distances\": [0.5],\n            // @ts-ignore Incorrect library types\n            \"edge-distances\": \"endpoints\",\n            \"source-endpoint\": \"data(sourceEndpoint)\",\n            \"target-endpoint\": \"data(targetEndpoint)\"\n          }\n        },\n        {\n          selector: \"node\",\n          style: {\n            // @ts-ignore Incorrect library types\n            \"compound-sizing-wrt-labels\": \"include\"\n          }\n        },\n        {\n          selector: \"node[label]\",\n          style: {\n            \"text-valign\": \"bottom\",\n            \"text-halign\": \"center\",\n            \"font-size\": `${db.getConfigField(\"fontSize\")}px`\n          }\n        },\n        {\n          selector: \".node-service\",\n          style: {\n            label: \"data(label)\",\n            width: \"data(width)\",\n            height: \"data(height)\"\n          }\n        },\n        {\n          selector: \".node-junction\",\n          style: {\n            width: \"data(width)\",\n            height: \"data(height)\"\n          }\n        },\n        {\n          selector: \".node-group\",\n          style: {\n            // @ts-ignore Incorrect library types\n            padding: `${db.getConfigField(\"padding\")}px`\n          }\n        }\n      ],\n      layout: {\n        name: \"grid\",\n        boundingBox: {\n          x1: 0,\n          x2: 100,\n          y1: 0,\n          y2: 100\n        }\n      }\n    });\n    renderEl.remove();\n    addGroups(groups, cy);\n    addServices(services, cy, db);\n    addJunctions(junctions, cy, db);\n    addEdges(edges, cy);\n    const alignmentConstraint = getAlignments(db, spatialMaps, groupAlignments);\n    const relativePlacementConstraint = getRelativeConstraints(spatialMaps, db);\n    const layout = cy.layout({\n      name: \"fcose\",\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false,\n      nodeDimensionsIncludeLabels: false,\n      // Adjust the edge parameters if it passes through the border of a group\n      // Hacky fix for: https://github.com/iVis-at-Bilkent/cytoscape.js-fcose/issues/67\n      idealEdgeLength(edge) {\n        const [nodeA, nodeB] = edge.connectedNodes();\n        const { parent: parentA } = nodeData(nodeA);\n        const { parent: parentB } = nodeData(nodeB);\n        const elasticity = parentA === parentB ? 1.5 * db.getConfigField(\"iconSize\") : 0.5 * db.getConfigField(\"iconSize\");\n        return elasticity;\n      },\n      edgeElasticity(edge) {\n        const [nodeA, nodeB] = edge.connectedNodes();\n        const { parent: parentA } = nodeData(nodeA);\n        const { parent: parentB } = nodeData(nodeB);\n        const elasticity = parentA === parentB ? 0.45 : 1e-3;\n        return elasticity;\n      },\n      alignmentConstraint,\n      relativePlacementConstraint\n    });\n    layout.one(\"layoutstop\", () => {\n      function getSegmentWeights(source, target, pointX, pointY) {\n        let W, D;\n        const { x: sX, y: sY } = source;\n        const { x: tX, y: tY } = target;\n        D = (pointY - sY + (sX - pointX) * (sY - tY) / (sX - tX)) / Math.sqrt(1 + Math.pow((sY - tY) / (sX - tX), 2));\n        W = Math.sqrt(Math.pow(pointY - sY, 2) + Math.pow(pointX - sX, 2) - Math.pow(D, 2));\n        const distAB = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2));\n        W = W / distAB;\n        let delta1 = (tX - sX) * (pointY - sY) - (tY - sY) * (pointX - sX);\n        switch (true) {\n          case delta1 >= 0:\n            delta1 = 1;\n            break;\n          case delta1 < 0:\n            delta1 = -1;\n            break;\n        }\n        let delta2 = (tX - sX) * (pointX - sX) + (tY - sY) * (pointY - sY);\n        switch (true) {\n          case delta2 >= 0:\n            delta2 = 1;\n            break;\n          case delta2 < 0:\n            delta2 = -1;\n            break;\n        }\n        D = Math.abs(D) * delta1;\n        W = W * delta2;\n        return {\n          distances: D,\n          weights: W\n        };\n      }\n      __name(getSegmentWeights, \"getSegmentWeights\");\n      cy.startBatch();\n      for (const edge of Object.values(cy.edges())) {\n        if (edge.data?.()) {\n          const { x: sX, y: sY } = edge.source().position();\n          const { x: tX, y: tY } = edge.target().position();\n          if (sX !== tX && sY !== tY) {\n            const sEP = edge.sourceEndpoint();\n            const tEP = edge.targetEndpoint();\n            const { sourceDir } = edgeData(edge);\n            const [pointX, pointY] = isArchitectureDirectionY(sourceDir) ? [sEP.x, tEP.y] : [tEP.x, sEP.y];\n            const { weights, distances } = getSegmentWeights(sEP, tEP, pointX, pointY);\n            edge.style(\"segment-distances\", distances);\n            edge.style(\"segment-weights\", weights);\n          }\n        }\n      }\n      cy.endBatch();\n      layout.run();\n    });\n    layout.run();\n    cy.ready((e) => {\n      log.info(\"Ready\", e);\n      resolve(cy);\n    });\n  });\n}\n__name(layoutArchitecture, \"layoutArchitecture\");\nvar draw = /* @__PURE__ */ __name(async (text, id, _version, diagObj) => {\n  const db = diagObj.db;\n  const services = db.getServices();\n  const junctions = db.getJunctions();\n  const groups = db.getGroups();\n  const edges = db.getEdges();\n  const ds = db.getDataStructures();\n  const svg = selectSvgElement(id);\n  const edgesElem = svg.append(\"g\");\n  edgesElem.attr(\"class\", \"architecture-edges\");\n  const servicesElem = svg.append(\"g\");\n  servicesElem.attr(\"class\", \"architecture-services\");\n  const groupElem = svg.append(\"g\");\n  groupElem.attr(\"class\", \"architecture-groups\");\n  await drawServices(db, servicesElem, services);\n  drawJunctions(db, servicesElem, junctions);\n  const cy = await layoutArchitecture(services, junctions, groups, edges, db, ds);\n  await drawEdges(edgesElem, cy, db);\n  await drawGroups(groupElem, cy, db);\n  positionNodes(db, cy);\n  setupGraphViewbox(void 0, svg, db.getConfigField(\"padding\"), db.getConfigField(\"useMaxWidth\"));\n}, \"draw\");\nvar renderer = { draw };\n\n// src/diagrams/architecture/architectureDiagram.ts\nvar diagram = {\n  parser,\n  get db() {\n    return new ArchitectureDB();\n  },\n  renderer,\n  styles: architectureStyles_default\n};\nexport {\n  diagram\n};\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"layoutBase\"] = factory();\n\telse\n\t\troot[\"layoutBase\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 28);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LayoutConstants() {}\n\n/**\r\n * Layout Quality: 0:draft, 1:default, 2:proof\r\n */\nLayoutConstants.QUALITY = 1;\n\n/**\r\n * Default parameters\r\n */\nLayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED = false;\nLayoutConstants.DEFAULT_INCREMENTAL = false;\nLayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT = true;\nLayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT = false;\nLayoutConstants.DEFAULT_ANIMATION_PERIOD = 50;\nLayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES = false;\n\n// -----------------------------------------------------------------------------\n// Section: General other constants\n// -----------------------------------------------------------------------------\n/*\r\n * Margins of a graph to be applied on bouding rectangle of its contents. We\r\n * assume margins on all four sides to be uniform.\r\n */\nLayoutConstants.DEFAULT_GRAPH_MARGIN = 15;\n\n/*\r\n * Whether to consider labels in node dimensions or not\r\n */\nLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = false;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_SIZE = 40;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_HALF_SIZE = LayoutConstants.SIMPLE_NODE_SIZE / 2;\n\n/*\r\n * Empty compound node size. When a compound node is empty, its both\r\n * dimensions should be of this value.\r\n */\nLayoutConstants.EMPTY_COMPOUND_NODE_SIZE = 40;\n\n/*\r\n * Minimum length that an edge should take during layout\r\n */\nLayoutConstants.MIN_EDGE_LENGTH = 1;\n\n/*\r\n * World boundaries that layout operates on\r\n */\nLayoutConstants.WORLD_BOUNDARY = 1000000;\n\n/*\r\n * World boundaries that random positioning can be performed with\r\n */\nLayoutConstants.INITIAL_WORLD_BOUNDARY = LayoutConstants.WORLD_BOUNDARY / 1000;\n\n/*\r\n * Coordinates of the world center\r\n */\nLayoutConstants.WORLD_CENTER_X = 1200;\nLayoutConstants.WORLD_CENTER_Y = 900;\n\nmodule.exports = LayoutConstants;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction LEdge(source, target, vEdge) {\n  LGraphObject.call(this, vEdge);\n\n  this.isOverlapingSourceAndTarget = false;\n  this.vGraphObject = vEdge;\n  this.bendpoints = [];\n  this.source = source;\n  this.target = target;\n}\n\nLEdge.prototype = Object.create(LGraphObject.prototype);\n\nfor (var prop in LGraphObject) {\n  LEdge[prop] = LGraphObject[prop];\n}\n\nLEdge.prototype.getSource = function () {\n  return this.source;\n};\n\nLEdge.prototype.getTarget = function () {\n  return this.target;\n};\n\nLEdge.prototype.isInterGraph = function () {\n  return this.isInterGraph;\n};\n\nLEdge.prototype.getLength = function () {\n  return this.length;\n};\n\nLEdge.prototype.isOverlapingSourceAndTarget = function () {\n  return this.isOverlapingSourceAndTarget;\n};\n\nLEdge.prototype.getBendpoints = function () {\n  return this.bendpoints;\n};\n\nLEdge.prototype.getLca = function () {\n  return this.lca;\n};\n\nLEdge.prototype.getSourceInLca = function () {\n  return this.sourceInLca;\n};\n\nLEdge.prototype.getTargetInLca = function () {\n  return this.targetInLca;\n};\n\nLEdge.prototype.getOtherEnd = function (node) {\n  if (this.source === node) {\n    return this.target;\n  } else if (this.target === node) {\n    return this.source;\n  } else {\n    throw \"Node is not incident with this edge\";\n  }\n};\n\nLEdge.prototype.getOtherEndInGraph = function (node, graph) {\n  var otherEnd = this.getOtherEnd(node);\n  var root = graph.getGraphManager().getRoot();\n\n  while (true) {\n    if (otherEnd.getOwner() == graph) {\n      return otherEnd;\n    }\n\n    if (otherEnd.getOwner() == root) {\n      break;\n    }\n\n    otherEnd = otherEnd.getOwner().getParent();\n  }\n\n  return null;\n};\n\nLEdge.prototype.updateLength = function () {\n  var clipPointCoordinates = new Array(4);\n\n  this.isOverlapingSourceAndTarget = IGeometry.getIntersection(this.target.getRect(), this.source.getRect(), clipPointCoordinates);\n\n  if (!this.isOverlapingSourceAndTarget) {\n    this.lengthX = clipPointCoordinates[0] - clipPointCoordinates[2];\n    this.lengthY = clipPointCoordinates[1] - clipPointCoordinates[3];\n\n    if (Math.abs(this.lengthX) < 1.0) {\n      this.lengthX = IMath.sign(this.lengthX);\n    }\n\n    if (Math.abs(this.lengthY) < 1.0) {\n      this.lengthY = IMath.sign(this.lengthY);\n    }\n\n    this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n  }\n};\n\nLEdge.prototype.updateLengthSimple = function () {\n  this.lengthX = this.target.getCenterX() - this.source.getCenterX();\n  this.lengthY = this.target.getCenterY() - this.source.getCenterY();\n\n  if (Math.abs(this.lengthX) < 1.0) {\n    this.lengthX = IMath.sign(this.lengthX);\n  }\n\n  if (Math.abs(this.lengthY) < 1.0) {\n    this.lengthY = IMath.sign(this.lengthY);\n  }\n\n  this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n};\n\nmodule.exports = LEdge;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LGraphObject(vGraphObject) {\n  this.vGraphObject = vGraphObject;\n}\n\nmodule.exports = LGraphObject;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar RectangleD = __webpack_require__(13);\nvar LayoutConstants = __webpack_require__(0);\nvar RandomSeed = __webpack_require__(16);\nvar PointD = __webpack_require__(5);\n\nfunction LNode(gm, loc, size, vNode) {\n  //Alternative constructor 1 : LNode(LGraphManager gm, Point loc, Dimension size, Object vNode)\n  if (size == null && vNode == null) {\n    vNode = loc;\n  }\n\n  LGraphObject.call(this, vNode);\n\n  //Alternative constructor 2 : LNode(Layout layout, Object vNode)\n  if (gm.graphManager != null) gm = gm.graphManager;\n\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.inclusionTreeDepth = Integer.MAX_VALUE;\n  this.vGraphObject = vNode;\n  this.edges = [];\n  this.graphManager = gm;\n\n  if (size != null && loc != null) this.rect = new RectangleD(loc.x, loc.y, size.width, size.height);else this.rect = new RectangleD();\n}\n\nLNode.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LNode[prop] = LGraphObject[prop];\n}\n\nLNode.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLNode.prototype.getChild = function () {\n  return this.child;\n};\n\nLNode.prototype.getOwner = function () {\n  //  if (this.owner != null) {\n  //    if (!(this.owner == null || this.owner.getNodes().indexOf(this) > -1)) {\n  //      throw \"assert failed\";\n  //    }\n  //  }\n\n  return this.owner;\n};\n\nLNode.prototype.getWidth = function () {\n  return this.rect.width;\n};\n\nLNode.prototype.setWidth = function (width) {\n  this.rect.width = width;\n};\n\nLNode.prototype.getHeight = function () {\n  return this.rect.height;\n};\n\nLNode.prototype.setHeight = function (height) {\n  this.rect.height = height;\n};\n\nLNode.prototype.getCenterX = function () {\n  return this.rect.x + this.rect.width / 2;\n};\n\nLNode.prototype.getCenterY = function () {\n  return this.rect.y + this.rect.height / 2;\n};\n\nLNode.prototype.getCenter = function () {\n  return new PointD(this.rect.x + this.rect.width / 2, this.rect.y + this.rect.height / 2);\n};\n\nLNode.prototype.getLocation = function () {\n  return new PointD(this.rect.x, this.rect.y);\n};\n\nLNode.prototype.getRect = function () {\n  return this.rect;\n};\n\nLNode.prototype.getDiagonal = function () {\n  return Math.sqrt(this.rect.width * this.rect.width + this.rect.height * this.rect.height);\n};\n\n/**\n * This method returns half the diagonal length of this node.\n */\nLNode.prototype.getHalfTheDiagonal = function () {\n  return Math.sqrt(this.rect.height * this.rect.height + this.rect.width * this.rect.width) / 2;\n};\n\nLNode.prototype.setRect = function (upperLeft, dimension) {\n  this.rect.x = upperLeft.x;\n  this.rect.y = upperLeft.y;\n  this.rect.width = dimension.width;\n  this.rect.height = dimension.height;\n};\n\nLNode.prototype.setCenter = function (cx, cy) {\n  this.rect.x = cx - this.rect.width / 2;\n  this.rect.y = cy - this.rect.height / 2;\n};\n\nLNode.prototype.setLocation = function (x, y) {\n  this.rect.x = x;\n  this.rect.y = y;\n};\n\nLNode.prototype.moveBy = function (dx, dy) {\n  this.rect.x += dx;\n  this.rect.y += dy;\n};\n\nLNode.prototype.getEdgeListToNode = function (to) {\n  var edgeList = [];\n  var edge;\n  var self = this;\n\n  self.edges.forEach(function (edge) {\n\n    if (edge.target == to) {\n      if (edge.source != self) throw \"Incorrect edge source!\";\n\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getEdgesBetween = function (other) {\n  var edgeList = [];\n  var edge;\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (!(edge.source == self || edge.target == self)) throw \"Incorrect edge source and/or target\";\n\n    if (edge.target == other || edge.source == other) {\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getNeighborsList = function () {\n  var neighbors = new Set();\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (edge.source == self) {\n      neighbors.add(edge.target);\n    } else {\n      if (edge.target != self) {\n        throw \"Incorrect incidency!\";\n      }\n\n      neighbors.add(edge.source);\n    }\n  });\n\n  return neighbors;\n};\n\nLNode.prototype.withChildren = function () {\n  var withNeighborsList = new Set();\n  var childNode;\n  var children;\n\n  withNeighborsList.add(this);\n\n  if (this.child != null) {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n      children = childNode.withChildren();\n      children.forEach(function (node) {\n        withNeighborsList.add(node);\n      });\n    }\n  }\n\n  return withNeighborsList;\n};\n\nLNode.prototype.getNoOfChildren = function () {\n  var noOfChildren = 0;\n  var childNode;\n\n  if (this.child == null) {\n    noOfChildren = 1;\n  } else {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n\n      noOfChildren += childNode.getNoOfChildren();\n    }\n  }\n\n  if (noOfChildren == 0) {\n    noOfChildren = 1;\n  }\n  return noOfChildren;\n};\n\nLNode.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLNode.prototype.calcEstimatedSize = function () {\n  if (this.child == null) {\n    return this.estimatedSize = (this.rect.width + this.rect.height) / 2;\n  } else {\n    this.estimatedSize = this.child.calcEstimatedSize();\n    this.rect.width = this.estimatedSize;\n    this.rect.height = this.estimatedSize;\n\n    return this.estimatedSize;\n  }\n};\n\nLNode.prototype.scatter = function () {\n  var randomCenterX;\n  var randomCenterY;\n\n  var minX = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxX = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterX = LayoutConstants.WORLD_CENTER_X + RandomSeed.nextDouble() * (maxX - minX) + minX;\n\n  var minY = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxY = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterY = LayoutConstants.WORLD_CENTER_Y + RandomSeed.nextDouble() * (maxY - minY) + minY;\n\n  this.rect.x = randomCenterX;\n  this.rect.y = randomCenterY;\n};\n\nLNode.prototype.updateBounds = function () {\n  if (this.getChild() == null) {\n    throw \"assert failed\";\n  }\n  if (this.getChild().getNodes().length != 0) {\n    // wrap the children nodes by re-arranging the boundaries\n    var childGraph = this.getChild();\n    childGraph.updateBounds(true);\n\n    this.rect.x = childGraph.getLeft();\n    this.rect.y = childGraph.getTop();\n\n    this.setWidth(childGraph.getRight() - childGraph.getLeft());\n    this.setHeight(childGraph.getBottom() - childGraph.getTop());\n\n    // Update compound bounds considering its label properties    \n    if (LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n\n      var width = childGraph.getRight() - childGraph.getLeft();\n      var height = childGraph.getBottom() - childGraph.getTop();\n\n      if (this.labelWidth) {\n        if (this.labelPosHorizontal == \"left\") {\n          this.rect.x -= this.labelWidth;\n          this.setWidth(width + this.labelWidth);\n        } else if (this.labelPosHorizontal == \"center\" && this.labelWidth > width) {\n          this.rect.x -= (this.labelWidth - width) / 2;\n          this.setWidth(this.labelWidth);\n        } else if (this.labelPosHorizontal == \"right\") {\n          this.setWidth(width + this.labelWidth);\n        }\n      }\n\n      if (this.labelHeight) {\n        if (this.labelPosVertical == \"top\") {\n          this.rect.y -= this.labelHeight;\n          this.setHeight(height + this.labelHeight);\n        } else if (this.labelPosVertical == \"center\" && this.labelHeight > height) {\n          this.rect.y -= (this.labelHeight - height) / 2;\n          this.setHeight(this.labelHeight);\n        } else if (this.labelPosVertical == \"bottom\") {\n          this.setHeight(height + this.labelHeight);\n        }\n      }\n    }\n  }\n};\n\nLNode.prototype.getInclusionTreeDepth = function () {\n  if (this.inclusionTreeDepth == Integer.MAX_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.inclusionTreeDepth;\n};\n\nLNode.prototype.transform = function (trans) {\n  var left = this.rect.x;\n\n  if (left > LayoutConstants.WORLD_BOUNDARY) {\n    left = LayoutConstants.WORLD_BOUNDARY;\n  } else if (left < -LayoutConstants.WORLD_BOUNDARY) {\n    left = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var top = this.rect.y;\n\n  if (top > LayoutConstants.WORLD_BOUNDARY) {\n    top = LayoutConstants.WORLD_BOUNDARY;\n  } else if (top < -LayoutConstants.WORLD_BOUNDARY) {\n    top = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var leftTop = new PointD(left, top);\n  var vLeftTop = trans.inverseTransformPoint(leftTop);\n\n  this.setLocation(vLeftTop.x, vLeftTop.y);\n};\n\nLNode.prototype.getLeft = function () {\n  return this.rect.x;\n};\n\nLNode.prototype.getRight = function () {\n  return this.rect.x + this.rect.width;\n};\n\nLNode.prototype.getTop = function () {\n  return this.rect.y;\n};\n\nLNode.prototype.getBottom = function () {\n  return this.rect.y + this.rect.height;\n};\n\nLNode.prototype.getParent = function () {\n  if (this.owner == null) {\n    return null;\n  }\n\n  return this.owner.getParent();\n};\n\nmodule.exports = LNode;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0);\n\nfunction FDLayoutConstants() {}\n\n//FDLayoutConstants inherits static props in LayoutConstants\nfor (var prop in LayoutConstants) {\n  FDLayoutConstants[prop] = LayoutConstants[prop];\n}\n\nFDLayoutConstants.MAX_ITERATIONS = 2500;\n\nFDLayoutConstants.DEFAULT_EDGE_LENGTH = 50;\nFDLayoutConstants.DEFAULT_SPRING_STRENGTH = 0.45;\nFDLayoutConstants.DEFAULT_REPULSION_STRENGTH = 4500.0;\nFDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = 0.4;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = 1.0;\nFDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = 3.8;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = 1.5;\nFDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION = true;\nFDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION = true;\nFDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = 0.3;\nFDLayoutConstants.COOLING_ADAPTATION_FACTOR = 0.33;\nFDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT = 1000;\nFDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT = 5000;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL = 100.0;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL * 3;\nFDLayoutConstants.MIN_REPULSION_DIST = FDLayoutConstants.DEFAULT_EDGE_LENGTH / 10.0;\nFDLayoutConstants.CONVERGENCE_CHECK_PERIOD = 100;\nFDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = 0.1;\nFDLayoutConstants.MIN_EDGE_LENGTH = 1;\nFDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD = 10;\n\nmodule.exports = FDLayoutConstants;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction PointD(x, y) {\n  if (x == null && y == null) {\n    this.x = 0;\n    this.y = 0;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nPointD.prototype.getX = function () {\n  return this.x;\n};\n\nPointD.prototype.getY = function () {\n  return this.y;\n};\n\nPointD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nPointD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nPointD.prototype.getDifference = function (pt) {\n  return new DimensionD(this.x - pt.x, this.y - pt.y);\n};\n\nPointD.prototype.getCopy = function () {\n  return new PointD(this.x, this.y);\n};\n\nPointD.prototype.translate = function (dim) {\n  this.x += dim.width;\n  this.y += dim.height;\n  return this;\n};\n\nmodule.exports = PointD;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(7);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar RectangleD = __webpack_require__(13);\nvar Point = __webpack_require__(12);\nvar LinkedList = __webpack_require__(11);\n\nfunction LGraph(parent, obj2, vGraph) {\n  LGraphObject.call(this, vGraph);\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.margin = LayoutConstants.DEFAULT_GRAPH_MARGIN;\n  this.edges = [];\n  this.nodes = [];\n  this.isConnected = false;\n  this.parent = parent;\n\n  if (obj2 != null && obj2 instanceof LGraphManager) {\n    this.graphManager = obj2;\n  } else if (obj2 != null && obj2 instanceof Layout) {\n    this.graphManager = obj2.graphManager;\n  }\n}\n\nLGraph.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LGraph[prop] = LGraphObject[prop];\n}\n\nLGraph.prototype.getNodes = function () {\n  return this.nodes;\n};\n\nLGraph.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLGraph.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLGraph.prototype.getParent = function () {\n  return this.parent;\n};\n\nLGraph.prototype.getLeft = function () {\n  return this.left;\n};\n\nLGraph.prototype.getRight = function () {\n  return this.right;\n};\n\nLGraph.prototype.getTop = function () {\n  return this.top;\n};\n\nLGraph.prototype.getBottom = function () {\n  return this.bottom;\n};\n\nLGraph.prototype.isConnected = function () {\n  return this.isConnected;\n};\n\nLGraph.prototype.add = function (obj1, sourceNode, targetNode) {\n  if (sourceNode == null && targetNode == null) {\n    var newNode = obj1;\n    if (this.graphManager == null) {\n      throw \"Graph has no graph mgr!\";\n    }\n    if (this.getNodes().indexOf(newNode) > -1) {\n      throw \"Node already in graph!\";\n    }\n    newNode.owner = this;\n    this.getNodes().push(newNode);\n\n    return newNode;\n  } else {\n    var newEdge = obj1;\n    if (!(this.getNodes().indexOf(sourceNode) > -1 && this.getNodes().indexOf(targetNode) > -1)) {\n      throw \"Source or target not in graph!\";\n    }\n\n    if (!(sourceNode.owner == targetNode.owner && sourceNode.owner == this)) {\n      throw \"Both owners must be this graph!\";\n    }\n\n    if (sourceNode.owner != targetNode.owner) {\n      return null;\n    }\n\n    // set source and target\n    newEdge.source = sourceNode;\n    newEdge.target = targetNode;\n\n    // set as intra-graph edge\n    newEdge.isInterGraph = false;\n\n    // add to graph edge list\n    this.getEdges().push(newEdge);\n\n    // add to incidency lists\n    sourceNode.edges.push(newEdge);\n\n    if (targetNode != sourceNode) {\n      targetNode.edges.push(newEdge);\n    }\n\n    return newEdge;\n  }\n};\n\nLGraph.prototype.remove = function (obj) {\n  var node = obj;\n  if (obj instanceof LNode) {\n    if (node == null) {\n      throw \"Node is null!\";\n    }\n    if (!(node.owner != null && node.owner == this)) {\n      throw \"Owner graph is invalid!\";\n    }\n    if (this.graphManager == null) {\n      throw \"Owner graph manager is invalid!\";\n    }\n    // remove incident edges first (make a copy to do it safely)\n    var edgesToBeRemoved = node.edges.slice();\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n\n      if (edge.isInterGraph) {\n        this.graphManager.remove(edge);\n      } else {\n        edge.source.owner.remove(edge);\n      }\n    }\n\n    // now the node itself\n    var index = this.nodes.indexOf(node);\n    if (index == -1) {\n      throw \"Node not in owner node list!\";\n    }\n\n    this.nodes.splice(index, 1);\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n    if (!(edge.source.owner != null && edge.target.owner != null && edge.source.owner == this && edge.target.owner == this)) {\n      throw \"Source and/or target owner is invalid!\";\n    }\n\n    var sourceIndex = edge.source.edges.indexOf(edge);\n    var targetIndex = edge.target.edges.indexOf(edge);\n    if (!(sourceIndex > -1 && targetIndex > -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    edge.source.edges.splice(sourceIndex, 1);\n\n    if (edge.target != edge.source) {\n      edge.target.edges.splice(targetIndex, 1);\n    }\n\n    var index = edge.source.owner.getEdges().indexOf(edge);\n    if (index == -1) {\n      throw \"Not in owner's edge list!\";\n    }\n\n    edge.source.owner.getEdges().splice(index, 1);\n  }\n};\n\nLGraph.prototype.updateLeftTop = function () {\n  var top = Integer.MAX_VALUE;\n  var left = Integer.MAX_VALUE;\n  var nodeTop;\n  var nodeLeft;\n  var margin;\n\n  var nodes = this.getNodes();\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeTop = lNode.getTop();\n    nodeLeft = lNode.getLeft();\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n  }\n\n  // Do we have any nodes in this graph?\n  if (top == Integer.MAX_VALUE) {\n    return null;\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = left - margin;\n  this.top = top - margin;\n\n  // Apply the margins and return the result\n  return new Point(this.left, this.top);\n};\n\nLGraph.prototype.updateBounds = function (recursive) {\n  // calculate bounds\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n  var margin;\n\n  var nodes = this.nodes;\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n\n    if (recursive && lNode.child != null) {\n      lNode.updateBounds();\n    }\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n  if (left == Integer.MAX_VALUE) {\n    this.left = this.parent.getLeft();\n    this.right = this.parent.getRight();\n    this.top = this.parent.getTop();\n    this.bottom = this.parent.getBottom();\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = boundingRect.x - margin;\n  this.right = boundingRect.x + boundingRect.width + margin;\n  this.top = boundingRect.y - margin;\n  this.bottom = boundingRect.y + boundingRect.height + margin;\n};\n\nLGraph.calculateBounds = function (nodes) {\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n\n  return boundingRect;\n};\n\nLGraph.prototype.getInclusionTreeDepth = function () {\n  if (this == this.graphManager.getRoot()) {\n    return 1;\n  } else {\n    return this.parent.getInclusionTreeDepth();\n  }\n};\n\nLGraph.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLGraph.prototype.calcEstimatedSize = function () {\n  var size = 0;\n  var nodes = this.nodes;\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    size += lNode.calcEstimatedSize();\n  }\n\n  if (size == 0) {\n    this.estimatedSize = LayoutConstants.EMPTY_COMPOUND_NODE_SIZE;\n  } else {\n    this.estimatedSize = size / Math.sqrt(this.nodes.length);\n  }\n\n  return this.estimatedSize;\n};\n\nLGraph.prototype.updateConnected = function () {\n  var self = this;\n  if (this.nodes.length == 0) {\n    this.isConnected = true;\n    return;\n  }\n\n  var queue = new LinkedList();\n  var visited = new Set();\n  var currentNode = this.nodes[0];\n  var neighborEdges;\n  var currentNeighbor;\n  var childrenOfNode = currentNode.withChildren();\n  childrenOfNode.forEach(function (node) {\n    queue.push(node);\n    visited.add(node);\n  });\n\n  while (queue.length !== 0) {\n    currentNode = queue.shift();\n\n    // Traverse all neighbors of this node\n    neighborEdges = currentNode.getEdges();\n    var size = neighborEdges.length;\n    for (var i = 0; i < size; i++) {\n      var neighborEdge = neighborEdges[i];\n      currentNeighbor = neighborEdge.getOtherEndInGraph(currentNode, this);\n\n      // Add unvisited neighbors to the list to visit\n      if (currentNeighbor != null && !visited.has(currentNeighbor)) {\n        var childrenOfNeighbor = currentNeighbor.withChildren();\n\n        childrenOfNeighbor.forEach(function (node) {\n          queue.push(node);\n          visited.add(node);\n        });\n      }\n    }\n  }\n\n  this.isConnected = false;\n\n  if (visited.size >= this.nodes.length) {\n    var noOfVisitedInThisGraph = 0;\n\n    visited.forEach(function (visitedNode) {\n      if (visitedNode.owner == self) {\n        noOfVisitedInThisGraph++;\n      }\n    });\n\n    if (noOfVisitedInThisGraph == this.nodes.length) {\n      this.isConnected = true;\n    }\n  }\n};\n\nmodule.exports = LGraph;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph;\nvar LEdge = __webpack_require__(1);\n\nfunction LGraphManager(layout) {\n  LGraph = __webpack_require__(6); // It may be better to initilize this out of this function but it gives an error (Right-hand side of 'instanceof' is not callable) now.\n  this.layout = layout;\n\n  this.graphs = [];\n  this.edges = [];\n}\n\nLGraphManager.prototype.addRoot = function () {\n  var ngraph = this.layout.newGraph();\n  var nnode = this.layout.newNode(null);\n  var root = this.add(ngraph, nnode);\n  this.setRootGraph(root);\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.add = function (newGraph, parentNode, newEdge, sourceNode, targetNode) {\n  //there are just 2 parameters are passed then it adds an LGraph else it adds an LEdge\n  if (newEdge == null && sourceNode == null && targetNode == null) {\n    if (newGraph == null) {\n      throw \"Graph is null!\";\n    }\n    if (parentNode == null) {\n      throw \"Parent node is null!\";\n    }\n    if (this.graphs.indexOf(newGraph) > -1) {\n      throw \"Graph already in this graph mgr!\";\n    }\n\n    this.graphs.push(newGraph);\n\n    if (newGraph.parent != null) {\n      throw \"Already has a parent!\";\n    }\n    if (parentNode.child != null) {\n      throw \"Already has a child!\";\n    }\n\n    newGraph.parent = parentNode;\n    parentNode.child = newGraph;\n\n    return newGraph;\n  } else {\n    //change the order of the parameters\n    targetNode = newEdge;\n    sourceNode = parentNode;\n    newEdge = newGraph;\n    var sourceGraph = sourceNode.getOwner();\n    var targetGraph = targetNode.getOwner();\n\n    if (!(sourceGraph != null && sourceGraph.getGraphManager() == this)) {\n      throw \"Source not in this graph mgr!\";\n    }\n    if (!(targetGraph != null && targetGraph.getGraphManager() == this)) {\n      throw \"Target not in this graph mgr!\";\n    }\n\n    if (sourceGraph == targetGraph) {\n      newEdge.isInterGraph = false;\n      return sourceGraph.add(newEdge, sourceNode, targetNode);\n    } else {\n      newEdge.isInterGraph = true;\n\n      // set source and target\n      newEdge.source = sourceNode;\n      newEdge.target = targetNode;\n\n      // add edge to inter-graph edge list\n      if (this.edges.indexOf(newEdge) > -1) {\n        throw \"Edge already in inter-graph edge list!\";\n      }\n\n      this.edges.push(newEdge);\n\n      // add edge to source and target incidency lists\n      if (!(newEdge.source != null && newEdge.target != null)) {\n        throw \"Edge source and/or target is null!\";\n      }\n\n      if (!(newEdge.source.edges.indexOf(newEdge) == -1 && newEdge.target.edges.indexOf(newEdge) == -1)) {\n        throw \"Edge already in source and/or target incidency list!\";\n      }\n\n      newEdge.source.edges.push(newEdge);\n      newEdge.target.edges.push(newEdge);\n\n      return newEdge;\n    }\n  }\n};\n\nLGraphManager.prototype.remove = function (lObj) {\n  if (lObj instanceof LGraph) {\n    var graph = lObj;\n    if (graph.getGraphManager() != this) {\n      throw \"Graph not in this graph mgr\";\n    }\n    if (!(graph == this.rootGraph || graph.parent != null && graph.parent.graphManager == this)) {\n      throw \"Invalid parent node!\";\n    }\n\n    // first the edges (make a copy to do it safely)\n    var edgesToBeRemoved = [];\n\n    edgesToBeRemoved = edgesToBeRemoved.concat(graph.getEdges());\n\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n      graph.remove(edge);\n    }\n\n    // then the nodes (make a copy to do it safely)\n    var nodesToBeRemoved = [];\n\n    nodesToBeRemoved = nodesToBeRemoved.concat(graph.getNodes());\n\n    var node;\n    s = nodesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      node = nodesToBeRemoved[i];\n      graph.remove(node);\n    }\n\n    // check if graph is the root\n    if (graph == this.rootGraph) {\n      this.setRootGraph(null);\n    }\n\n    // now remove the graph itself\n    var index = this.graphs.indexOf(graph);\n    this.graphs.splice(index, 1);\n\n    // also reset the parent of the graph\n    graph.parent = null;\n  } else if (lObj instanceof LEdge) {\n    edge = lObj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!edge.isInterGraph) {\n      throw \"Not an inter-graph edge!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n\n    // remove edge from source and target nodes' incidency lists\n\n    if (!(edge.source.edges.indexOf(edge) != -1 && edge.target.edges.indexOf(edge) != -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    var index = edge.source.edges.indexOf(edge);\n    edge.source.edges.splice(index, 1);\n    index = edge.target.edges.indexOf(edge);\n    edge.target.edges.splice(index, 1);\n\n    // remove edge from owner graph manager's inter-graph edge list\n\n    if (!(edge.source.owner != null && edge.source.owner.getGraphManager() != null)) {\n      throw \"Edge owner graph or owner graph manager is null!\";\n    }\n    if (edge.source.owner.getGraphManager().edges.indexOf(edge) == -1) {\n      throw \"Not in owner graph manager's edge list!\";\n    }\n\n    var index = edge.source.owner.getGraphManager().edges.indexOf(edge);\n    edge.source.owner.getGraphManager().edges.splice(index, 1);\n  }\n};\n\nLGraphManager.prototype.updateBounds = function () {\n  this.rootGraph.updateBounds(true);\n};\n\nLGraphManager.prototype.getGraphs = function () {\n  return this.graphs;\n};\n\nLGraphManager.prototype.getAllNodes = function () {\n  if (this.allNodes == null) {\n    var nodeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < s; i++) {\n      nodeList = nodeList.concat(graphs[i].getNodes());\n    }\n    this.allNodes = nodeList;\n  }\n  return this.allNodes;\n};\n\nLGraphManager.prototype.resetAllNodes = function () {\n  this.allNodes = null;\n};\n\nLGraphManager.prototype.resetAllEdges = function () {\n  this.allEdges = null;\n};\n\nLGraphManager.prototype.resetAllNodesToApplyGravitation = function () {\n  this.allNodesToApplyGravitation = null;\n};\n\nLGraphManager.prototype.getAllEdges = function () {\n  if (this.allEdges == null) {\n    var edgeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < graphs.length; i++) {\n      edgeList = edgeList.concat(graphs[i].getEdges());\n    }\n\n    edgeList = edgeList.concat(this.edges);\n\n    this.allEdges = edgeList;\n  }\n  return this.allEdges;\n};\n\nLGraphManager.prototype.getAllNodesToApplyGravitation = function () {\n  return this.allNodesToApplyGravitation;\n};\n\nLGraphManager.prototype.setAllNodesToApplyGravitation = function (nodeList) {\n  if (this.allNodesToApplyGravitation != null) {\n    throw \"assert failed\";\n  }\n\n  this.allNodesToApplyGravitation = nodeList;\n};\n\nLGraphManager.prototype.getRoot = function () {\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.setRootGraph = function (graph) {\n  if (graph.getGraphManager() != this) {\n    throw \"Root not in this graph mgr!\";\n  }\n\n  this.rootGraph = graph;\n  // root graph must have a root node associated with it for convenience\n  if (graph.parent == null) {\n    graph.parent = this.layout.newNode(\"Root node\");\n  }\n};\n\nLGraphManager.prototype.getLayout = function () {\n  return this.layout;\n};\n\nLGraphManager.prototype.isOneAncestorOfOther = function (firstNode, secondNode) {\n  if (!(firstNode != null && secondNode != null)) {\n    throw \"assert failed\";\n  }\n\n  if (firstNode == secondNode) {\n    return true;\n  }\n  // Is second node an ancestor of the first one?\n  var ownerGraph = firstNode.getOwner();\n  var parentNode;\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == secondNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n  // Is first node an ancestor of the second one?\n  ownerGraph = secondNode.getOwner();\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == firstNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n\n  return false;\n};\n\nLGraphManager.prototype.calcLowestCommonAncestors = function () {\n  var edge;\n  var sourceNode;\n  var targetNode;\n  var sourceAncestorGraph;\n  var targetAncestorGraph;\n\n  var edges = this.getAllEdges();\n  var s = edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = edges[i];\n\n    sourceNode = edge.source;\n    targetNode = edge.target;\n    edge.lca = null;\n    edge.sourceInLca = sourceNode;\n    edge.targetInLca = targetNode;\n\n    if (sourceNode == targetNode) {\n      edge.lca = sourceNode.getOwner();\n      continue;\n    }\n\n    sourceAncestorGraph = sourceNode.getOwner();\n\n    while (edge.lca == null) {\n      edge.targetInLca = targetNode;\n      targetAncestorGraph = targetNode.getOwner();\n\n      while (edge.lca == null) {\n        if (targetAncestorGraph == sourceAncestorGraph) {\n          edge.lca = targetAncestorGraph;\n          break;\n        }\n\n        if (targetAncestorGraph == this.rootGraph) {\n          break;\n        }\n\n        if (edge.lca != null) {\n          throw \"assert failed\";\n        }\n        edge.targetInLca = targetAncestorGraph.getParent();\n        targetAncestorGraph = edge.targetInLca.getOwner();\n      }\n\n      if (sourceAncestorGraph == this.rootGraph) {\n        break;\n      }\n\n      if (edge.lca == null) {\n        edge.sourceInLca = sourceAncestorGraph.getParent();\n        sourceAncestorGraph = edge.sourceInLca.getOwner();\n      }\n    }\n\n    if (edge.lca == null) {\n      throw \"assert failed\";\n    }\n  }\n};\n\nLGraphManager.prototype.calcLowestCommonAncestor = function (firstNode, secondNode) {\n  if (firstNode == secondNode) {\n    return firstNode.getOwner();\n  }\n  var firstOwnerGraph = firstNode.getOwner();\n\n  do {\n    if (firstOwnerGraph == null) {\n      break;\n    }\n    var secondOwnerGraph = secondNode.getOwner();\n\n    do {\n      if (secondOwnerGraph == null) {\n        break;\n      }\n\n      if (secondOwnerGraph == firstOwnerGraph) {\n        return secondOwnerGraph;\n      }\n      secondOwnerGraph = secondOwnerGraph.getParent().getOwner();\n    } while (true);\n\n    firstOwnerGraph = firstOwnerGraph.getParent().getOwner();\n  } while (true);\n\n  return firstOwnerGraph;\n};\n\nLGraphManager.prototype.calcInclusionTreeDepths = function (graph, depth) {\n  if (graph == null && depth == null) {\n    graph = this.rootGraph;\n    depth = 1;\n  }\n  var node;\n\n  var nodes = graph.getNodes();\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    node = nodes[i];\n    node.inclusionTreeDepth = depth;\n\n    if (node.child != null) {\n      this.calcInclusionTreeDepths(node.child, depth + 1);\n    }\n  }\n};\n\nLGraphManager.prototype.includesInvalidEdge = function () {\n  var edge;\n  var edgesToRemove = [];\n\n  var s = this.edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = this.edges[i];\n\n    if (this.isOneAncestorOfOther(edge.source, edge.target)) {\n      edgesToRemove.push(edge);\n    }\n  }\n\n  // Remove invalid edges from graph manager\n  for (var i = 0; i < edgesToRemove.length; i++) {\n    this.remove(edgesToRemove[i]);\n  }\n\n  // Invalid edges are cleared, so return false\n  return false;\n};\n\nmodule.exports = LGraphManager;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * This class maintains a list of static geometry related utility methods.\n *\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar Point = __webpack_require__(12);\n\nfunction IGeometry() {}\n\n/**\n * This method calculates *half* the amount in x and y directions of the two\n * input rectangles needed to separate them keeping their respective\n * positioning, and returns the result in the input array. An input\n * separation buffer added to the amount in both directions. We assume that\n * the two rectangles do intersect.\n */\nIGeometry.calcSeparationAmount = function (rectA, rectB, overlapAmount, separationBuffer) {\n  if (!rectA.intersects(rectB)) {\n    throw \"assert failed\";\n  }\n\n  var directions = new Array(2);\n\n  this.decideDirectionsForOverlappingNodes(rectA, rectB, directions);\n\n  overlapAmount[0] = Math.min(rectA.getRight(), rectB.getRight()) - Math.max(rectA.x, rectB.x);\n  overlapAmount[1] = Math.min(rectA.getBottom(), rectB.getBottom()) - Math.max(rectA.y, rectB.y);\n\n  // update the overlapping amounts for the following cases:\n  if (rectA.getX() <= rectB.getX() && rectA.getRight() >= rectB.getRight()) {\n    /* Case x.1:\n    *\n    * rectA\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectB\n    */\n    overlapAmount[0] += Math.min(rectB.getX() - rectA.getX(), rectA.getRight() - rectB.getRight());\n  } else if (rectB.getX() <= rectA.getX() && rectB.getRight() >= rectA.getRight()) {\n    /* Case x.2:\n    *\n    * rectB\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectA\n    */\n    overlapAmount[0] += Math.min(rectA.getX() - rectB.getX(), rectB.getRight() - rectA.getRight());\n  }\n  if (rectA.getY() <= rectB.getY() && rectA.getBottom() >= rectB.getBottom()) {\n    /* Case y.1:\n     *          ________ rectA\n     *         |\n     *         |\n     *   ______|____  rectB\n     *         |    |\n     *         |    |\n     *   ______|____|\n     *         |\n     *         |\n     *         |________\n     *\n     */\n    overlapAmount[1] += Math.min(rectB.getY() - rectA.getY(), rectA.getBottom() - rectB.getBottom());\n  } else if (rectB.getY() <= rectA.getY() && rectB.getBottom() >= rectA.getBottom()) {\n    /* Case y.2:\n    *          ________ rectB\n    *         |\n    *         |\n    *   ______|____  rectA\n    *         |    |\n    *         |    |\n    *   ______|____|\n    *         |\n    *         |\n    *         |________\n    *\n    */\n    overlapAmount[1] += Math.min(rectA.getY() - rectB.getY(), rectB.getBottom() - rectA.getBottom());\n  }\n\n  // find slope of the line passes two centers\n  var slope = Math.abs((rectB.getCenterY() - rectA.getCenterY()) / (rectB.getCenterX() - rectA.getCenterX()));\n  // if centers are overlapped\n  if (rectB.getCenterY() === rectA.getCenterY() && rectB.getCenterX() === rectA.getCenterX()) {\n    // assume the slope is 1 (45 degree)\n    slope = 1.0;\n  }\n\n  var moveByY = slope * overlapAmount[0];\n  var moveByX = overlapAmount[1] / slope;\n  if (overlapAmount[0] < moveByX) {\n    moveByX = overlapAmount[0];\n  } else {\n    moveByY = overlapAmount[1];\n  }\n  // return half the amount so that if each rectangle is moved by these\n  // amounts in opposite directions, overlap will be resolved\n  overlapAmount[0] = -1 * directions[0] * (moveByX / 2 + separationBuffer);\n  overlapAmount[1] = -1 * directions[1] * (moveByY / 2 + separationBuffer);\n};\n\n/**\n * This method decides the separation direction of overlapping nodes\n *\n * if directions[0] = -1, then rectA goes left\n * if directions[0] = 1,  then rectA goes right\n * if directions[1] = -1, then rectA goes up\n * if directions[1] = 1,  then rectA goes down\n */\nIGeometry.decideDirectionsForOverlappingNodes = function (rectA, rectB, directions) {\n  if (rectA.getCenterX() < rectB.getCenterX()) {\n    directions[0] = -1;\n  } else {\n    directions[0] = 1;\n  }\n\n  if (rectA.getCenterY() < rectB.getCenterY()) {\n    directions[1] = -1;\n  } else {\n    directions[1] = 1;\n  }\n};\n\n/**\n * This method calculates the intersection (clipping) points of the two\n * input rectangles with line segment defined by the centers of these two\n * rectangles. The clipping points are saved in the input double array and\n * whether or not the two rectangles overlap is returned.\n */\nIGeometry.getIntersection2 = function (rectA, rectB, result) {\n  //result[0-1] will contain clipPoint of rectA, result[2-3] will contain clipPoint of rectB\n  var p1x = rectA.getCenterX();\n  var p1y = rectA.getCenterY();\n  var p2x = rectB.getCenterX();\n  var p2y = rectB.getCenterY();\n\n  //if two rectangles intersect, then clipping points are centers\n  if (rectA.intersects(rectB)) {\n    result[0] = p1x;\n    result[1] = p1y;\n    result[2] = p2x;\n    result[3] = p2y;\n    return true;\n  }\n  //variables for rectA\n  var topLeftAx = rectA.getX();\n  var topLeftAy = rectA.getY();\n  var topRightAx = rectA.getRight();\n  var bottomLeftAx = rectA.getX();\n  var bottomLeftAy = rectA.getBottom();\n  var bottomRightAx = rectA.getRight();\n  var halfWidthA = rectA.getWidthHalf();\n  var halfHeightA = rectA.getHeightHalf();\n  //variables for rectB\n  var topLeftBx = rectB.getX();\n  var topLeftBy = rectB.getY();\n  var topRightBx = rectB.getRight();\n  var bottomLeftBx = rectB.getX();\n  var bottomLeftBy = rectB.getBottom();\n  var bottomRightBx = rectB.getRight();\n  var halfWidthB = rectB.getWidthHalf();\n  var halfHeightB = rectB.getHeightHalf();\n\n  //flag whether clipping points are found\n  var clipPointAFound = false;\n  var clipPointBFound = false;\n\n  // line is vertical\n  if (p1x === p2x) {\n    if (p1y > p2y) {\n      result[0] = p1x;\n      result[1] = topLeftAy;\n      result[2] = p2x;\n      result[3] = bottomLeftBy;\n      return false;\n    } else if (p1y < p2y) {\n      result[0] = p1x;\n      result[1] = bottomLeftAy;\n      result[2] = p2x;\n      result[3] = topLeftBy;\n      return false;\n    } else {\n      //not line, return null;\n    }\n  }\n  // line is horizontal\n  else if (p1y === p2y) {\n      if (p1x > p2x) {\n        result[0] = topLeftAx;\n        result[1] = p1y;\n        result[2] = topRightBx;\n        result[3] = p2y;\n        return false;\n      } else if (p1x < p2x) {\n        result[0] = topRightAx;\n        result[1] = p1y;\n        result[2] = topLeftBx;\n        result[3] = p2y;\n        return false;\n      } else {\n        //not valid line, return null;\n      }\n    } else {\n      //slopes of rectA's and rectB's diagonals\n      var slopeA = rectA.height / rectA.width;\n      var slopeB = rectB.height / rectB.width;\n\n      //slope of line between center of rectA and center of rectB\n      var slopePrime = (p2y - p1y) / (p2x - p1x);\n      var cardinalDirectionA = void 0;\n      var cardinalDirectionB = void 0;\n      var tempPointAx = void 0;\n      var tempPointAy = void 0;\n      var tempPointBx = void 0;\n      var tempPointBy = void 0;\n\n      //determine whether clipping point is the corner of nodeA\n      if (-slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = bottomLeftAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = topRightAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        }\n      } else if (slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = topLeftAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = bottomRightAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        }\n      }\n\n      //determine whether clipping point is the corner of nodeB\n      if (-slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = bottomLeftBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = topRightBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        }\n      } else if (slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = topLeftBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = bottomRightBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        }\n      }\n\n      //if both clipping points are corners\n      if (clipPointAFound && clipPointBFound) {\n        return false;\n      }\n\n      //determine Cardinal Direction of rectangles\n      if (p1x > p2x) {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 4);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 2);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 3);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 1);\n        }\n      } else {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 1);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 3);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 2);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 4);\n        }\n      }\n      //calculate clipping Point if it is not found before\n      if (!clipPointAFound) {\n        switch (cardinalDirectionA) {\n          case 1:\n            tempPointAy = topLeftAy;\n            tempPointAx = p1x + -halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 2:\n            tempPointAx = bottomRightAx;\n            tempPointAy = p1y + halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 3:\n            tempPointAy = bottomLeftAy;\n            tempPointAx = p1x + halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 4:\n            tempPointAx = bottomLeftAx;\n            tempPointAy = p1y + -halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n        }\n      }\n      if (!clipPointBFound) {\n        switch (cardinalDirectionB) {\n          case 1:\n            tempPointBy = topLeftBy;\n            tempPointBx = p2x + -halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 2:\n            tempPointBx = bottomRightBx;\n            tempPointBy = p2y + halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 3:\n            tempPointBy = bottomLeftBy;\n            tempPointBx = p2x + halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 4:\n            tempPointBx = bottomLeftBx;\n            tempPointBy = p2y + -halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n        }\n      }\n    }\n  return false;\n};\n\n/**\n * This method returns in which cardinal direction does input point stays\n * 1: North\n * 2: East\n * 3: South\n * 4: West\n */\nIGeometry.getCardinalDirection = function (slope, slopePrime, line) {\n  if (slope > slopePrime) {\n    return line;\n  } else {\n    return 1 + line % 4;\n  }\n};\n\n/**\n * This method calculates the intersection of the two lines defined by\n * point pairs (s1,s2) and (f1,f2).\n */\nIGeometry.getIntersection = function (s1, s2, f1, f2) {\n  if (f2 == null) {\n    return this.getIntersection2(s1, s2, f1);\n  }\n\n  var x1 = s1.x;\n  var y1 = s1.y;\n  var x2 = s2.x;\n  var y2 = s2.y;\n  var x3 = f1.x;\n  var y3 = f1.y;\n  var x4 = f2.x;\n  var y4 = f2.y;\n  var x = void 0,\n      y = void 0; // intersection point\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0; // coefficients of line eqns.\n  var denom = void 0;\n\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2; // { a1*x + b1*y + c1 = 0 is line 1 }\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4; // { a2*x + b2*y + c2 = 0 is line 2 }\n\n  denom = a1 * b2 - a2 * b1;\n\n  if (denom === 0) {\n    return null;\n  }\n\n  x = (b1 * c2 - b2 * c1) / denom;\n  y = (a2 * c1 - a1 * c2) / denom;\n\n  return new Point(x, y);\n};\n\n/**\n * This method finds and returns the angle of the vector from the + x-axis\n * in clockwise direction (compatible w/ Java coordinate system!).\n */\nIGeometry.angleOfVector = function (Cx, Cy, Nx, Ny) {\n  var C_angle = void 0;\n\n  if (Cx !== Nx) {\n    C_angle = Math.atan((Ny - Cy) / (Nx - Cx));\n\n    if (Nx < Cx) {\n      C_angle += Math.PI;\n    } else if (Ny < Cy) {\n      C_angle += this.TWO_PI;\n    }\n  } else if (Ny < Cy) {\n    C_angle = this.ONE_AND_HALF_PI; // 270 degrees\n  } else {\n    C_angle = this.HALF_PI; // 90 degrees\n  }\n\n  return C_angle;\n};\n\n/**\n * This method checks whether the given two line segments (one with point\n * p1 and p2, the other with point p3 and p4) intersect at a point other\n * than these points.\n */\nIGeometry.doIntersect = function (p1, p2, p3, p4) {\n  var a = p1.x;\n  var b = p1.y;\n  var c = p2.x;\n  var d = p2.y;\n  var p = p3.x;\n  var q = p3.y;\n  var r = p4.x;\n  var s = p4.y;\n  var det = (c - a) * (s - q) - (r - p) * (d - b);\n\n  if (det === 0) {\n    return false;\n  } else {\n    var lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n    var gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n    return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n  }\n};\n\n/**\n * This method checks and calculates the intersection of \n * a line segment and a circle.\n */\nIGeometry.findCircleLineIntersections = function (Ex, Ey, Lx, Ly, Cx, Cy, r) {\n\n  // E is the starting point of the ray,\n  // L is the end point of the ray,\n  // C is the center of sphere you're testing against\n  // r is the radius of that sphere\n\n  // Compute:\n  // d = L - E ( Direction vector of ray, from start to end )\n  // f = E - C ( Vector from center sphere to ray start )\n\n  // Then the intersection is found by..\n  // P = E + t * d\n  // This is a parametric equation:\n  // Px = Ex + tdx\n  // Py = Ey + tdy\n\n  // get a, b, c values\n  var a = (Lx - Ex) * (Lx - Ex) + (Ly - Ey) * (Ly - Ey);\n  var b = 2 * ((Ex - Cx) * (Lx - Ex) + (Ey - Cy) * (Ly - Ey));\n  var c = (Ex - Cx) * (Ex - Cx) + (Ey - Cy) * (Ey - Cy) - r * r;\n\n  // get discriminant\n  var disc = b * b - 4 * a * c;\n  if (disc >= 0) {\n    // insert into quadratic formula\n    var t1 = (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a);\n    var t2 = (-b - Math.sqrt(b * b - 4 * a * c)) / (2 * a);\n    var intersections = null;\n    if (t1 >= 0 && t1 <= 1) {\n      // t1 is the intersection, and it's closer than t2\n      // (since t1 uses -b - discriminant)\n      // Impale, Poke\n      return [t1];\n    }\n\n    // here t1 didn't intersect so we are either started\n    // inside the sphere or completely past it\n    if (t2 >= 0 && t2 <= 1) {\n      // ExitWound\n      return [t2];\n    }\n\n    return intersections;\n  } else return null;\n};\n\n// -----------------------------------------------------------------------------\n// Section: Class Constants\n// -----------------------------------------------------------------------------\n/**\n * Some useful pre-calculated constants\n */\nIGeometry.HALF_PI = 0.5 * Math.PI;\nIGeometry.ONE_AND_HALF_PI = 1.5 * Math.PI;\nIGeometry.TWO_PI = 2.0 * Math.PI;\nIGeometry.THREE_PI = 3.0 * Math.PI;\n\nmodule.exports = IGeometry;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction IMath() {}\n\n/**\n * This method returns the sign of the input value.\n */\nIMath.sign = function (value) {\n  if (value > 0) {\n    return 1;\n  } else if (value < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n\nIMath.floor = function (value) {\n  return value < 0 ? Math.ceil(value) : Math.floor(value);\n};\n\nIMath.ceil = function (value) {\n  return value < 0 ? Math.floor(value) : Math.ceil(value);\n};\n\nmodule.exports = IMath;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Integer() {}\n\nInteger.MAX_VALUE = 2147483647;\nInteger.MIN_VALUE = -2147483648;\n\nmodule.exports = Integer;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar nodeFrom = function nodeFrom(value) {\n  return { value: value, next: null, prev: null };\n};\n\nvar add = function add(prev, node, next, list) {\n  if (prev !== null) {\n    prev.next = node;\n  } else {\n    list.head = node;\n  }\n\n  if (next !== null) {\n    next.prev = node;\n  } else {\n    list.tail = node;\n  }\n\n  node.prev = prev;\n  node.next = next;\n\n  list.length++;\n\n  return node;\n};\n\nvar _remove = function _remove(node, list) {\n  var prev = node.prev,\n      next = node.next;\n\n\n  if (prev !== null) {\n    prev.next = next;\n  } else {\n    list.head = next;\n  }\n\n  if (next !== null) {\n    next.prev = prev;\n  } else {\n    list.tail = prev;\n  }\n\n  node.prev = node.next = null;\n\n  list.length--;\n\n  return node;\n};\n\nvar LinkedList = function () {\n  function LinkedList(vals) {\n    var _this = this;\n\n    _classCallCheck(this, LinkedList);\n\n    this.length = 0;\n    this.head = null;\n    this.tail = null;\n\n    if (vals != null) {\n      vals.forEach(function (v) {\n        return _this.push(v);\n      });\n    }\n  }\n\n  _createClass(LinkedList, [{\n    key: \"size\",\n    value: function size() {\n      return this.length;\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(val, otherNode) {\n      return add(otherNode.prev, nodeFrom(val), otherNode, this);\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(val, otherNode) {\n      return add(otherNode, nodeFrom(val), otherNode.next, this);\n    }\n  }, {\n    key: \"insertNodeBefore\",\n    value: function insertNodeBefore(newNode, otherNode) {\n      return add(otherNode.prev, newNode, otherNode, this);\n    }\n  }, {\n    key: \"insertNodeAfter\",\n    value: function insertNodeAfter(newNode, otherNode) {\n      return add(otherNode, newNode, otherNode.next, this);\n    }\n  }, {\n    key: \"push\",\n    value: function push(val) {\n      return add(this.tail, nodeFrom(val), null, this);\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(val) {\n      return add(null, nodeFrom(val), this.head, this);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      return _remove(node, this);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return _remove(this.tail, this).value;\n    }\n  }, {\n    key: \"popNode\",\n    value: function popNode() {\n      return _remove(this.tail, this);\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      return _remove(this.head, this).value;\n    }\n  }, {\n    key: \"shiftNode\",\n    value: function shiftNode() {\n      return _remove(this.head, this);\n    }\n  }, {\n    key: \"get_object_at\",\n    value: function get_object_at(index) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        return current.value;\n      }\n    }\n  }, {\n    key: \"set_object_at\",\n    value: function set_object_at(index, value) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        current.value = value;\n      }\n    }\n  }]);\n\n  return LinkedList;\n}();\n\nmodule.exports = LinkedList;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\r\n *This class is the javascript implementation of the Point.java class in jdk\r\n */\nfunction Point(x, y, p) {\n  this.x = null;\n  this.y = null;\n  if (x == null && y == null && p == null) {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    this.x = x;\n    this.y = y;\n  } else if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.x = p.x;\n    this.y = p.y;\n  }\n}\n\nPoint.prototype.getX = function () {\n  return this.x;\n};\n\nPoint.prototype.getY = function () {\n  return this.y;\n};\n\nPoint.prototype.getLocation = function () {\n  return new Point(this.x, this.y);\n};\n\nPoint.prototype.setLocation = function (x, y, p) {\n  if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.setLocation(p.x, p.y);\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    //if both parameters are integer just move (x,y) location\n    if (parseInt(x) == x && parseInt(y) == y) {\n      this.move(x, y);\n    } else {\n      this.x = Math.floor(x + 0.5);\n      this.y = Math.floor(y + 0.5);\n    }\n  }\n};\n\nPoint.prototype.move = function (x, y) {\n  this.x = x;\n  this.y = y;\n};\n\nPoint.prototype.translate = function (dx, dy) {\n  this.x += dx;\n  this.y += dy;\n};\n\nPoint.prototype.equals = function (obj) {\n  if (obj.constructor.name == \"Point\") {\n    var pt = obj;\n    return this.x == pt.x && this.y == pt.y;\n  }\n  return this == obj;\n};\n\nPoint.prototype.toString = function () {\n  return new Point().constructor.name + \"[x=\" + this.x + \",y=\" + this.y + \"]\";\n};\n\nmodule.exports = Point;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RectangleD(x, y, width, height) {\n  this.x = 0;\n  this.y = 0;\n  this.width = 0;\n  this.height = 0;\n\n  if (x != null && y != null && width != null && height != null) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n}\n\nRectangleD.prototype.getX = function () {\n  return this.x;\n};\n\nRectangleD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nRectangleD.prototype.getY = function () {\n  return this.y;\n};\n\nRectangleD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nRectangleD.prototype.getWidth = function () {\n  return this.width;\n};\n\nRectangleD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nRectangleD.prototype.getHeight = function () {\n  return this.height;\n};\n\nRectangleD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nRectangleD.prototype.getRight = function () {\n  return this.x + this.width;\n};\n\nRectangleD.prototype.getBottom = function () {\n  return this.y + this.height;\n};\n\nRectangleD.prototype.intersects = function (a) {\n  if (this.getRight() < a.x) {\n    return false;\n  }\n\n  if (this.getBottom() < a.y) {\n    return false;\n  }\n\n  if (a.getRight() < this.x) {\n    return false;\n  }\n\n  if (a.getBottom() < this.y) {\n    return false;\n  }\n\n  return true;\n};\n\nRectangleD.prototype.getCenterX = function () {\n  return this.x + this.width / 2;\n};\n\nRectangleD.prototype.getMinX = function () {\n  return this.getX();\n};\n\nRectangleD.prototype.getMaxX = function () {\n  return this.getX() + this.width;\n};\n\nRectangleD.prototype.getCenterY = function () {\n  return this.y + this.height / 2;\n};\n\nRectangleD.prototype.getMinY = function () {\n  return this.getY();\n};\n\nRectangleD.prototype.getMaxY = function () {\n  return this.getY() + this.height;\n};\n\nRectangleD.prototype.getWidthHalf = function () {\n  return this.width / 2;\n};\n\nRectangleD.prototype.getHeightHalf = function () {\n  return this.height / 2;\n};\n\nmodule.exports = RectangleD;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction UniqueIDGeneretor() {}\n\nUniqueIDGeneretor.lastID = 0;\n\nUniqueIDGeneretor.createID = function (obj) {\n  if (UniqueIDGeneretor.isPrimitive(obj)) {\n    return obj;\n  }\n  if (obj.uniqueID != null) {\n    return obj.uniqueID;\n  }\n  obj.uniqueID = UniqueIDGeneretor.getString();\n  UniqueIDGeneretor.lastID++;\n  return obj.uniqueID;\n};\n\nUniqueIDGeneretor.getString = function (id) {\n  if (id == null) id = UniqueIDGeneretor.lastID;\n  return \"Object#\" + id + \"\";\n};\n\nUniqueIDGeneretor.isPrimitive = function (arg) {\n  var type = typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg);\n  return arg == null || type != \"object\" && type != \"function\";\n};\n\nmodule.exports = UniqueIDGeneretor;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(7);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar LGraph = __webpack_require__(6);\nvar PointD = __webpack_require__(5);\nvar Transform = __webpack_require__(17);\nvar Emitter = __webpack_require__(29);\n\nfunction Layout(isRemoteUse) {\n  Emitter.call(this);\n\n  //Layout Quality: 0:draft, 1:default, 2:proof\n  this.layoutQuality = LayoutConstants.QUALITY;\n  //Whether layout should create bendpoints as needed or not\n  this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  //Whether layout should be incremental or not\n  this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n  //Whether we animate from before to after layout node positions\n  this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n  //Whether we animate the layout process or not\n  this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n  //Number iterations that should be done between two successive animations\n  this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n  /**\r\n   * Whether or not leaf nodes (non-compound nodes) are of uniform sizes. When\r\n   * they are, both spring and repulsion forces between two leaf nodes can be\r\n   * calculated without the expensive clipping point calculations, resulting\r\n   * in major speed-up.\r\n   */\n  this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  /**\r\n   * This is used for creation of bendpoints by using dummy nodes and edges.\r\n   * Maps an LEdge to its dummy bendpoint path.\r\n   */\n  this.edgeToDummyNodes = new Map();\n  this.graphManager = new LGraphManager(this);\n  this.isLayoutFinished = false;\n  this.isSubLayout = false;\n  this.isRemoteUse = false;\n\n  if (isRemoteUse != null) {\n    this.isRemoteUse = isRemoteUse;\n  }\n}\n\nLayout.RANDOM_SEED = 1;\n\nLayout.prototype = Object.create(Emitter.prototype);\n\nLayout.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLayout.prototype.getAllNodes = function () {\n  return this.graphManager.getAllNodes();\n};\n\nLayout.prototype.getAllEdges = function () {\n  return this.graphManager.getAllEdges();\n};\n\nLayout.prototype.getAllNodesToApplyGravitation = function () {\n  return this.graphManager.getAllNodesToApplyGravitation();\n};\n\nLayout.prototype.newGraphManager = function () {\n  var gm = new LGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nLayout.prototype.newGraph = function (vGraph) {\n  return new LGraph(null, this.graphManager, vGraph);\n};\n\nLayout.prototype.newNode = function (vNode) {\n  return new LNode(this.graphManager, vNode);\n};\n\nLayout.prototype.newEdge = function (vEdge) {\n  return new LEdge(null, null, vEdge);\n};\n\nLayout.prototype.checkLayoutSuccess = function () {\n  return this.graphManager.getRoot() == null || this.graphManager.getRoot().getNodes().length == 0 || this.graphManager.includesInvalidEdge();\n};\n\nLayout.prototype.runLayout = function () {\n  this.isLayoutFinished = false;\n\n  if (this.tilingPreLayout) {\n    this.tilingPreLayout();\n  }\n\n  this.initParameters();\n  var isLayoutSuccessfull;\n\n  if (this.checkLayoutSuccess()) {\n    isLayoutSuccessfull = false;\n  } else {\n    isLayoutSuccessfull = this.layout();\n  }\n\n  if (LayoutConstants.ANIMATE === 'during') {\n    // If this is a 'during' layout animation. Layout is not finished yet. \n    // We need to perform these in index.js when layout is really finished.\n    return false;\n  }\n\n  if (isLayoutSuccessfull) {\n    if (!this.isSubLayout) {\n      this.doPostLayout();\n    }\n  }\n\n  if (this.tilingPostLayout) {\n    this.tilingPostLayout();\n  }\n\n  this.isLayoutFinished = true;\n\n  return isLayoutSuccessfull;\n};\n\n/**\r\n * This method performs the operations required after layout.\r\n */\nLayout.prototype.doPostLayout = function () {\n  //assert !isSubLayout : \"Should not be called on sub-layout!\";\n  // Propagate geometric changes to v-level objects\n  if (!this.incremental) {\n    this.transform();\n  }\n  this.update();\n};\n\n/**\r\n * This method updates the geometry of the target graph according to\r\n * calculated layout.\r\n */\nLayout.prototype.update2 = function () {\n  // update bend points\n  if (this.createBendsAsNeeded) {\n    this.createBendpointsFromDummyNodes();\n\n    // reset all edges, since the topology has changed\n    this.graphManager.resetAllEdges();\n  }\n\n  // perform edge, node and root updates if layout is not called\n  // remotely\n  if (!this.isRemoteUse) {\n    // update all edges\n    var edge;\n    var allEdges = this.graphManager.getAllEdges();\n    for (var i = 0; i < allEdges.length; i++) {\n      edge = allEdges[i];\n      //      this.update(edge);\n    }\n\n    // recursively update nodes\n    var node;\n    var nodes = this.graphManager.getRoot().getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      node = nodes[i];\n      //      this.update(node);\n    }\n\n    // update root graph\n    this.update(this.graphManager.getRoot());\n  }\n};\n\nLayout.prototype.update = function (obj) {\n  if (obj == null) {\n    this.update2();\n  } else if (obj instanceof LNode) {\n    var node = obj;\n    if (node.getChild() != null) {\n      // since node is compound, recursively update child nodes\n      var nodes = node.getChild().getNodes();\n      for (var i = 0; i < nodes.length; i++) {\n        update(nodes[i]);\n      }\n    }\n\n    // if the l-level node is associated with a v-level graph object,\n    // then it is assumed that the v-level node implements the\n    // interface Updatable.\n    if (node.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vNode = node.vGraphObject;\n\n      // call the update method of the interface\n      vNode.update(node);\n    }\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    // if the l-level edge is associated with a v-level graph object,\n    // then it is assumed that the v-level edge implements the\n    // interface Updatable.\n\n    if (edge.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vEdge = edge.vGraphObject;\n\n      // call the update method of the interface\n      vEdge.update(edge);\n    }\n  } else if (obj instanceof LGraph) {\n    var graph = obj;\n    // if the l-level graph is associated with a v-level graph object,\n    // then it is assumed that the v-level object implements the\n    // interface Updatable.\n\n    if (graph.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vGraph = graph.vGraphObject;\n\n      // call the update method of the interface\n      vGraph.update(graph);\n    }\n  }\n};\n\n/**\r\n * This method is used to set all layout parameters to default values\r\n * determined at compile time.\r\n */\nLayout.prototype.initParameters = function () {\n  if (!this.isSubLayout) {\n    this.layoutQuality = LayoutConstants.QUALITY;\n    this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n    this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n    this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n    this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n    this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n    this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  }\n\n  if (this.animationDuringLayout) {\n    this.animationOnLayout = false;\n  }\n};\n\nLayout.prototype.transform = function (newLeftTop) {\n  if (newLeftTop == undefined) {\n    this.transform(new PointD(0, 0));\n  } else {\n    // create a transformation object (from Eclipse to layout). When an\n    // inverse transform is applied, we get upper-left coordinate of the\n    // drawing or the root graph at given input coordinate (some margins\n    // already included in calculation of left-top).\n\n    var trans = new Transform();\n    var leftTop = this.graphManager.getRoot().updateLeftTop();\n\n    if (leftTop != null) {\n      trans.setWorldOrgX(newLeftTop.x);\n      trans.setWorldOrgY(newLeftTop.y);\n\n      trans.setDeviceOrgX(leftTop.x);\n      trans.setDeviceOrgY(leftTop.y);\n\n      var nodes = this.getAllNodes();\n      var node;\n\n      for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        node.transform(trans);\n      }\n    }\n  }\n};\n\nLayout.prototype.positionNodesRandomly = function (graph) {\n\n  if (graph == undefined) {\n    //assert !this.incremental;\n    this.positionNodesRandomly(this.getGraphManager().getRoot());\n    this.getGraphManager().getRoot().updateBounds(true);\n  } else {\n    var lNode;\n    var childGraph;\n\n    var nodes = graph.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      lNode = nodes[i];\n      childGraph = lNode.getChild();\n\n      if (childGraph == null) {\n        lNode.scatter();\n      } else if (childGraph.getNodes().length == 0) {\n        lNode.scatter();\n      } else {\n        this.positionNodesRandomly(childGraph);\n        lNode.updateBounds();\n      }\n    }\n  }\n};\n\n/**\r\n * This method returns a list of trees where each tree is represented as a\r\n * list of l-nodes. The method returns a list of size 0 when:\r\n * - The graph is not flat or\r\n * - One of the component(s) of the graph is not a tree.\r\n */\nLayout.prototype.getFlatForest = function () {\n  var flatForest = [];\n  var isForest = true;\n\n  // Quick reference for all nodes in the graph manager associated with\n  // this layout. The list should not be changed.\n  var allNodes = this.graphManager.getRoot().getNodes();\n\n  // First be sure that the graph is flat\n  var isFlat = true;\n\n  for (var i = 0; i < allNodes.length; i++) {\n    if (allNodes[i].getChild() != null) {\n      isFlat = false;\n    }\n  }\n\n  // Return empty forest if the graph is not flat.\n  if (!isFlat) {\n    return flatForest;\n  }\n\n  // Run BFS for each component of the graph.\n\n  var visited = new Set();\n  var toBeVisited = [];\n  var parents = new Map();\n  var unProcessedNodes = [];\n\n  unProcessedNodes = unProcessedNodes.concat(allNodes);\n\n  // Each iteration of this loop finds a component of the graph and\n  // decides whether it is a tree or not. If it is a tree, adds it to the\n  // forest and continued with the next component.\n\n  while (unProcessedNodes.length > 0 && isForest) {\n    toBeVisited.push(unProcessedNodes[0]);\n\n    // Start the BFS. Each iteration of this loop visits a node in a\n    // BFS manner.\n    while (toBeVisited.length > 0 && isForest) {\n      //pool operation\n      var currentNode = toBeVisited[0];\n      toBeVisited.splice(0, 1);\n      visited.add(currentNode);\n\n      // Traverse all neighbors of this node\n      var neighborEdges = currentNode.getEdges();\n\n      for (var i = 0; i < neighborEdges.length; i++) {\n        var currentNeighbor = neighborEdges[i].getOtherEnd(currentNode);\n\n        // If BFS is not growing from this neighbor.\n        if (parents.get(currentNode) != currentNeighbor) {\n          // We haven't previously visited this neighbor.\n          if (!visited.has(currentNeighbor)) {\n            toBeVisited.push(currentNeighbor);\n            parents.set(currentNeighbor, currentNode);\n          }\n          // Since we have previously visited this neighbor and\n          // this neighbor is not parent of currentNode, given\n          // graph contains a component that is not tree, hence\n          // it is not a forest.\n          else {\n              isForest = false;\n              break;\n            }\n        }\n      }\n    }\n\n    // The graph contains a component that is not a tree. Empty\n    // previously found trees. The method will end.\n    if (!isForest) {\n      flatForest = [];\n    }\n    // Save currently visited nodes as a tree in our forest. Reset\n    // visited and parents lists. Continue with the next component of\n    // the graph, if any.\n    else {\n        var temp = [].concat(_toConsumableArray(visited));\n        flatForest.push(temp);\n        //flatForest = flatForest.concat(temp);\n        //unProcessedNodes.removeAll(visited);\n        for (var i = 0; i < temp.length; i++) {\n          var value = temp[i];\n          var index = unProcessedNodes.indexOf(value);\n          if (index > -1) {\n            unProcessedNodes.splice(index, 1);\n          }\n        }\n        visited = new Set();\n        parents = new Map();\n      }\n  }\n\n  return flatForest;\n};\n\n/**\r\n * This method creates dummy nodes (an l-level node with minimal dimensions)\r\n * for the given edge (one per bendpoint). The existing l-level structure\r\n * is updated accordingly.\r\n */\nLayout.prototype.createDummyNodesForBendpoints = function (edge) {\n  var dummyNodes = [];\n  var prev = edge.source;\n\n  var graph = this.graphManager.calcLowestCommonAncestor(edge.source, edge.target);\n\n  for (var i = 0; i < edge.bendpoints.length; i++) {\n    // create new dummy node\n    var dummyNode = this.newNode(null);\n    dummyNode.setRect(new Point(0, 0), new Dimension(1, 1));\n\n    graph.add(dummyNode);\n\n    // create new dummy edge between prev and dummy node\n    var dummyEdge = this.newEdge(null);\n    this.graphManager.add(dummyEdge, prev, dummyNode);\n\n    dummyNodes.add(dummyNode);\n    prev = dummyNode;\n  }\n\n  var dummyEdge = this.newEdge(null);\n  this.graphManager.add(dummyEdge, prev, edge.target);\n\n  this.edgeToDummyNodes.set(edge, dummyNodes);\n\n  // remove real edge from graph manager if it is inter-graph\n  if (edge.isInterGraph()) {\n    this.graphManager.remove(edge);\n  }\n  // else, remove the edge from the current graph\n  else {\n      graph.remove(edge);\n    }\n\n  return dummyNodes;\n};\n\n/**\r\n * This method creates bendpoints for edges from the dummy nodes\r\n * at l-level.\r\n */\nLayout.prototype.createBendpointsFromDummyNodes = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  edges = [].concat(_toConsumableArray(this.edgeToDummyNodes.keys())).concat(edges);\n\n  for (var k = 0; k < edges.length; k++) {\n    var lEdge = edges[k];\n\n    if (lEdge.bendpoints.length > 0) {\n      var path = this.edgeToDummyNodes.get(lEdge);\n\n      for (var i = 0; i < path.length; i++) {\n        var dummyNode = path[i];\n        var p = new PointD(dummyNode.getCenterX(), dummyNode.getCenterY());\n\n        // update bendpoint's location according to dummy node\n        var ebp = lEdge.bendpoints.get(i);\n        ebp.x = p.x;\n        ebp.y = p.y;\n\n        // remove the dummy node, dummy edges incident with this\n        // dummy node is also removed (within the remove method)\n        dummyNode.getOwner().remove(dummyNode);\n      }\n\n      // add the real edge to graph\n      this.graphManager.add(lEdge, lEdge.source, lEdge.target);\n    }\n  }\n};\n\nLayout.transform = function (sliderValue, defaultValue, minDiv, maxMul) {\n  if (minDiv != undefined && maxMul != undefined) {\n    var value = defaultValue;\n\n    if (sliderValue <= 50) {\n      var minValue = defaultValue / minDiv;\n      value -= (defaultValue - minValue) / 50 * (50 - sliderValue);\n    } else {\n      var maxValue = defaultValue * maxMul;\n      value += (maxValue - defaultValue) / 50 * (sliderValue - 50);\n    }\n\n    return value;\n  } else {\n    var a, b;\n\n    if (sliderValue <= 50) {\n      a = 9.0 * defaultValue / 500.0;\n      b = defaultValue / 10.0;\n    } else {\n      a = 9.0 * defaultValue / 50.0;\n      b = -8 * defaultValue;\n    }\n\n    return a * sliderValue + b;\n  }\n};\n\n/**\r\n * This method finds and returns the center of the given nodes, assuming\r\n * that the given nodes form a tree in themselves.\r\n */\nLayout.findCenterOfTree = function (nodes) {\n  var list = [];\n  list = list.concat(nodes);\n\n  var removedNodes = [];\n  var remainingDegrees = new Map();\n  var foundCenter = false;\n  var centerNode = null;\n\n  if (list.length == 1 || list.length == 2) {\n    foundCenter = true;\n    centerNode = list[0];\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    var node = list[i];\n    var degree = node.getNeighborsList().size;\n    remainingDegrees.set(node, node.getNeighborsList().size);\n\n    if (degree == 1) {\n      removedNodes.push(node);\n    }\n  }\n\n  var tempList = [];\n  tempList = tempList.concat(removedNodes);\n\n  while (!foundCenter) {\n    var tempList2 = [];\n    tempList2 = tempList2.concat(tempList);\n    tempList = [];\n\n    for (var i = 0; i < list.length; i++) {\n      var node = list[i];\n\n      var index = list.indexOf(node);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n\n      var neighbours = node.getNeighborsList();\n\n      neighbours.forEach(function (neighbour) {\n        if (removedNodes.indexOf(neighbour) < 0) {\n          var otherDegree = remainingDegrees.get(neighbour);\n          var newDegree = otherDegree - 1;\n\n          if (newDegree == 1) {\n            tempList.push(neighbour);\n          }\n\n          remainingDegrees.set(neighbour, newDegree);\n        }\n      });\n    }\n\n    removedNodes = removedNodes.concat(tempList);\n\n    if (list.length == 1 || list.length == 2) {\n      foundCenter = true;\n      centerNode = list[0];\n    }\n  }\n\n  return centerNode;\n};\n\n/**\r\n * During the coarsening process, this layout may be referenced by two graph managers\r\n * this setter function grants access to change the currently being used graph manager\r\n */\nLayout.prototype.setGraphManager = function (gm) {\n  this.graphManager = gm;\n};\n\nmodule.exports = Layout;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RandomSeed() {}\n// adapted from: https://stackoverflow.com/a/19303725\nRandomSeed.seed = 1;\nRandomSeed.x = 0;\n\nRandomSeed.nextDouble = function () {\n  RandomSeed.x = Math.sin(RandomSeed.seed++) * 10000;\n  return RandomSeed.x - Math.floor(RandomSeed.x);\n};\n\nmodule.exports = RandomSeed;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar PointD = __webpack_require__(5);\n\nfunction Transform(x, y) {\n  this.lworldOrgX = 0.0;\n  this.lworldOrgY = 0.0;\n  this.ldeviceOrgX = 0.0;\n  this.ldeviceOrgY = 0.0;\n  this.lworldExtX = 1.0;\n  this.lworldExtY = 1.0;\n  this.ldeviceExtX = 1.0;\n  this.ldeviceExtY = 1.0;\n}\n\nTransform.prototype.getWorldOrgX = function () {\n  return this.lworldOrgX;\n};\n\nTransform.prototype.setWorldOrgX = function (wox) {\n  this.lworldOrgX = wox;\n};\n\nTransform.prototype.getWorldOrgY = function () {\n  return this.lworldOrgY;\n};\n\nTransform.prototype.setWorldOrgY = function (woy) {\n  this.lworldOrgY = woy;\n};\n\nTransform.prototype.getWorldExtX = function () {\n  return this.lworldExtX;\n};\n\nTransform.prototype.setWorldExtX = function (wex) {\n  this.lworldExtX = wex;\n};\n\nTransform.prototype.getWorldExtY = function () {\n  return this.lworldExtY;\n};\n\nTransform.prototype.setWorldExtY = function (wey) {\n  this.lworldExtY = wey;\n};\n\n/* Device related */\n\nTransform.prototype.getDeviceOrgX = function () {\n  return this.ldeviceOrgX;\n};\n\nTransform.prototype.setDeviceOrgX = function (dox) {\n  this.ldeviceOrgX = dox;\n};\n\nTransform.prototype.getDeviceOrgY = function () {\n  return this.ldeviceOrgY;\n};\n\nTransform.prototype.setDeviceOrgY = function (doy) {\n  this.ldeviceOrgY = doy;\n};\n\nTransform.prototype.getDeviceExtX = function () {\n  return this.ldeviceExtX;\n};\n\nTransform.prototype.setDeviceExtX = function (dex) {\n  this.ldeviceExtX = dex;\n};\n\nTransform.prototype.getDeviceExtY = function () {\n  return this.ldeviceExtY;\n};\n\nTransform.prototype.setDeviceExtY = function (dey) {\n  this.ldeviceExtY = dey;\n};\n\nTransform.prototype.transformX = function (x) {\n  var xDevice = 0.0;\n  var worldExtX = this.lworldExtX;\n  if (worldExtX != 0.0) {\n    xDevice = this.ldeviceOrgX + (x - this.lworldOrgX) * this.ldeviceExtX / worldExtX;\n  }\n\n  return xDevice;\n};\n\nTransform.prototype.transformY = function (y) {\n  var yDevice = 0.0;\n  var worldExtY = this.lworldExtY;\n  if (worldExtY != 0.0) {\n    yDevice = this.ldeviceOrgY + (y - this.lworldOrgY) * this.ldeviceExtY / worldExtY;\n  }\n\n  return yDevice;\n};\n\nTransform.prototype.inverseTransformX = function (x) {\n  var xWorld = 0.0;\n  var deviceExtX = this.ldeviceExtX;\n  if (deviceExtX != 0.0) {\n    xWorld = this.lworldOrgX + (x - this.ldeviceOrgX) * this.lworldExtX / deviceExtX;\n  }\n\n  return xWorld;\n};\n\nTransform.prototype.inverseTransformY = function (y) {\n  var yWorld = 0.0;\n  var deviceExtY = this.ldeviceExtY;\n  if (deviceExtY != 0.0) {\n    yWorld = this.lworldOrgY + (y - this.ldeviceOrgY) * this.lworldExtY / deviceExtY;\n  }\n  return yWorld;\n};\n\nTransform.prototype.inverseTransformPoint = function (inPoint) {\n  var outPoint = new PointD(this.inverseTransformX(inPoint.x), this.inverseTransformY(inPoint.y));\n  return outPoint;\n};\n\nmodule.exports = Transform;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar Layout = __webpack_require__(15);\nvar FDLayoutConstants = __webpack_require__(4);\nvar LayoutConstants = __webpack_require__(0);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction FDLayout() {\n  Layout.call(this);\n\n  this.useSmartIdealEdgeLengthCalculation = FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n  this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n  this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n  this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n  this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n  this.displacementThresholdPerNode = 3.0 * FDLayoutConstants.DEFAULT_EDGE_LENGTH / 100;\n  this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.initialCoolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.totalDisplacement = 0.0;\n  this.oldTotalDisplacement = 0.0;\n  this.maxIterations = FDLayoutConstants.MAX_ITERATIONS;\n}\n\nFDLayout.prototype = Object.create(Layout.prototype);\n\nfor (var prop in Layout) {\n  FDLayout[prop] = Layout[prop];\n}\n\nFDLayout.prototype.initParameters = function () {\n  Layout.prototype.initParameters.call(this, arguments);\n\n  this.totalIterations = 0;\n  this.notAnimatedIterations = 0;\n\n  this.useFRGridVariant = FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION;\n\n  this.grid = [];\n};\n\nFDLayout.prototype.calcIdealEdgeLengths = function () {\n  var edge;\n  var originalIdealLength;\n  var lcaDepth;\n  var source;\n  var target;\n  var sizeOfSourceInLca;\n  var sizeOfTargetInLca;\n\n  var allEdges = this.getGraphManager().getAllEdges();\n  for (var i = 0; i < allEdges.length; i++) {\n    edge = allEdges[i];\n\n    originalIdealLength = edge.idealLength;\n\n    if (edge.isInterGraph) {\n      source = edge.getSource();\n      target = edge.getTarget();\n\n      sizeOfSourceInLca = edge.getSourceInLca().getEstimatedSize();\n      sizeOfTargetInLca = edge.getTargetInLca().getEstimatedSize();\n\n      if (this.useSmartIdealEdgeLengthCalculation) {\n        edge.idealLength += sizeOfSourceInLca + sizeOfTargetInLca - 2 * LayoutConstants.SIMPLE_NODE_SIZE;\n      }\n\n      lcaDepth = edge.getLca().getInclusionTreeDepth();\n\n      edge.idealLength += originalIdealLength * FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR * (source.getInclusionTreeDepth() + target.getInclusionTreeDepth() - 2 * lcaDepth);\n    }\n  }\n};\n\nFDLayout.prototype.initSpringEmbedder = function () {\n\n  var s = this.getAllNodes().length;\n  if (this.incremental) {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(this.coolingFactor * FDLayoutConstants.COOLING_ADAPTATION_FACTOR, this.coolingFactor - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * this.coolingFactor * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    }\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL;\n  } else {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(FDLayoutConstants.COOLING_ADAPTATION_FACTOR, 1.0 - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    } else {\n      this.coolingFactor = 1.0;\n    }\n    this.initialCoolingFactor = this.coolingFactor;\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT;\n  }\n\n  this.maxIterations = Math.max(this.getAllNodes().length * 5, this.maxIterations);\n\n  // Reassign this attribute by using new constant value\n  this.displacementThresholdPerNode = 3.0 * FDLayoutConstants.DEFAULT_EDGE_LENGTH / 100;\n  this.totalDisplacementThreshold = this.displacementThresholdPerNode * this.getAllNodes().length;\n\n  this.repulsionRange = this.calcRepulsionRange();\n};\n\nFDLayout.prototype.calcSpringForces = function () {\n  var lEdges = this.getAllEdges();\n  var edge;\n\n  for (var i = 0; i < lEdges.length; i++) {\n    edge = lEdges[i];\n\n    this.calcSpringForce(edge, edge.idealLength);\n  }\n};\n\nFDLayout.prototype.calcRepulsionForces = function () {\n  var gridUpdateAllowed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var forceToNodeSurroundingUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var i, j;\n  var nodeA, nodeB;\n  var lNodes = this.getAllNodes();\n  var processedNodeSet;\n\n  if (this.useFRGridVariant) {\n    if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed) {\n      this.updateGrid();\n    }\n\n    processedNodeSet = new Set();\n\n    // calculate repulsion forces between each nodes and its surrounding\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n      this.calculateRepulsionForceOfANode(nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate);\n      processedNodeSet.add(nodeA);\n    }\n  } else {\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n\n      for (j = i + 1; j < lNodes.length; j++) {\n        nodeB = lNodes[j];\n\n        // If both nodes are not members of the same graph, skip.\n        if (nodeA.getOwner() != nodeB.getOwner()) {\n          continue;\n        }\n\n        this.calcRepulsionForce(nodeA, nodeB);\n      }\n    }\n  }\n};\n\nFDLayout.prototype.calcGravitationalForces = function () {\n  var node;\n  var lNodes = this.getAllNodesToApplyGravitation();\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    this.calcGravitationalForce(node);\n  }\n};\n\nFDLayout.prototype.moveNodes = function () {\n  var lNodes = this.getAllNodes();\n  var node;\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    node.move();\n  }\n};\n\nFDLayout.prototype.calcSpringForce = function (edge, idealLength) {\n  var sourceNode = edge.getSource();\n  var targetNode = edge.getTarget();\n\n  var length;\n  var springForce;\n  var springForceX;\n  var springForceY;\n\n  // Update edge length\n  if (this.uniformLeafNodeSizes && sourceNode.getChild() == null && targetNode.getChild() == null) {\n    edge.updateLengthSimple();\n  } else {\n    edge.updateLength();\n\n    if (edge.isOverlapingSourceAndTarget) {\n      return;\n    }\n  }\n\n  length = edge.getLength();\n\n  if (length == 0) return;\n\n  // Calculate spring forces\n  springForce = edge.edgeElasticity * (length - idealLength);\n\n  // Project force onto x and y axes\n  springForceX = springForce * (edge.lengthX / length);\n  springForceY = springForce * (edge.lengthY / length);\n\n  // Apply forces on the end nodes\n  sourceNode.springForceX += springForceX;\n  sourceNode.springForceY += springForceY;\n  targetNode.springForceX -= springForceX;\n  targetNode.springForceY -= springForceY;\n};\n\nFDLayout.prototype.calcRepulsionForce = function (nodeA, nodeB) {\n  var rectA = nodeA.getRect();\n  var rectB = nodeB.getRect();\n  var overlapAmount = new Array(2);\n  var clipPoints = new Array(4);\n  var distanceX;\n  var distanceY;\n  var distanceSquared;\n  var distance;\n  var repulsionForce;\n  var repulsionForceX;\n  var repulsionForceY;\n\n  if (rectA.intersects(rectB)) // two nodes overlap\n    {\n      // calculate separation amount in x and y directions\n      IGeometry.calcSeparationAmount(rectA, rectB, overlapAmount, FDLayoutConstants.DEFAULT_EDGE_LENGTH / 2.0);\n\n      repulsionForceX = 2 * overlapAmount[0];\n      repulsionForceY = 2 * overlapAmount[1];\n\n      var childrenConstant = nodeA.noOfChildren * nodeB.noOfChildren / (nodeA.noOfChildren + nodeB.noOfChildren);\n\n      // Apply forces on the two nodes\n      nodeA.repulsionForceX -= childrenConstant * repulsionForceX;\n      nodeA.repulsionForceY -= childrenConstant * repulsionForceY;\n      nodeB.repulsionForceX += childrenConstant * repulsionForceX;\n      nodeB.repulsionForceY += childrenConstant * repulsionForceY;\n    } else // no overlap\n    {\n      // calculate distance\n\n      if (this.uniformLeafNodeSizes && nodeA.getChild() == null && nodeB.getChild() == null) // simply base repulsion on distance of node centers\n        {\n          distanceX = rectB.getCenterX() - rectA.getCenterX();\n          distanceY = rectB.getCenterY() - rectA.getCenterY();\n        } else // use clipping points\n        {\n          IGeometry.getIntersection(rectA, rectB, clipPoints);\n\n          distanceX = clipPoints[2] - clipPoints[0];\n          distanceY = clipPoints[3] - clipPoints[1];\n        }\n\n      // No repulsion range. FR grid variant should take care of this.\n      if (Math.abs(distanceX) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceX = IMath.sign(distanceX) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      if (Math.abs(distanceY) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceY = IMath.sign(distanceY) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      distanceSquared = distanceX * distanceX + distanceY * distanceY;\n      distance = Math.sqrt(distanceSquared);\n\n      // Here we use half of the nodes' repulsion values for backward compatibility\n      repulsionForce = (nodeA.nodeRepulsion / 2 + nodeB.nodeRepulsion / 2) * nodeA.noOfChildren * nodeB.noOfChildren / distanceSquared;\n\n      // Project force onto x and y axes\n      repulsionForceX = repulsionForce * distanceX / distance;\n      repulsionForceY = repulsionForce * distanceY / distance;\n\n      // Apply forces on the two nodes    \n      nodeA.repulsionForceX -= repulsionForceX;\n      nodeA.repulsionForceY -= repulsionForceY;\n      nodeB.repulsionForceX += repulsionForceX;\n      nodeB.repulsionForceY += repulsionForceY;\n    }\n};\n\nFDLayout.prototype.calcGravitationalForce = function (node) {\n  var ownerGraph;\n  var ownerCenterX;\n  var ownerCenterY;\n  var distanceX;\n  var distanceY;\n  var absDistanceX;\n  var absDistanceY;\n  var estimatedSize;\n  ownerGraph = node.getOwner();\n\n  ownerCenterX = (ownerGraph.getRight() + ownerGraph.getLeft()) / 2;\n  ownerCenterY = (ownerGraph.getTop() + ownerGraph.getBottom()) / 2;\n  distanceX = node.getCenterX() - ownerCenterX;\n  distanceY = node.getCenterY() - ownerCenterY;\n  absDistanceX = Math.abs(distanceX) + node.getWidth() / 2;\n  absDistanceY = Math.abs(distanceY) + node.getHeight() / 2;\n\n  if (node.getOwner() == this.graphManager.getRoot()) // in the root graph\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.gravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX;\n        node.gravitationForceY = -this.gravityConstant * distanceY;\n      }\n    } else // inside a compound\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.compoundGravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX * this.compoundGravityConstant;\n        node.gravitationForceY = -this.gravityConstant * distanceY * this.compoundGravityConstant;\n      }\n    }\n};\n\nFDLayout.prototype.isConverged = function () {\n  var converged;\n  var oscilating = false;\n\n  if (this.totalIterations > this.maxIterations / 3) {\n    oscilating = Math.abs(this.totalDisplacement - this.oldTotalDisplacement) < 2;\n  }\n\n  converged = this.totalDisplacement < this.totalDisplacementThreshold;\n\n  this.oldTotalDisplacement = this.totalDisplacement;\n\n  return converged || oscilating;\n};\n\nFDLayout.prototype.animate = function () {\n  if (this.animationDuringLayout && !this.isSubLayout) {\n    if (this.notAnimatedIterations == this.animationPeriod) {\n      this.update();\n      this.notAnimatedIterations = 0;\n    } else {\n      this.notAnimatedIterations++;\n    }\n  }\n};\n\n//This method calculates the number of children (weight) for all nodes\nFDLayout.prototype.calcNoOfChildrenForAllNodes = function () {\n  var node;\n  var allNodes = this.graphManager.getAllNodes();\n\n  for (var i = 0; i < allNodes.length; i++) {\n    node = allNodes[i];\n    node.noOfChildren = node.getNoOfChildren();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: FR-Grid Variant Repulsion Force Calculation\n// -----------------------------------------------------------------------------\n\nFDLayout.prototype.calcGrid = function (graph) {\n\n  var sizeX = 0;\n  var sizeY = 0;\n\n  sizeX = parseInt(Math.ceil((graph.getRight() - graph.getLeft()) / this.repulsionRange));\n  sizeY = parseInt(Math.ceil((graph.getBottom() - graph.getTop()) / this.repulsionRange));\n\n  var grid = new Array(sizeX);\n\n  for (var i = 0; i < sizeX; i++) {\n    grid[i] = new Array(sizeY);\n  }\n\n  for (var i = 0; i < sizeX; i++) {\n    for (var j = 0; j < sizeY; j++) {\n      grid[i][j] = new Array();\n    }\n  }\n\n  return grid;\n};\n\nFDLayout.prototype.addNodeToGrid = function (v, left, top) {\n\n  var startX = 0;\n  var finishX = 0;\n  var startY = 0;\n  var finishY = 0;\n\n  startX = parseInt(Math.floor((v.getRect().x - left) / this.repulsionRange));\n  finishX = parseInt(Math.floor((v.getRect().width + v.getRect().x - left) / this.repulsionRange));\n  startY = parseInt(Math.floor((v.getRect().y - top) / this.repulsionRange));\n  finishY = parseInt(Math.floor((v.getRect().height + v.getRect().y - top) / this.repulsionRange));\n\n  for (var i = startX; i <= finishX; i++) {\n    for (var j = startY; j <= finishY; j++) {\n      this.grid[i][j].push(v);\n      v.setGridCoordinates(startX, finishX, startY, finishY);\n    }\n  }\n};\n\nFDLayout.prototype.updateGrid = function () {\n  var i;\n  var nodeA;\n  var lNodes = this.getAllNodes();\n\n  this.grid = this.calcGrid(this.graphManager.getRoot());\n\n  // put all nodes to proper grid cells\n  for (i = 0; i < lNodes.length; i++) {\n    nodeA = lNodes[i];\n    this.addNodeToGrid(nodeA, this.graphManager.getRoot().getLeft(), this.graphManager.getRoot().getTop());\n  }\n};\n\nFDLayout.prototype.calculateRepulsionForceOfANode = function (nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate) {\n\n  if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed || forceToNodeSurroundingUpdate) {\n    var surrounding = new Set();\n    nodeA.surrounding = new Array();\n    var nodeB;\n    var grid = this.grid;\n\n    for (var i = nodeA.startX - 1; i < nodeA.finishX + 2; i++) {\n      for (var j = nodeA.startY - 1; j < nodeA.finishY + 2; j++) {\n        if (!(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length)) {\n          for (var k = 0; k < grid[i][j].length; k++) {\n            nodeB = grid[i][j][k];\n\n            // If both nodes are not members of the same graph, \n            // or both nodes are the same, skip.\n            if (nodeA.getOwner() != nodeB.getOwner() || nodeA == nodeB) {\n              continue;\n            }\n\n            // check if the repulsion force between\n            // nodeA and nodeB has already been calculated\n            if (!processedNodeSet.has(nodeB) && !surrounding.has(nodeB)) {\n              var distanceX = Math.abs(nodeA.getCenterX() - nodeB.getCenterX()) - (nodeA.getWidth() / 2 + nodeB.getWidth() / 2);\n              var distanceY = Math.abs(nodeA.getCenterY() - nodeB.getCenterY()) - (nodeA.getHeight() / 2 + nodeB.getHeight() / 2);\n\n              // if the distance between nodeA and nodeB \n              // is less then calculation range\n              if (distanceX <= this.repulsionRange && distanceY <= this.repulsionRange) {\n                //then add nodeB to surrounding of nodeA\n                surrounding.add(nodeB);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    nodeA.surrounding = [].concat(_toConsumableArray(surrounding));\n  }\n  for (i = 0; i < nodeA.surrounding.length; i++) {\n    this.calcRepulsionForce(nodeA, nodeA.surrounding[i]);\n  }\n};\n\nFDLayout.prototype.calcRepulsionRange = function () {\n  return 0.0;\n};\n\nmodule.exports = FDLayout;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LEdge = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(4);\n\nfunction FDLayoutEdge(source, target, vEdge) {\n  LEdge.call(this, source, target, vEdge);\n\n  // Ideal length and elasticity value for this edge\n  this.idealLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n  this.edgeElasticity = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n}\n\nFDLayoutEdge.prototype = Object.create(LEdge.prototype);\n\nfor (var prop in LEdge) {\n  FDLayoutEdge[prop] = LEdge[prop];\n}\n\nmodule.exports = FDLayoutEdge;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LNode = __webpack_require__(3);\nvar FDLayoutConstants = __webpack_require__(4);\n\nfunction FDLayoutNode(gm, loc, size, vNode) {\n  // alternative constructor is handled inside LNode\n  LNode.call(this, gm, loc, size, vNode);\n\n  // Repulsion value of this node\n  this.nodeRepulsion = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n\n  //Spring, repulsion and gravitational forces acting on this node\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  //Amount by which this node is to be moved in this iteration\n  this.displacementX = 0;\n  this.displacementY = 0;\n\n  //Start and finish grid coordinates that this node is fallen into\n  this.startX = 0;\n  this.finishX = 0;\n  this.startY = 0;\n  this.finishY = 0;\n\n  //Geometric neighbors of this node\n  this.surrounding = [];\n}\n\nFDLayoutNode.prototype = Object.create(LNode.prototype);\n\nfor (var prop in LNode) {\n  FDLayoutNode[prop] = LNode[prop];\n}\n\nFDLayoutNode.prototype.setGridCoordinates = function (_startX, _finishX, _startY, _finishY) {\n  this.startX = _startX;\n  this.finishX = _finishX;\n  this.startY = _startY;\n  this.finishY = _finishY;\n};\n\nmodule.exports = FDLayoutNode;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction DimensionD(width, height) {\n  this.width = 0;\n  this.height = 0;\n  if (width !== null && height !== null) {\n    this.height = height;\n    this.width = width;\n  }\n}\n\nDimensionD.prototype.getWidth = function () {\n  return this.width;\n};\n\nDimensionD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nDimensionD.prototype.getHeight = function () {\n  return this.height;\n};\n\nDimensionD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nmodule.exports = DimensionD;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashMap() {\n  this.map = {};\n  this.keys = [];\n}\n\nHashMap.prototype.put = function (key, value) {\n  var theId = UniqueIDGeneretor.createID(key);\n  if (!this.contains(theId)) {\n    this.map[theId] = value;\n    this.keys.push(key);\n  }\n};\n\nHashMap.prototype.contains = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[key] != null;\n};\n\nHashMap.prototype.get = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[theId];\n};\n\nHashMap.prototype.keySet = function () {\n  return this.keys;\n};\n\nmodule.exports = HashMap;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashSet() {\n  this.set = {};\n}\n;\n\nHashSet.prototype.add = function (obj) {\n  var theId = UniqueIDGeneretor.createID(obj);\n  if (!this.contains(theId)) this.set[theId] = obj;\n};\n\nHashSet.prototype.remove = function (obj) {\n  delete this.set[UniqueIDGeneretor.createID(obj)];\n};\n\nHashSet.prototype.clear = function () {\n  this.set = {};\n};\n\nHashSet.prototype.contains = function (obj) {\n  return this.set[UniqueIDGeneretor.createID(obj)] == obj;\n};\n\nHashSet.prototype.isEmpty = function () {\n  return this.size() === 0;\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\n//concats this.set to the given list\nHashSet.prototype.addAllTo = function (list) {\n  var keys = Object.keys(this.set);\n  var length = keys.length;\n  for (var i = 0; i < length; i++) {\n    list.push(this.set[keys[i]]);\n  }\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\nHashSet.prototype.addAll = function (list) {\n  var s = list.length;\n  for (var i = 0; i < s; i++) {\n    var v = list[i];\n    this.add(v);\n  }\n};\n\nmodule.exports = HashSet;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Some matrix (1d and 2d array) operations\nfunction Matrix() {}\n\n/**\n * matrix multiplication\n * array1, array2 and result are 2d arrays\n */\nMatrix.multMat = function (array1, array2) {\n  var result = [];\n\n  for (var i = 0; i < array1.length; i++) {\n    result[i] = [];\n    for (var j = 0; j < array2[0].length; j++) {\n      result[i][j] = 0;\n      for (var k = 0; k < array1[0].length; k++) {\n        result[i][j] += array1[i][k] * array2[k][j];\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * matrix transpose\n * array and result are 2d arrays\n */\nMatrix.transpose = function (array) {\n  var result = [];\n\n  for (var i = 0; i < array[0].length; i++) {\n    result[i] = [];\n    for (var j = 0; j < array.length; j++) {\n      result[i][j] = array[j][i];\n    }\n  }\n\n  return result;\n};\n\n/**\n * multiply array with constant\n * array and result are 1d arrays\n */\nMatrix.multCons = function (array, constant) {\n  var result = [];\n\n  for (var i = 0; i < array.length; i++) {\n    result[i] = array[i] * constant;\n  }\n\n  return result;\n};\n\n/**\n * substract two arrays\n * array1, array2 and result are 1d arrays\n */\nMatrix.minusOp = function (array1, array2) {\n  var result = [];\n\n  for (var i = 0; i < array1.length; i++) {\n    result[i] = array1[i] - array2[i];\n  }\n\n  return result;\n};\n\n/**\n * dot product of two arrays with same size\n * array1 and array2 are 1d arrays\n */\nMatrix.dotProduct = function (array1, array2) {\n  var product = 0;\n\n  for (var i = 0; i < array1.length; i++) {\n    product += array1[i] * array2[i];\n  }\n\n  return product;\n};\n\n/**\n * magnitude of an array\n * array is 1d array\n */\nMatrix.mag = function (array) {\n  return Math.sqrt(this.dotProduct(array, array));\n};\n\n/**\n * normalization of an array\n * array and result are 1d array\n */\nMatrix.normalize = function (array) {\n  var result = [];\n  var magnitude = this.mag(array);\n\n  for (var i = 0; i < array.length; i++) {\n    result[i] = array[i] / magnitude;\n  }\n\n  return result;\n};\n\n/**\n * multiply an array with centering matrix\n * array and result are 1d array\n */\nMatrix.multGamma = function (array) {\n  var result = [];\n  var sum = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n\n  sum *= -1 / array.length;\n\n  for (var _i = 0; _i < array.length; _i++) {\n    result[_i] = sum + array[_i];\n  }\n  return result;\n};\n\n/**\n * a special matrix multiplication\n * result = 0.5 * C * INV * C^T * array\n * array and result are 1d, C and INV are 2d arrays\n */\nMatrix.multL = function (array, C, INV) {\n  var result = [];\n  var temp1 = [];\n  var temp2 = [];\n\n  // multiply by C^T\n  for (var i = 0; i < C[0].length; i++) {\n    var sum = 0;\n    for (var j = 0; j < C.length; j++) {\n      sum += -0.5 * C[j][i] * array[j];\n    }\n    temp1[i] = sum;\n  }\n  // multiply the result by INV\n  for (var _i2 = 0; _i2 < INV.length; _i2++) {\n    var _sum = 0;\n    for (var _j = 0; _j < INV.length; _j++) {\n      _sum += INV[_i2][_j] * temp1[_j];\n    }\n    temp2[_i2] = _sum;\n  }\n  // multiply the result by C\n  for (var _i3 = 0; _i3 < C.length; _i3++) {\n    var _sum2 = 0;\n    for (var _j2 = 0; _j2 < C[0].length; _j2++) {\n      _sum2 += C[_i3][_j2] * temp2[_j2];\n    }\n    result[_i3] = _sum2;\n  }\n\n  return result;\n};\n\nmodule.exports = Matrix;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A classic Quicksort algorithm with Hoare's partition\n * - Works also on LinkedList objects\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar LinkedList = __webpack_require__(11);\n\nvar Quicksort = function () {\n    function Quicksort(A, compareFunction) {\n        _classCallCheck(this, Quicksort);\n\n        if (compareFunction !== null || compareFunction !== undefined) this.compareFunction = this._defaultCompareFunction;\n\n        var length = void 0;\n        if (A instanceof LinkedList) length = A.size();else length = A.length;\n\n        this._quicksort(A, 0, length - 1);\n    }\n\n    _createClass(Quicksort, [{\n        key: '_quicksort',\n        value: function _quicksort(A, p, r) {\n            if (p < r) {\n                var q = this._partition(A, p, r);\n                this._quicksort(A, p, q);\n                this._quicksort(A, q + 1, r);\n            }\n        }\n    }, {\n        key: '_partition',\n        value: function _partition(A, p, r) {\n            var x = this._get(A, p);\n            var i = p;\n            var j = r;\n            while (true) {\n                while (this.compareFunction(x, this._get(A, j))) {\n                    j--;\n                }while (this.compareFunction(this._get(A, i), x)) {\n                    i++;\n                }if (i < j) {\n                    this._swap(A, i, j);\n                    i++;\n                    j--;\n                } else return j;\n            }\n        }\n    }, {\n        key: '_get',\n        value: function _get(object, index) {\n            if (object instanceof LinkedList) return object.get_object_at(index);else return object[index];\n        }\n    }, {\n        key: '_set',\n        value: function _set(object, index, value) {\n            if (object instanceof LinkedList) object.set_object_at(index, value);else object[index] = value;\n        }\n    }, {\n        key: '_swap',\n        value: function _swap(A, i, j) {\n            var temp = this._get(A, i);\n            this._set(A, i, this._get(A, j));\n            this._set(A, j, temp);\n        }\n    }, {\n        key: '_defaultCompareFunction',\n        value: function _defaultCompareFunction(a, b) {\n            return b > a;\n        }\n    }]);\n\n    return Quicksort;\n}();\n\nmodule.exports = Quicksort;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Singular Value Decomposition implementation\nfunction SVD() {};\n\n/* Below singular value decomposition (svd) code including hypot function is adopted from https://github.com/dragonfly-ai/JamaJS\n   Some changes are applied to make the code compatible with the fcose code and to make it independent from Jama.\n   Input matrix is changed to a 2D array instead of Jama matrix. Matrix dimensions are taken according to 2D array instead of using Jama functions.\n   An object that includes singular value components is created for return. \n   The types of input parameters of the hypot function are removed. \n   let is used instead of var for the variable initialization.\n*/\n/*\n                               Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nSVD.svd = function (A) {\n  this.U = null;\n  this.V = null;\n  this.s = null;\n  this.m = 0;\n  this.n = 0;\n  this.m = A.length;\n  this.n = A[0].length;\n  var nu = Math.min(this.m, this.n);\n  this.s = function (s) {\n    var a = [];\n    while (s-- > 0) {\n      a.push(0);\n    }return a;\n  }(Math.min(this.m + 1, this.n));\n  this.U = function (dims) {\n    var allocate = function allocate(dims) {\n      if (dims.length == 0) {\n        return 0;\n      } else {\n        var array = [];\n        for (var i = 0; i < dims[0]; i++) {\n          array.push(allocate(dims.slice(1)));\n        }\n        return array;\n      }\n    };\n    return allocate(dims);\n  }([this.m, nu]);\n  this.V = function (dims) {\n    var allocate = function allocate(dims) {\n      if (dims.length == 0) {\n        return 0;\n      } else {\n        var array = [];\n        for (var i = 0; i < dims[0]; i++) {\n          array.push(allocate(dims.slice(1)));\n        }\n        return array;\n      }\n    };\n    return allocate(dims);\n  }([this.n, this.n]);\n  var e = function (s) {\n    var a = [];\n    while (s-- > 0) {\n      a.push(0);\n    }return a;\n  }(this.n);\n  var work = function (s) {\n    var a = [];\n    while (s-- > 0) {\n      a.push(0);\n    }return a;\n  }(this.m);\n  var wantu = true;\n  var wantv = true;\n  var nct = Math.min(this.m - 1, this.n);\n  var nrt = Math.max(0, Math.min(this.n - 2, this.m));\n  for (var k = 0; k < Math.max(nct, nrt); k++) {\n    if (k < nct) {\n      this.s[k] = 0;\n      for (var i = k; i < this.m; i++) {\n        this.s[k] = SVD.hypot(this.s[k], A[i][k]);\n      }\n      ;\n      if (this.s[k] !== 0.0) {\n        if (A[k][k] < 0.0) {\n          this.s[k] = -this.s[k];\n        }\n        for (var _i = k; _i < this.m; _i++) {\n          A[_i][k] /= this.s[k];\n        }\n        ;\n        A[k][k] += 1.0;\n      }\n      this.s[k] = -this.s[k];\n    }\n    for (var j = k + 1; j < this.n; j++) {\n      if (function (lhs, rhs) {\n        return lhs && rhs;\n      }(k < nct, this.s[k] !== 0.0)) {\n        var t = 0;\n        for (var _i2 = k; _i2 < this.m; _i2++) {\n          t += A[_i2][k] * A[_i2][j];\n        }\n        ;\n        t = -t / A[k][k];\n        for (var _i3 = k; _i3 < this.m; _i3++) {\n          A[_i3][j] += t * A[_i3][k];\n        }\n        ;\n      }\n      e[j] = A[k][j];\n    }\n    ;\n    if (function (lhs, rhs) {\n      return lhs && rhs;\n    }(wantu, k < nct)) {\n      for (var _i4 = k; _i4 < this.m; _i4++) {\n        this.U[_i4][k] = A[_i4][k];\n      }\n      ;\n    }\n    if (k < nrt) {\n      e[k] = 0;\n      for (var _i5 = k + 1; _i5 < this.n; _i5++) {\n        e[k] = SVD.hypot(e[k], e[_i5]);\n      }\n      ;\n      if (e[k] !== 0.0) {\n        if (e[k + 1] < 0.0) {\n          e[k] = -e[k];\n        }\n        for (var _i6 = k + 1; _i6 < this.n; _i6++) {\n          e[_i6] /= e[k];\n        }\n        ;\n        e[k + 1] += 1.0;\n      }\n      e[k] = -e[k];\n      if (function (lhs, rhs) {\n        return lhs && rhs;\n      }(k + 1 < this.m, e[k] !== 0.0)) {\n        for (var _i7 = k + 1; _i7 < this.m; _i7++) {\n          work[_i7] = 0.0;\n        }\n        ;\n        for (var _j = k + 1; _j < this.n; _j++) {\n          for (var _i8 = k + 1; _i8 < this.m; _i8++) {\n            work[_i8] += e[_j] * A[_i8][_j];\n          }\n          ;\n        }\n        ;\n        for (var _j2 = k + 1; _j2 < this.n; _j2++) {\n          var _t = -e[_j2] / e[k + 1];\n          for (var _i9 = k + 1; _i9 < this.m; _i9++) {\n            A[_i9][_j2] += _t * work[_i9];\n          }\n          ;\n        }\n        ;\n      }\n      if (wantv) {\n        for (var _i10 = k + 1; _i10 < this.n; _i10++) {\n          this.V[_i10][k] = e[_i10];\n        };\n      }\n    }\n  };\n  var p = Math.min(this.n, this.m + 1);\n  if (nct < this.n) {\n    this.s[nct] = A[nct][nct];\n  }\n  if (this.m < p) {\n    this.s[p - 1] = 0.0;\n  }\n  if (nrt + 1 < p) {\n    e[nrt] = A[nrt][p - 1];\n  }\n  e[p - 1] = 0.0;\n  if (wantu) {\n    for (var _j3 = nct; _j3 < nu; _j3++) {\n      for (var _i11 = 0; _i11 < this.m; _i11++) {\n        this.U[_i11][_j3] = 0.0;\n      }\n      ;\n      this.U[_j3][_j3] = 1.0;\n    };\n    for (var _k = nct - 1; _k >= 0; _k--) {\n      if (this.s[_k] !== 0.0) {\n        for (var _j4 = _k + 1; _j4 < nu; _j4++) {\n          var _t2 = 0;\n          for (var _i12 = _k; _i12 < this.m; _i12++) {\n            _t2 += this.U[_i12][_k] * this.U[_i12][_j4];\n          };\n          _t2 = -_t2 / this.U[_k][_k];\n          for (var _i13 = _k; _i13 < this.m; _i13++) {\n            this.U[_i13][_j4] += _t2 * this.U[_i13][_k];\n          };\n        };\n        for (var _i14 = _k; _i14 < this.m; _i14++) {\n          this.U[_i14][_k] = -this.U[_i14][_k];\n        };\n        this.U[_k][_k] = 1.0 + this.U[_k][_k];\n        for (var _i15 = 0; _i15 < _k - 1; _i15++) {\n          this.U[_i15][_k] = 0.0;\n        };\n      } else {\n        for (var _i16 = 0; _i16 < this.m; _i16++) {\n          this.U[_i16][_k] = 0.0;\n        };\n        this.U[_k][_k] = 1.0;\n      }\n    };\n  }\n  if (wantv) {\n    for (var _k2 = this.n - 1; _k2 >= 0; _k2--) {\n      if (function (lhs, rhs) {\n        return lhs && rhs;\n      }(_k2 < nrt, e[_k2] !== 0.0)) {\n        for (var _j5 = _k2 + 1; _j5 < nu; _j5++) {\n          var _t3 = 0;\n          for (var _i17 = _k2 + 1; _i17 < this.n; _i17++) {\n            _t3 += this.V[_i17][_k2] * this.V[_i17][_j5];\n          };\n          _t3 = -_t3 / this.V[_k2 + 1][_k2];\n          for (var _i18 = _k2 + 1; _i18 < this.n; _i18++) {\n            this.V[_i18][_j5] += _t3 * this.V[_i18][_k2];\n          };\n        };\n      }\n      for (var _i19 = 0; _i19 < this.n; _i19++) {\n        this.V[_i19][_k2] = 0.0;\n      };\n      this.V[_k2][_k2] = 1.0;\n    };\n  }\n  var pp = p - 1;\n  var iter = 0;\n  var eps = Math.pow(2.0, -52.0);\n  var tiny = Math.pow(2.0, -966.0);\n  while (p > 0) {\n    var _k3 = void 0;\n    var kase = void 0;\n    for (_k3 = p - 2; _k3 >= -1; _k3--) {\n      if (_k3 === -1) {\n        break;\n      }\n      if (Math.abs(e[_k3]) <= tiny + eps * (Math.abs(this.s[_k3]) + Math.abs(this.s[_k3 + 1]))) {\n        e[_k3] = 0.0;\n        break;\n      }\n    };\n    if (_k3 === p - 2) {\n      kase = 4;\n    } else {\n      var ks = void 0;\n      for (ks = p - 1; ks >= _k3; ks--) {\n        if (ks === _k3) {\n          break;\n        }\n        var _t4 = (ks !== p ? Math.abs(e[ks]) : 0.0) + (ks !== _k3 + 1 ? Math.abs(e[ks - 1]) : 0.0);\n        if (Math.abs(this.s[ks]) <= tiny + eps * _t4) {\n          this.s[ks] = 0.0;\n          break;\n        }\n      };\n      if (ks === _k3) {\n        kase = 3;\n      } else if (ks === p - 1) {\n        kase = 1;\n      } else {\n        kase = 2;\n        _k3 = ks;\n      }\n    }\n    _k3++;\n    switch (kase) {\n      case 1:\n        {\n          var f = e[p - 2];\n          e[p - 2] = 0.0;\n          for (var _j6 = p - 2; _j6 >= _k3; _j6--) {\n            var _t5 = SVD.hypot(this.s[_j6], f);\n            var cs = this.s[_j6] / _t5;\n            var sn = f / _t5;\n            this.s[_j6] = _t5;\n            if (_j6 !== _k3) {\n              f = -sn * e[_j6 - 1];\n              e[_j6 - 1] = cs * e[_j6 - 1];\n            }\n            if (wantv) {\n              for (var _i20 = 0; _i20 < this.n; _i20++) {\n                _t5 = cs * this.V[_i20][_j6] + sn * this.V[_i20][p - 1];\n                this.V[_i20][p - 1] = -sn * this.V[_i20][_j6] + cs * this.V[_i20][p - 1];\n                this.V[_i20][_j6] = _t5;\n              };\n            }\n          };\n        };\n        break;\n      case 2:\n        {\n          var _f = e[_k3 - 1];\n          e[_k3 - 1] = 0.0;\n          for (var _j7 = _k3; _j7 < p; _j7++) {\n            var _t6 = SVD.hypot(this.s[_j7], _f);\n            var _cs = this.s[_j7] / _t6;\n            var _sn = _f / _t6;\n            this.s[_j7] = _t6;\n            _f = -_sn * e[_j7];\n            e[_j7] = _cs * e[_j7];\n            if (wantu) {\n              for (var _i21 = 0; _i21 < this.m; _i21++) {\n                _t6 = _cs * this.U[_i21][_j7] + _sn * this.U[_i21][_k3 - 1];\n                this.U[_i21][_k3 - 1] = -_sn * this.U[_i21][_j7] + _cs * this.U[_i21][_k3 - 1];\n                this.U[_i21][_j7] = _t6;\n              };\n            }\n          };\n        };\n        break;\n      case 3:\n        {\n          var scale = Math.max(Math.max(Math.max(Math.max(Math.abs(this.s[p - 1]), Math.abs(this.s[p - 2])), Math.abs(e[p - 2])), Math.abs(this.s[_k3])), Math.abs(e[_k3]));\n          var sp = this.s[p - 1] / scale;\n          var spm1 = this.s[p - 2] / scale;\n          var epm1 = e[p - 2] / scale;\n          var sk = this.s[_k3] / scale;\n          var ek = e[_k3] / scale;\n          var b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2.0;\n          var c = sp * epm1 * (sp * epm1);\n          var shift = 0.0;\n          if (function (lhs, rhs) {\n            return lhs || rhs;\n          }(b !== 0.0, c !== 0.0)) {\n            shift = Math.sqrt(b * b + c);\n            if (b < 0.0) {\n              shift = -shift;\n            }\n            shift = c / (b + shift);\n          }\n          var _f2 = (sk + sp) * (sk - sp) + shift;\n          var g = sk * ek;\n          for (var _j8 = _k3; _j8 < p - 1; _j8++) {\n            var _t7 = SVD.hypot(_f2, g);\n            var _cs2 = _f2 / _t7;\n            var _sn2 = g / _t7;\n            if (_j8 !== _k3) {\n              e[_j8 - 1] = _t7;\n            }\n            _f2 = _cs2 * this.s[_j8] + _sn2 * e[_j8];\n            e[_j8] = _cs2 * e[_j8] - _sn2 * this.s[_j8];\n            g = _sn2 * this.s[_j8 + 1];\n            this.s[_j8 + 1] = _cs2 * this.s[_j8 + 1];\n            if (wantv) {\n              for (var _i22 = 0; _i22 < this.n; _i22++) {\n                _t7 = _cs2 * this.V[_i22][_j8] + _sn2 * this.V[_i22][_j8 + 1];\n                this.V[_i22][_j8 + 1] = -_sn2 * this.V[_i22][_j8] + _cs2 * this.V[_i22][_j8 + 1];\n                this.V[_i22][_j8] = _t7;\n              };\n            }\n            _t7 = SVD.hypot(_f2, g);\n            _cs2 = _f2 / _t7;\n            _sn2 = g / _t7;\n            this.s[_j8] = _t7;\n            _f2 = _cs2 * e[_j8] + _sn2 * this.s[_j8 + 1];\n            this.s[_j8 + 1] = -_sn2 * e[_j8] + _cs2 * this.s[_j8 + 1];\n            g = _sn2 * e[_j8 + 1];\n            e[_j8 + 1] = _cs2 * e[_j8 + 1];\n            if (wantu && _j8 < this.m - 1) {\n              for (var _i23 = 0; _i23 < this.m; _i23++) {\n                _t7 = _cs2 * this.U[_i23][_j8] + _sn2 * this.U[_i23][_j8 + 1];\n                this.U[_i23][_j8 + 1] = -_sn2 * this.U[_i23][_j8] + _cs2 * this.U[_i23][_j8 + 1];\n                this.U[_i23][_j8] = _t7;\n              };\n            }\n          };\n          e[p - 2] = _f2;\n          iter = iter + 1;\n        };\n        break;\n      case 4:\n        {\n          if (this.s[_k3] <= 0.0) {\n            this.s[_k3] = this.s[_k3] < 0.0 ? -this.s[_k3] : 0.0;\n            if (wantv) {\n              for (var _i24 = 0; _i24 <= pp; _i24++) {\n                this.V[_i24][_k3] = -this.V[_i24][_k3];\n              };\n            }\n          }\n          while (_k3 < pp) {\n            if (this.s[_k3] >= this.s[_k3 + 1]) {\n              break;\n            }\n            var _t8 = this.s[_k3];\n            this.s[_k3] = this.s[_k3 + 1];\n            this.s[_k3 + 1] = _t8;\n            if (wantv && _k3 < this.n - 1) {\n              for (var _i25 = 0; _i25 < this.n; _i25++) {\n                _t8 = this.V[_i25][_k3 + 1];\n                this.V[_i25][_k3 + 1] = this.V[_i25][_k3];\n                this.V[_i25][_k3] = _t8;\n              };\n            }\n            if (wantu && _k3 < this.m - 1) {\n              for (var _i26 = 0; _i26 < this.m; _i26++) {\n                _t8 = this.U[_i26][_k3 + 1];\n                this.U[_i26][_k3 + 1] = this.U[_i26][_k3];\n                this.U[_i26][_k3] = _t8;\n              };\n            }\n            _k3++;\n          };\n          iter = 0;\n          p--;\n        };\n        break;\n    }\n  };\n  var result = { U: this.U, V: this.V, S: this.s };\n  return result;\n};\n\n// sqrt(a^2 + b^2) without under/overflow.\nSVD.hypot = function (a, b) {\n  var r = void 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    r = Math.abs(a) * Math.sqrt(1 + r * r);\n  } else if (b != 0) {\n    r = a / b;\n    r = Math.abs(b) * Math.sqrt(1 + r * r);\n  } else {\n    r = 0.0;\n  }\n  return r;\n};\n\nmodule.exports = SVD;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *   Needleman-Wunsch algorithm is an procedure to compute the optimal global alignment of two string\n *   sequences by S.B.Needleman and C.D.Wunsch (1970).\n *\n *   Aside from the inputs, you can assign the scores for,\n *   - Match: The two characters at the current index are same.\n *   - Mismatch: The two characters at the current index are different.\n *   - Insertion/Deletion(gaps): The best alignment involves one letter aligning to a gap in the other string.\n */\n\nvar NeedlemanWunsch = function () {\n    function NeedlemanWunsch(sequence1, sequence2) {\n        var match_score = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var mismatch_penalty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n        var gap_penalty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n\n        _classCallCheck(this, NeedlemanWunsch);\n\n        this.sequence1 = sequence1;\n        this.sequence2 = sequence2;\n        this.match_score = match_score;\n        this.mismatch_penalty = mismatch_penalty;\n        this.gap_penalty = gap_penalty;\n\n        // Just the remove redundancy\n        this.iMax = sequence1.length + 1;\n        this.jMax = sequence2.length + 1;\n\n        // Grid matrix of scores\n        this.grid = new Array(this.iMax);\n        for (var i = 0; i < this.iMax; i++) {\n            this.grid[i] = new Array(this.jMax);\n\n            for (var j = 0; j < this.jMax; j++) {\n                this.grid[i][j] = 0;\n            }\n        }\n\n        // Traceback matrix (2D array, each cell is an array of boolean values for [`Diag`, `Up`, `Left`] positions)\n        this.tracebackGrid = new Array(this.iMax);\n        for (var _i = 0; _i < this.iMax; _i++) {\n            this.tracebackGrid[_i] = new Array(this.jMax);\n\n            for (var _j = 0; _j < this.jMax; _j++) {\n                this.tracebackGrid[_i][_j] = [null, null, null];\n            }\n        }\n\n        // The aligned sequences (return multiple possibilities)\n        this.alignments = [];\n\n        // Final alignment score\n        this.score = -1;\n\n        // Calculate scores and tracebacks\n        this.computeGrids();\n    }\n\n    _createClass(NeedlemanWunsch, [{\n        key: \"getScore\",\n        value: function getScore() {\n            return this.score;\n        }\n    }, {\n        key: \"getAlignments\",\n        value: function getAlignments() {\n            return this.alignments;\n        }\n\n        // Main dynamic programming procedure\n\n    }, {\n        key: \"computeGrids\",\n        value: function computeGrids() {\n            // Fill in the first row\n            for (var j = 1; j < this.jMax; j++) {\n                this.grid[0][j] = this.grid[0][j - 1] + this.gap_penalty;\n                this.tracebackGrid[0][j] = [false, false, true];\n            }\n\n            // Fill in the first column\n            for (var i = 1; i < this.iMax; i++) {\n                this.grid[i][0] = this.grid[i - 1][0] + this.gap_penalty;\n                this.tracebackGrid[i][0] = [false, true, false];\n            }\n\n            // Fill the rest of the grid\n            for (var _i2 = 1; _i2 < this.iMax; _i2++) {\n                for (var _j2 = 1; _j2 < this.jMax; _j2++) {\n                    // Find the max score(s) among [`Diag`, `Up`, `Left`]\n                    var diag = void 0;\n                    if (this.sequence1[_i2 - 1] === this.sequence2[_j2 - 1]) diag = this.grid[_i2 - 1][_j2 - 1] + this.match_score;else diag = this.grid[_i2 - 1][_j2 - 1] + this.mismatch_penalty;\n\n                    var up = this.grid[_i2 - 1][_j2] + this.gap_penalty;\n                    var left = this.grid[_i2][_j2 - 1] + this.gap_penalty;\n\n                    // If there exists multiple max values, capture them for multiple paths\n                    var maxOf = [diag, up, left];\n                    var indices = this.arrayAllMaxIndexes(maxOf);\n\n                    // Update Grids\n                    this.grid[_i2][_j2] = maxOf[indices[0]];\n                    this.tracebackGrid[_i2][_j2] = [indices.includes(0), indices.includes(1), indices.includes(2)];\n                }\n            }\n\n            // Update alignment score\n            this.score = this.grid[this.iMax - 1][this.jMax - 1];\n        }\n\n        // Gets all possible valid sequence combinations\n\n    }, {\n        key: \"alignmentTraceback\",\n        value: function alignmentTraceback() {\n            var inProcessAlignments = [];\n\n            inProcessAlignments.push({ pos: [this.sequence1.length, this.sequence2.length],\n                seq1: \"\",\n                seq2: \"\"\n            });\n\n            while (inProcessAlignments[0]) {\n                var current = inProcessAlignments[0];\n                var directions = this.tracebackGrid[current.pos[0]][current.pos[1]];\n\n                if (directions[0]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1] - 1],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n                if (directions[1]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1]],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: '-' + current.seq2\n                    });\n                }\n                if (directions[2]) {\n                    inProcessAlignments.push({ pos: [current.pos[0], current.pos[1] - 1],\n                        seq1: '-' + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n\n                if (current.pos[0] === 0 && current.pos[1] === 0) this.alignments.push({ sequence1: current.seq1,\n                    sequence2: current.seq2\n                });\n\n                inProcessAlignments.shift();\n            }\n\n            return this.alignments;\n        }\n\n        // Helper Functions\n\n    }, {\n        key: \"getAllIndexes\",\n        value: function getAllIndexes(arr, val) {\n            var indexes = [],\n                i = -1;\n            while ((i = arr.indexOf(val, i + 1)) !== -1) {\n                indexes.push(i);\n            }\n            return indexes;\n        }\n    }, {\n        key: \"arrayAllMaxIndexes\",\n        value: function arrayAllMaxIndexes(array) {\n            return this.getAllIndexes(array, Math.max.apply(null, array));\n        }\n    }]);\n\n    return NeedlemanWunsch;\n}();\n\nmodule.exports = NeedlemanWunsch;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar layoutBase = function layoutBase() {\n  return;\n};\n\nlayoutBase.FDLayout = __webpack_require__(18);\nlayoutBase.FDLayoutConstants = __webpack_require__(4);\nlayoutBase.FDLayoutEdge = __webpack_require__(19);\nlayoutBase.FDLayoutNode = __webpack_require__(20);\nlayoutBase.DimensionD = __webpack_require__(21);\nlayoutBase.HashMap = __webpack_require__(22);\nlayoutBase.HashSet = __webpack_require__(23);\nlayoutBase.IGeometry = __webpack_require__(8);\nlayoutBase.IMath = __webpack_require__(9);\nlayoutBase.Integer = __webpack_require__(10);\nlayoutBase.Point = __webpack_require__(12);\nlayoutBase.PointD = __webpack_require__(5);\nlayoutBase.RandomSeed = __webpack_require__(16);\nlayoutBase.RectangleD = __webpack_require__(13);\nlayoutBase.Transform = __webpack_require__(17);\nlayoutBase.UniqueIDGeneretor = __webpack_require__(14);\nlayoutBase.Quicksort = __webpack_require__(25);\nlayoutBase.LinkedList = __webpack_require__(11);\nlayoutBase.LGraphObject = __webpack_require__(2);\nlayoutBase.LGraph = __webpack_require__(6);\nlayoutBase.LEdge = __webpack_require__(1);\nlayoutBase.LGraphManager = __webpack_require__(7);\nlayoutBase.LNode = __webpack_require__(3);\nlayoutBase.Layout = __webpack_require__(15);\nlayoutBase.LayoutConstants = __webpack_require__(0);\nlayoutBase.NeedlemanWunsch = __webpack_require__(27);\nlayoutBase.Matrix = __webpack_require__(24);\nlayoutBase.SVD = __webpack_require__(26);\n\nmodule.exports = layoutBase;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Emitter() {\n  this.listeners = [];\n}\n\nvar p = Emitter.prototype;\n\np.addListener = function (event, callback) {\n  this.listeners.push({\n    event: event,\n    callback: callback\n  });\n};\n\np.removeListener = function (event, callback) {\n  for (var i = this.listeners.length; i >= 0; i--) {\n    var l = this.listeners[i];\n\n    if (l.event === event && l.callback === callback) {\n      this.listeners.splice(i, 1);\n    }\n  }\n};\n\np.emit = function (event, data) {\n  for (var i = 0; i < this.listeners.length; i++) {\n    var l = this.listeners[i];\n\n    if (event === l.event) {\n      l.callback(data);\n    }\n  }\n};\n\nmodule.exports = Emitter;\n\n/***/ })\n/******/ ]);\n});","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"layout-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"layout-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"coseBase\"] = factory(require(\"layout-base\"));\n\telse\n\t\troot[\"coseBase\"] = factory(root[\"layoutBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__551__) {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 45:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar coseBase = {};\n\ncoseBase.layoutBase = __webpack_require__(551);\ncoseBase.CoSEConstants = __webpack_require__(806);\ncoseBase.CoSEEdge = __webpack_require__(767);\ncoseBase.CoSEGraph = __webpack_require__(880);\ncoseBase.CoSEGraphManager = __webpack_require__(578);\ncoseBase.CoSELayout = __webpack_require__(765);\ncoseBase.CoSENode = __webpack_require__(991);\ncoseBase.ConstraintHandler = __webpack_require__(902);\n\nmodule.exports = coseBase;\n\n/***/ }),\n\n/***/ 806:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar FDLayoutConstants = __webpack_require__(551).FDLayoutConstants;\n\nfunction CoSEConstants() {}\n\n//CoSEConstants inherits static props in FDLayoutConstants\nfor (var prop in FDLayoutConstants) {\n  CoSEConstants[prop] = FDLayoutConstants[prop];\n}\n\nCoSEConstants.DEFAULT_USE_MULTI_LEVEL_SCALING = false;\nCoSEConstants.DEFAULT_RADIAL_SEPARATION = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\nCoSEConstants.DEFAULT_COMPONENT_SEPERATION = 60;\nCoSEConstants.TILE = true;\nCoSEConstants.TILING_PADDING_VERTICAL = 10;\nCoSEConstants.TILING_PADDING_HORIZONTAL = 10;\nCoSEConstants.TRANSFORM_ON_CONSTRAINT_HANDLING = true;\nCoSEConstants.ENFORCE_CONSTRAINTS = true;\nCoSEConstants.APPLY_LAYOUT = true;\nCoSEConstants.RELAX_MOVEMENT_ON_CONSTRAINTS = true;\nCoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = true; // this should be set to false if there will be a constraint\n// This constant is for differentiating whether actual layout algorithm that uses cose-base wants to apply only incremental layout or \n// an incremental layout on top of a randomized layout. If it is only incremental layout, then this constant should be true.\nCoSEConstants.PURE_INCREMENTAL = CoSEConstants.DEFAULT_INCREMENTAL;\n\nmodule.exports = CoSEConstants;\n\n/***/ }),\n\n/***/ 767:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar FDLayoutEdge = __webpack_require__(551).FDLayoutEdge;\n\nfunction CoSEEdge(source, target, vEdge) {\n  FDLayoutEdge.call(this, source, target, vEdge);\n}\n\nCoSEEdge.prototype = Object.create(FDLayoutEdge.prototype);\nfor (var prop in FDLayoutEdge) {\n  CoSEEdge[prop] = FDLayoutEdge[prop];\n}\n\nmodule.exports = CoSEEdge;\n\n/***/ }),\n\n/***/ 880:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar LGraph = __webpack_require__(551).LGraph;\n\nfunction CoSEGraph(parent, graphMgr, vGraph) {\n  LGraph.call(this, parent, graphMgr, vGraph);\n}\n\nCoSEGraph.prototype = Object.create(LGraph.prototype);\nfor (var prop in LGraph) {\n  CoSEGraph[prop] = LGraph[prop];\n}\n\nmodule.exports = CoSEGraph;\n\n/***/ }),\n\n/***/ 578:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar LGraphManager = __webpack_require__(551).LGraphManager;\n\nfunction CoSEGraphManager(layout) {\n  LGraphManager.call(this, layout);\n}\n\nCoSEGraphManager.prototype = Object.create(LGraphManager.prototype);\nfor (var prop in LGraphManager) {\n  CoSEGraphManager[prop] = LGraphManager[prop];\n}\n\nmodule.exports = CoSEGraphManager;\n\n/***/ }),\n\n/***/ 765:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar FDLayout = __webpack_require__(551).FDLayout;\nvar CoSEGraphManager = __webpack_require__(578);\nvar CoSEGraph = __webpack_require__(880);\nvar CoSENode = __webpack_require__(991);\nvar CoSEEdge = __webpack_require__(767);\nvar CoSEConstants = __webpack_require__(806);\nvar ConstraintHandler = __webpack_require__(902);\nvar FDLayoutConstants = __webpack_require__(551).FDLayoutConstants;\nvar LayoutConstants = __webpack_require__(551).LayoutConstants;\nvar Point = __webpack_require__(551).Point;\nvar PointD = __webpack_require__(551).PointD;\nvar DimensionD = __webpack_require__(551).DimensionD;\nvar Layout = __webpack_require__(551).Layout;\nvar Integer = __webpack_require__(551).Integer;\nvar IGeometry = __webpack_require__(551).IGeometry;\nvar LGraph = __webpack_require__(551).LGraph;\nvar Transform = __webpack_require__(551).Transform;\nvar LinkedList = __webpack_require__(551).LinkedList;\n\nfunction CoSELayout() {\n  FDLayout.call(this);\n\n  this.toBeTiled = {}; // Memorize if a node is to be tiled or is tiled\n  this.constraints = {}; // keep layout constraints\n}\n\nCoSELayout.prototype = Object.create(FDLayout.prototype);\n\nfor (var prop in FDLayout) {\n  CoSELayout[prop] = FDLayout[prop];\n}\n\nCoSELayout.prototype.newGraphManager = function () {\n  var gm = new CoSEGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nCoSELayout.prototype.newGraph = function (vGraph) {\n  return new CoSEGraph(null, this.graphManager, vGraph);\n};\n\nCoSELayout.prototype.newNode = function (vNode) {\n  return new CoSENode(this.graphManager, vNode);\n};\n\nCoSELayout.prototype.newEdge = function (vEdge) {\n  return new CoSEEdge(null, null, vEdge);\n};\n\nCoSELayout.prototype.initParameters = function () {\n  FDLayout.prototype.initParameters.call(this, arguments);\n  if (!this.isSubLayout) {\n    if (CoSEConstants.DEFAULT_EDGE_LENGTH < 10) {\n      this.idealEdgeLength = 10;\n    } else {\n      this.idealEdgeLength = CoSEConstants.DEFAULT_EDGE_LENGTH;\n    }\n\n    this.useSmartIdealEdgeLengthCalculation = CoSEConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n    this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n    this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n    this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n    this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n\n    // variables for tree reduction support\n    this.prunedNodesAll = [];\n    this.growTreeIterations = 0;\n    this.afterGrowthIterations = 0;\n    this.isTreeGrowing = false;\n    this.isGrowthFinished = false;\n  }\n};\n\n// This method is used to set CoSE related parameters used by spring embedder.\nCoSELayout.prototype.initSpringEmbedder = function () {\n  FDLayout.prototype.initSpringEmbedder.call(this);\n\n  // variables for cooling\n  this.coolingCycle = 0;\n  this.maxCoolingCycle = this.maxIterations / FDLayoutConstants.CONVERGENCE_CHECK_PERIOD;\n  this.finalTemperature = 0.04;\n  this.coolingAdjuster = 1;\n};\n\nCoSELayout.prototype.layout = function () {\n  var createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  if (createBendsAsNeeded) {\n    this.createBendpoints();\n    this.graphManager.resetAllEdges();\n  }\n\n  this.level = 0;\n  return this.classicLayout();\n};\n\nCoSELayout.prototype.classicLayout = function () {\n  this.nodesWithGravity = this.calculateNodesToApplyGravitationTo();\n  this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity);\n  this.calcNoOfChildrenForAllNodes();\n  this.graphManager.calcLowestCommonAncestors();\n  this.graphManager.calcInclusionTreeDepths();\n  this.graphManager.getRoot().calcEstimatedSize();\n  this.calcIdealEdgeLengths();\n\n  if (!this.incremental) {\n    var forest = this.getFlatForest();\n\n    // The graph associated with this layout is flat and a forest\n    if (forest.length > 0) {\n      this.positionNodesRadially(forest);\n    }\n    // The graph associated with this layout is not flat or a forest\n    else {\n        // Reduce the trees when incremental mode is not enabled and graph is not a forest \n        this.reduceTrees();\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.positionNodesRandomly();\n      }\n  } else {\n    if (CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL) {\n      // Reduce the trees in incremental mode if only this constant is set to true \n      this.reduceTrees();\n      // Update nodes that gravity will be applied\n      this.graphManager.resetAllNodesToApplyGravitation();\n      var allNodes = new Set(this.getAllNodes());\n      var intersection = this.nodesWithGravity.filter(function (x) {\n        return allNodes.has(x);\n      });\n      this.graphManager.setAllNodesToApplyGravitation(intersection);\n    }\n  }\n\n  if (Object.keys(this.constraints).length > 0) {\n    ConstraintHandler.handleConstraints(this);\n    this.initConstraintVariables();\n  }\n\n  this.initSpringEmbedder();\n  if (CoSEConstants.APPLY_LAYOUT) {\n    this.runSpringEmbedder();\n  }\n\n  return true;\n};\n\nCoSELayout.prototype.tick = function () {\n  this.totalIterations++;\n\n  if (this.totalIterations === this.maxIterations && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.prunedNodesAll.length > 0) {\n      this.isTreeGrowing = true;\n    } else {\n      return true;\n    }\n  }\n\n  if (this.totalIterations % FDLayoutConstants.CONVERGENCE_CHECK_PERIOD == 0 && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.isConverged()) {\n      if (this.prunedNodesAll.length > 0) {\n        this.isTreeGrowing = true;\n      } else {\n        return true;\n      }\n    }\n\n    this.coolingCycle++;\n\n    if (this.layoutQuality == 0) {\n      // quality - \"draft\"\n      this.coolingAdjuster = this.coolingCycle;\n    } else if (this.layoutQuality == 1) {\n      // quality - \"default\"\n      this.coolingAdjuster = this.coolingCycle / 3;\n    }\n\n    // cooling schedule is based on http://www.btluke.com/simanf1.html -> cooling schedule 3\n    this.coolingFactor = Math.max(this.initialCoolingFactor - Math.pow(this.coolingCycle, Math.log(100 * (this.initialCoolingFactor - this.finalTemperature)) / Math.log(this.maxCoolingCycle)) / 100 * this.coolingAdjuster, this.finalTemperature);\n    this.animationPeriod = Math.ceil(this.initialAnimationPeriod * Math.sqrt(this.coolingFactor));\n  }\n  // Operations while tree is growing again \n  if (this.isTreeGrowing) {\n    if (this.growTreeIterations % 10 == 0) {\n      if (this.prunedNodesAll.length > 0) {\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.growTree(this.prunedNodesAll);\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        if (CoSEConstants.PURE_INCREMENTAL) this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL / 2;else this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n      } else {\n        this.isTreeGrowing = false;\n        this.isGrowthFinished = true;\n      }\n    }\n    this.growTreeIterations++;\n  }\n  // Operations after growth is finished\n  if (this.isGrowthFinished) {\n    if (this.isConverged()) {\n      return true;\n    }\n    if (this.afterGrowthIterations % 10 == 0) {\n      this.graphManager.updateBounds();\n      this.updateGrid();\n    }\n    if (CoSEConstants.PURE_INCREMENTAL) this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL / 2 * ((100 - this.afterGrowthIterations) / 100);else this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL * ((100 - this.afterGrowthIterations) / 100);\n    this.afterGrowthIterations++;\n  }\n\n  var gridUpdateAllowed = !this.isTreeGrowing && !this.isGrowthFinished;\n  var forceToNodeSurroundingUpdate = this.growTreeIterations % 10 == 1 && this.isTreeGrowing || this.afterGrowthIterations % 10 == 1 && this.isGrowthFinished;\n\n  this.totalDisplacement = 0;\n  this.graphManager.updateBounds();\n  this.calcSpringForces();\n  this.calcRepulsionForces(gridUpdateAllowed, forceToNodeSurroundingUpdate);\n  this.calcGravitationalForces();\n  this.moveNodes();\n  this.animate();\n\n  return false; // Layout is not ended yet return false\n};\n\nCoSELayout.prototype.getPositionsData = function () {\n  var allNodes = this.graphManager.getAllNodes();\n  var pData = {};\n  for (var i = 0; i < allNodes.length; i++) {\n    var rect = allNodes[i].rect;\n    var id = allNodes[i].id;\n    pData[id] = {\n      id: id,\n      x: rect.getCenterX(),\n      y: rect.getCenterY(),\n      w: rect.width,\n      h: rect.height\n    };\n  }\n\n  return pData;\n};\n\nCoSELayout.prototype.runSpringEmbedder = function () {\n  this.initialAnimationPeriod = 25;\n  this.animationPeriod = this.initialAnimationPeriod;\n  var layoutEnded = false;\n\n  // If aminate option is 'during' signal that layout is supposed to start iterating\n  if (FDLayoutConstants.ANIMATE === 'during') {\n    this.emit('layoutstarted');\n  } else {\n    // If aminate option is 'during' tick() function will be called on index.js\n    while (!layoutEnded) {\n      layoutEnded = this.tick();\n    }\n\n    this.graphManager.updateBounds();\n  }\n};\n\n// overrides moveNodes method in FDLayout\nCoSELayout.prototype.moveNodes = function () {\n  var lNodes = this.getAllNodes();\n  var node;\n\n  // calculate displacement for each node \n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    node.calculateDisplacement();\n  }\n\n  if (Object.keys(this.constraints).length > 0) {\n    this.updateDisplacements();\n  }\n\n  // move each node\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    node.move();\n  }\n};\n\n// constraint related methods: initConstraintVariables and updateDisplacements\n\n// initialize constraint related variables\nCoSELayout.prototype.initConstraintVariables = function () {\n  var self = this;\n  this.idToNodeMap = new Map();\n  this.fixedNodeSet = new Set();\n\n  var allNodes = this.graphManager.getAllNodes();\n\n  // fill idToNodeMap\n  for (var i = 0; i < allNodes.length; i++) {\n    var node = allNodes[i];\n    this.idToNodeMap.set(node.id, node);\n  }\n\n  // calculate fixed node weight for given compound node\n  var calculateCompoundWeight = function calculateCompoundWeight(compoundNode) {\n    var nodes = compoundNode.getChild().getNodes();\n    var node;\n    var fixedNodeWeight = 0;\n    for (var i = 0; i < nodes.length; i++) {\n      node = nodes[i];\n      if (node.getChild() == null) {\n        if (self.fixedNodeSet.has(node.id)) {\n          fixedNodeWeight += 100;\n        }\n      } else {\n        fixedNodeWeight += calculateCompoundWeight(node);\n      }\n    }\n    return fixedNodeWeight;\n  };\n\n  if (this.constraints.fixedNodeConstraint) {\n    // fill fixedNodeSet\n    this.constraints.fixedNodeConstraint.forEach(function (nodeData) {\n      self.fixedNodeSet.add(nodeData.nodeId);\n    });\n\n    // assign fixed node weights to compounds if they contain fixed nodes\n    var allNodes = this.graphManager.getAllNodes();\n    var node;\n\n    for (var i = 0; i < allNodes.length; i++) {\n      node = allNodes[i];\n      if (node.getChild() != null) {\n        var fixedNodeWeight = calculateCompoundWeight(node);\n        if (fixedNodeWeight > 0) {\n          node.fixedNodeWeight = fixedNodeWeight;\n        }\n      }\n    }\n  }\n\n  if (this.constraints.relativePlacementConstraint) {\n    var nodeToDummyForVerticalAlignment = new Map();\n    var nodeToDummyForHorizontalAlignment = new Map();\n    this.dummyToNodeForVerticalAlignment = new Map();\n    this.dummyToNodeForHorizontalAlignment = new Map();\n    this.fixedNodesOnHorizontal = new Set();\n    this.fixedNodesOnVertical = new Set();\n\n    // fill maps and sets\n    this.fixedNodeSet.forEach(function (nodeId) {\n      self.fixedNodesOnHorizontal.add(nodeId);\n      self.fixedNodesOnVertical.add(nodeId);\n    });\n\n    if (this.constraints.alignmentConstraint) {\n      if (this.constraints.alignmentConstraint.vertical) {\n        var verticalAlignment = this.constraints.alignmentConstraint.vertical;\n        for (var i = 0; i < verticalAlignment.length; i++) {\n          this.dummyToNodeForVerticalAlignment.set(\"dummy\" + i, []);\n          verticalAlignment[i].forEach(function (nodeId) {\n            nodeToDummyForVerticalAlignment.set(nodeId, \"dummy\" + i);\n            self.dummyToNodeForVerticalAlignment.get(\"dummy\" + i).push(nodeId);\n            if (self.fixedNodeSet.has(nodeId)) {\n              self.fixedNodesOnHorizontal.add(\"dummy\" + i);\n            }\n          });\n        }\n      }\n      if (this.constraints.alignmentConstraint.horizontal) {\n        var horizontalAlignment = this.constraints.alignmentConstraint.horizontal;\n        for (var i = 0; i < horizontalAlignment.length; i++) {\n          this.dummyToNodeForHorizontalAlignment.set(\"dummy\" + i, []);\n          horizontalAlignment[i].forEach(function (nodeId) {\n            nodeToDummyForHorizontalAlignment.set(nodeId, \"dummy\" + i);\n            self.dummyToNodeForHorizontalAlignment.get(\"dummy\" + i).push(nodeId);\n            if (self.fixedNodeSet.has(nodeId)) {\n              self.fixedNodesOnVertical.add(\"dummy\" + i);\n            }\n          });\n        }\n      }\n    }\n\n    if (CoSEConstants.RELAX_MOVEMENT_ON_CONSTRAINTS) {\n\n      this.shuffle = function (array) {\n        var j, x, i;\n        for (i = array.length - 1; i >= 2 * array.length / 3; i--) {\n          j = Math.floor(Math.random() * (i + 1));\n          x = array[i];\n          array[i] = array[j];\n          array[j] = x;\n        }\n        return array;\n      };\n\n      this.nodesInRelativeHorizontal = [];\n      this.nodesInRelativeVertical = [];\n      this.nodeToRelativeConstraintMapHorizontal = new Map();\n      this.nodeToRelativeConstraintMapVertical = new Map();\n      this.nodeToTempPositionMapHorizontal = new Map();\n      this.nodeToTempPositionMapVertical = new Map();\n\n      // fill arrays and maps\n      this.constraints.relativePlacementConstraint.forEach(function (constraint) {\n        if (constraint.left) {\n          var nodeIdLeft = nodeToDummyForVerticalAlignment.has(constraint.left) ? nodeToDummyForVerticalAlignment.get(constraint.left) : constraint.left;\n          var nodeIdRight = nodeToDummyForVerticalAlignment.has(constraint.right) ? nodeToDummyForVerticalAlignment.get(constraint.right) : constraint.right;\n\n          if (!self.nodesInRelativeHorizontal.includes(nodeIdLeft)) {\n            self.nodesInRelativeHorizontal.push(nodeIdLeft);\n            self.nodeToRelativeConstraintMapHorizontal.set(nodeIdLeft, []);\n            if (self.dummyToNodeForVerticalAlignment.has(nodeIdLeft)) {\n              self.nodeToTempPositionMapHorizontal.set(nodeIdLeft, self.idToNodeMap.get(self.dummyToNodeForVerticalAlignment.get(nodeIdLeft)[0]).getCenterX());\n            } else {\n              self.nodeToTempPositionMapHorizontal.set(nodeIdLeft, self.idToNodeMap.get(nodeIdLeft).getCenterX());\n            }\n          }\n          if (!self.nodesInRelativeHorizontal.includes(nodeIdRight)) {\n            self.nodesInRelativeHorizontal.push(nodeIdRight);\n            self.nodeToRelativeConstraintMapHorizontal.set(nodeIdRight, []);\n            if (self.dummyToNodeForVerticalAlignment.has(nodeIdRight)) {\n              self.nodeToTempPositionMapHorizontal.set(nodeIdRight, self.idToNodeMap.get(self.dummyToNodeForVerticalAlignment.get(nodeIdRight)[0]).getCenterX());\n            } else {\n              self.nodeToTempPositionMapHorizontal.set(nodeIdRight, self.idToNodeMap.get(nodeIdRight).getCenterX());\n            }\n          }\n\n          self.nodeToRelativeConstraintMapHorizontal.get(nodeIdLeft).push({ right: nodeIdRight, gap: constraint.gap });\n          self.nodeToRelativeConstraintMapHorizontal.get(nodeIdRight).push({ left: nodeIdLeft, gap: constraint.gap });\n        } else {\n          var nodeIdTop = nodeToDummyForHorizontalAlignment.has(constraint.top) ? nodeToDummyForHorizontalAlignment.get(constraint.top) : constraint.top;\n          var nodeIdBottom = nodeToDummyForHorizontalAlignment.has(constraint.bottom) ? nodeToDummyForHorizontalAlignment.get(constraint.bottom) : constraint.bottom;\n\n          if (!self.nodesInRelativeVertical.includes(nodeIdTop)) {\n            self.nodesInRelativeVertical.push(nodeIdTop);\n            self.nodeToRelativeConstraintMapVertical.set(nodeIdTop, []);\n            if (self.dummyToNodeForHorizontalAlignment.has(nodeIdTop)) {\n              self.nodeToTempPositionMapVertical.set(nodeIdTop, self.idToNodeMap.get(self.dummyToNodeForHorizontalAlignment.get(nodeIdTop)[0]).getCenterY());\n            } else {\n              self.nodeToTempPositionMapVertical.set(nodeIdTop, self.idToNodeMap.get(nodeIdTop).getCenterY());\n            }\n          }\n          if (!self.nodesInRelativeVertical.includes(nodeIdBottom)) {\n            self.nodesInRelativeVertical.push(nodeIdBottom);\n            self.nodeToRelativeConstraintMapVertical.set(nodeIdBottom, []);\n            if (self.dummyToNodeForHorizontalAlignment.has(nodeIdBottom)) {\n              self.nodeToTempPositionMapVertical.set(nodeIdBottom, self.idToNodeMap.get(self.dummyToNodeForHorizontalAlignment.get(nodeIdBottom)[0]).getCenterY());\n            } else {\n              self.nodeToTempPositionMapVertical.set(nodeIdBottom, self.idToNodeMap.get(nodeIdBottom).getCenterY());\n            }\n          }\n          self.nodeToRelativeConstraintMapVertical.get(nodeIdTop).push({ bottom: nodeIdBottom, gap: constraint.gap });\n          self.nodeToRelativeConstraintMapVertical.get(nodeIdBottom).push({ top: nodeIdTop, gap: constraint.gap });\n        }\n      });\n    } else {\n      var subGraphOnHorizontal = new Map(); // subgraph from vertical RP constraints\n      var subGraphOnVertical = new Map(); // subgraph from vertical RP constraints\n\n      // construct subgraphs from relative placement constraints \n      this.constraints.relativePlacementConstraint.forEach(function (constraint) {\n        if (constraint.left) {\n          var left = nodeToDummyForVerticalAlignment.has(constraint.left) ? nodeToDummyForVerticalAlignment.get(constraint.left) : constraint.left;\n          var right = nodeToDummyForVerticalAlignment.has(constraint.right) ? nodeToDummyForVerticalAlignment.get(constraint.right) : constraint.right;\n          if (subGraphOnHorizontal.has(left)) {\n            subGraphOnHorizontal.get(left).push(right);\n          } else {\n            subGraphOnHorizontal.set(left, [right]);\n          }\n          if (subGraphOnHorizontal.has(right)) {\n            subGraphOnHorizontal.get(right).push(left);\n          } else {\n            subGraphOnHorizontal.set(right, [left]);\n          }\n        } else {\n          var top = nodeToDummyForHorizontalAlignment.has(constraint.top) ? nodeToDummyForHorizontalAlignment.get(constraint.top) : constraint.top;\n          var bottom = nodeToDummyForHorizontalAlignment.has(constraint.bottom) ? nodeToDummyForHorizontalAlignment.get(constraint.bottom) : constraint.bottom;\n          if (subGraphOnVertical.has(top)) {\n            subGraphOnVertical.get(top).push(bottom);\n          } else {\n            subGraphOnVertical.set(top, [bottom]);\n          }\n          if (subGraphOnVertical.has(bottom)) {\n            subGraphOnVertical.get(bottom).push(top);\n          } else {\n            subGraphOnVertical.set(bottom, [top]);\n          }\n        }\n      });\n\n      // function to construct components from a given graph \n      // also returns an array that keeps whether each component contains fixed node\n      var constructComponents = function constructComponents(graph, fixedNodes) {\n        var components = [];\n        var isFixed = [];\n        var queue = new LinkedList();\n        var visited = new Set();\n        var count = 0;\n\n        graph.forEach(function (value, key) {\n          if (!visited.has(key)) {\n            components[count] = [];\n            isFixed[count] = false;\n            var currentNode = key;\n            queue.push(currentNode);\n            visited.add(currentNode);\n            components[count].push(currentNode);\n\n            while (queue.length != 0) {\n              currentNode = queue.shift();\n              if (fixedNodes.has(currentNode)) {\n                isFixed[count] = true;\n              }\n              var neighbors = graph.get(currentNode);\n              neighbors.forEach(function (neighbor) {\n                if (!visited.has(neighbor)) {\n                  queue.push(neighbor);\n                  visited.add(neighbor);\n                  components[count].push(neighbor);\n                }\n              });\n            }\n            count++;\n          }\n        });\n\n        return { components: components, isFixed: isFixed };\n      };\n\n      var resultOnHorizontal = constructComponents(subGraphOnHorizontal, self.fixedNodesOnHorizontal);\n      this.componentsOnHorizontal = resultOnHorizontal.components;\n      this.fixedComponentsOnHorizontal = resultOnHorizontal.isFixed;\n      var resultOnVertical = constructComponents(subGraphOnVertical, self.fixedNodesOnVertical);\n      this.componentsOnVertical = resultOnVertical.components;\n      this.fixedComponentsOnVertical = resultOnVertical.isFixed;\n    }\n  }\n};\n\n// updates node displacements based on constraints\nCoSELayout.prototype.updateDisplacements = function () {\n  var self = this;\n  if (this.constraints.fixedNodeConstraint) {\n    this.constraints.fixedNodeConstraint.forEach(function (nodeData) {\n      var fixedNode = self.idToNodeMap.get(nodeData.nodeId);\n      fixedNode.displacementX = 0;\n      fixedNode.displacementY = 0;\n    });\n  }\n\n  if (this.constraints.alignmentConstraint) {\n    if (this.constraints.alignmentConstraint.vertical) {\n      var allVerticalAlignments = this.constraints.alignmentConstraint.vertical;\n      for (var i = 0; i < allVerticalAlignments.length; i++) {\n        var totalDisplacementX = 0;\n        for (var j = 0; j < allVerticalAlignments[i].length; j++) {\n          if (this.fixedNodeSet.has(allVerticalAlignments[i][j])) {\n            totalDisplacementX = 0;\n            break;\n          }\n          totalDisplacementX += this.idToNodeMap.get(allVerticalAlignments[i][j]).displacementX;\n        }\n        var averageDisplacementX = totalDisplacementX / allVerticalAlignments[i].length;\n        for (var j = 0; j < allVerticalAlignments[i].length; j++) {\n          this.idToNodeMap.get(allVerticalAlignments[i][j]).displacementX = averageDisplacementX;\n        }\n      }\n    }\n    if (this.constraints.alignmentConstraint.horizontal) {\n      var allHorizontalAlignments = this.constraints.alignmentConstraint.horizontal;\n      for (var i = 0; i < allHorizontalAlignments.length; i++) {\n        var totalDisplacementY = 0;\n        for (var j = 0; j < allHorizontalAlignments[i].length; j++) {\n          if (this.fixedNodeSet.has(allHorizontalAlignments[i][j])) {\n            totalDisplacementY = 0;\n            break;\n          }\n          totalDisplacementY += this.idToNodeMap.get(allHorizontalAlignments[i][j]).displacementY;\n        }\n        var averageDisplacementY = totalDisplacementY / allHorizontalAlignments[i].length;\n        for (var j = 0; j < allHorizontalAlignments[i].length; j++) {\n          this.idToNodeMap.get(allHorizontalAlignments[i][j]).displacementY = averageDisplacementY;\n        }\n      }\n    }\n  }\n\n  if (this.constraints.relativePlacementConstraint) {\n\n    if (CoSEConstants.RELAX_MOVEMENT_ON_CONSTRAINTS) {\n      // shuffle array to randomize node processing order\n      if (this.totalIterations % 10 == 0) {\n        this.shuffle(this.nodesInRelativeHorizontal);\n        this.shuffle(this.nodesInRelativeVertical);\n      }\n\n      this.nodesInRelativeHorizontal.forEach(function (nodeId) {\n        if (!self.fixedNodesOnHorizontal.has(nodeId)) {\n          var displacement = 0;\n          if (self.dummyToNodeForVerticalAlignment.has(nodeId)) {\n            displacement = self.idToNodeMap.get(self.dummyToNodeForVerticalAlignment.get(nodeId)[0]).displacementX;\n          } else {\n            displacement = self.idToNodeMap.get(nodeId).displacementX;\n          }\n          self.nodeToRelativeConstraintMapHorizontal.get(nodeId).forEach(function (constraint) {\n            if (constraint.right) {\n              var diff = self.nodeToTempPositionMapHorizontal.get(constraint.right) - self.nodeToTempPositionMapHorizontal.get(nodeId) - displacement;\n              if (diff < constraint.gap) {\n                displacement -= constraint.gap - diff;\n              }\n            } else {\n              var diff = self.nodeToTempPositionMapHorizontal.get(nodeId) - self.nodeToTempPositionMapHorizontal.get(constraint.left) + displacement;\n              if (diff < constraint.gap) {\n                displacement += constraint.gap - diff;\n              }\n            }\n          });\n          self.nodeToTempPositionMapHorizontal.set(nodeId, self.nodeToTempPositionMapHorizontal.get(nodeId) + displacement);\n          if (self.dummyToNodeForVerticalAlignment.has(nodeId)) {\n            self.dummyToNodeForVerticalAlignment.get(nodeId).forEach(function (nodeId) {\n              self.idToNodeMap.get(nodeId).displacementX = displacement;\n            });\n          } else {\n            self.idToNodeMap.get(nodeId).displacementX = displacement;\n          }\n        }\n      });\n\n      this.nodesInRelativeVertical.forEach(function (nodeId) {\n        if (!self.fixedNodesOnHorizontal.has(nodeId)) {\n          var displacement = 0;\n          if (self.dummyToNodeForHorizontalAlignment.has(nodeId)) {\n            displacement = self.idToNodeMap.get(self.dummyToNodeForHorizontalAlignment.get(nodeId)[0]).displacementY;\n          } else {\n            displacement = self.idToNodeMap.get(nodeId).displacementY;\n          }\n          self.nodeToRelativeConstraintMapVertical.get(nodeId).forEach(function (constraint) {\n            if (constraint.bottom) {\n              var diff = self.nodeToTempPositionMapVertical.get(constraint.bottom) - self.nodeToTempPositionMapVertical.get(nodeId) - displacement;\n              if (diff < constraint.gap) {\n                displacement -= constraint.gap - diff;\n              }\n            } else {\n              var diff = self.nodeToTempPositionMapVertical.get(nodeId) - self.nodeToTempPositionMapVertical.get(constraint.top) + displacement;\n              if (diff < constraint.gap) {\n                displacement += constraint.gap - diff;\n              }\n            }\n          });\n          self.nodeToTempPositionMapVertical.set(nodeId, self.nodeToTempPositionMapVertical.get(nodeId) + displacement);\n          if (self.dummyToNodeForHorizontalAlignment.has(nodeId)) {\n            self.dummyToNodeForHorizontalAlignment.get(nodeId).forEach(function (nodeId) {\n              self.idToNodeMap.get(nodeId).displacementY = displacement;\n            });\n          } else {\n            self.idToNodeMap.get(nodeId).displacementY = displacement;\n          }\n        }\n      });\n    } else {\n      for (var i = 0; i < this.componentsOnHorizontal.length; i++) {\n        var component = this.componentsOnHorizontal[i];\n        if (this.fixedComponentsOnHorizontal[i]) {\n          for (var j = 0; j < component.length; j++) {\n            if (this.dummyToNodeForVerticalAlignment.has(component[j])) {\n              this.dummyToNodeForVerticalAlignment.get(component[j]).forEach(function (nodeId) {\n                self.idToNodeMap.get(nodeId).displacementX = 0;\n              });\n            } else {\n              this.idToNodeMap.get(component[j]).displacementX = 0;\n            }\n          }\n        } else {\n          var sum = 0;\n          var count = 0;\n          for (var j = 0; j < component.length; j++) {\n            if (this.dummyToNodeForVerticalAlignment.has(component[j])) {\n              var actualNodes = this.dummyToNodeForVerticalAlignment.get(component[j]);\n              sum += actualNodes.length * this.idToNodeMap.get(actualNodes[0]).displacementX;\n              count += actualNodes.length;\n            } else {\n              sum += this.idToNodeMap.get(component[j]).displacementX;\n              count++;\n            }\n          }\n          var averageDisplacement = sum / count;\n          for (var j = 0; j < component.length; j++) {\n            if (this.dummyToNodeForVerticalAlignment.has(component[j])) {\n              this.dummyToNodeForVerticalAlignment.get(component[j]).forEach(function (nodeId) {\n                self.idToNodeMap.get(nodeId).displacementX = averageDisplacement;\n              });\n            } else {\n              this.idToNodeMap.get(component[j]).displacementX = averageDisplacement;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < this.componentsOnVertical.length; i++) {\n        var component = this.componentsOnVertical[i];\n        if (this.fixedComponentsOnVertical[i]) {\n          for (var j = 0; j < component.length; j++) {\n            if (this.dummyToNodeForHorizontalAlignment.has(component[j])) {\n              this.dummyToNodeForHorizontalAlignment.get(component[j]).forEach(function (nodeId) {\n                self.idToNodeMap.get(nodeId).displacementY = 0;\n              });\n            } else {\n              this.idToNodeMap.get(component[j]).displacementY = 0;\n            }\n          }\n        } else {\n          var sum = 0;\n          var count = 0;\n          for (var j = 0; j < component.length; j++) {\n            if (this.dummyToNodeForHorizontalAlignment.has(component[j])) {\n              var actualNodes = this.dummyToNodeForHorizontalAlignment.get(component[j]);\n              sum += actualNodes.length * this.idToNodeMap.get(actualNodes[0]).displacementY;\n              count += actualNodes.length;\n            } else {\n              sum += this.idToNodeMap.get(component[j]).displacementY;\n              count++;\n            }\n          }\n          var averageDisplacement = sum / count;\n          for (var j = 0; j < component.length; j++) {\n            if (this.dummyToNodeForHorizontalAlignment.has(component[j])) {\n              this.dummyToNodeForHorizontalAlignment.get(component[j]).forEach(function (nodeId) {\n                self.idToNodeMap.get(nodeId).displacementY = averageDisplacement;\n              });\n            } else {\n              this.idToNodeMap.get(component[j]).displacementY = averageDisplacement;\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nCoSELayout.prototype.calculateNodesToApplyGravitationTo = function () {\n  var nodeList = [];\n  var graph;\n\n  var graphs = this.graphManager.getGraphs();\n  var size = graphs.length;\n  var i;\n  for (i = 0; i < size; i++) {\n    graph = graphs[i];\n\n    graph.updateConnected();\n\n    if (!graph.isConnected) {\n      nodeList = nodeList.concat(graph.getNodes());\n    }\n  }\n\n  return nodeList;\n};\n\nCoSELayout.prototype.createBendpoints = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  var visited = new Set();\n  var i;\n  for (i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n\n    if (!visited.has(edge)) {\n      var source = edge.getSource();\n      var target = edge.getTarget();\n\n      if (source == target) {\n        edge.getBendpoints().push(new PointD());\n        edge.getBendpoints().push(new PointD());\n        this.createDummyNodesForBendpoints(edge);\n        visited.add(edge);\n      } else {\n        var edgeList = [];\n\n        edgeList = edgeList.concat(source.getEdgeListToNode(target));\n        edgeList = edgeList.concat(target.getEdgeListToNode(source));\n\n        if (!visited.has(edgeList[0])) {\n          if (edgeList.length > 1) {\n            var k;\n            for (k = 0; k < edgeList.length; k++) {\n              var multiEdge = edgeList[k];\n              multiEdge.getBendpoints().push(new PointD());\n              this.createDummyNodesForBendpoints(multiEdge);\n            }\n          }\n          edgeList.forEach(function (edge) {\n            visited.add(edge);\n          });\n        }\n      }\n    }\n\n    if (visited.size == edges.length) {\n      break;\n    }\n  }\n};\n\nCoSELayout.prototype.positionNodesRadially = function (forest) {\n  // We tile the trees to a grid row by row; first tree starts at (0,0)\n  var currentStartingPoint = new Point(0, 0);\n  var numberOfColumns = Math.ceil(Math.sqrt(forest.length));\n  var height = 0;\n  var currentY = 0;\n  var currentX = 0;\n  var point = new PointD(0, 0);\n\n  for (var i = 0; i < forest.length; i++) {\n    if (i % numberOfColumns == 0) {\n      // Start of a new row, make the x coordinate 0, increment the\n      // y coordinate with the max height of the previous row\n      currentX = 0;\n      currentY = height;\n\n      if (i != 0) {\n        currentY += CoSEConstants.DEFAULT_COMPONENT_SEPERATION;\n      }\n\n      height = 0;\n    }\n\n    var tree = forest[i];\n\n    // Find the center of the tree\n    var centerNode = Layout.findCenterOfTree(tree);\n\n    // Set the staring point of the next tree\n    currentStartingPoint.x = currentX;\n    currentStartingPoint.y = currentY;\n\n    // Do a radial layout starting with the center\n    point = CoSELayout.radialLayout(tree, centerNode, currentStartingPoint);\n\n    if (point.y > height) {\n      height = Math.floor(point.y);\n    }\n\n    currentX = Math.floor(point.x + CoSEConstants.DEFAULT_COMPONENT_SEPERATION);\n  }\n\n  this.transform(new PointD(LayoutConstants.WORLD_CENTER_X - point.x / 2, LayoutConstants.WORLD_CENTER_Y - point.y / 2));\n};\n\nCoSELayout.radialLayout = function (tree, centerNode, startingPoint) {\n  var radialSep = Math.max(this.maxDiagonalInTree(tree), CoSEConstants.DEFAULT_RADIAL_SEPARATION);\n  CoSELayout.branchRadialLayout(centerNode, null, 0, 359, 0, radialSep);\n  var bounds = LGraph.calculateBounds(tree);\n\n  var transform = new Transform();\n  transform.setDeviceOrgX(bounds.getMinX());\n  transform.setDeviceOrgY(bounds.getMinY());\n  transform.setWorldOrgX(startingPoint.x);\n  transform.setWorldOrgY(startingPoint.y);\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    node.transform(transform);\n  }\n\n  var bottomRight = new PointD(bounds.getMaxX(), bounds.getMaxY());\n\n  return transform.inverseTransformPoint(bottomRight);\n};\n\nCoSELayout.branchRadialLayout = function (node, parentOfNode, startAngle, endAngle, distance, radialSeparation) {\n  // First, position this node by finding its angle.\n  var halfInterval = (endAngle - startAngle + 1) / 2;\n\n  if (halfInterval < 0) {\n    halfInterval += 180;\n  }\n\n  var nodeAngle = (halfInterval + startAngle) % 360;\n  var teta = nodeAngle * IGeometry.TWO_PI / 360;\n\n  // Make polar to java cordinate conversion.\n  var cos_teta = Math.cos(teta);\n  var x_ = distance * Math.cos(teta);\n  var y_ = distance * Math.sin(teta);\n\n  node.setCenter(x_, y_);\n\n  // Traverse all neighbors of this node and recursively call this\n  // function.\n  var neighborEdges = [];\n  neighborEdges = neighborEdges.concat(node.getEdges());\n  var childCount = neighborEdges.length;\n\n  if (parentOfNode != null) {\n    childCount--;\n  }\n\n  var branchCount = 0;\n\n  var incEdgesCount = neighborEdges.length;\n  var startIndex;\n\n  var edges = node.getEdgesBetween(parentOfNode);\n\n  // If there are multiple edges, prune them until there remains only one\n  // edge.\n  while (edges.length > 1) {\n    //neighborEdges.remove(edges.remove(0));\n    var temp = edges[0];\n    edges.splice(0, 1);\n    var index = neighborEdges.indexOf(temp);\n    if (index >= 0) {\n      neighborEdges.splice(index, 1);\n    }\n    incEdgesCount--;\n    childCount--;\n  }\n\n  if (parentOfNode != null) {\n    //assert edges.length == 1;\n    startIndex = (neighborEdges.indexOf(edges[0]) + 1) % incEdgesCount;\n  } else {\n    startIndex = 0;\n  }\n\n  var stepAngle = Math.abs(endAngle - startAngle) / childCount;\n\n  for (var i = startIndex; branchCount != childCount; i = ++i % incEdgesCount) {\n    var currentNeighbor = neighborEdges[i].getOtherEnd(node);\n\n    // Don't back traverse to root node in current tree.\n    if (currentNeighbor == parentOfNode) {\n      continue;\n    }\n\n    var childStartAngle = (startAngle + branchCount * stepAngle) % 360;\n    var childEndAngle = (childStartAngle + stepAngle) % 360;\n\n    CoSELayout.branchRadialLayout(currentNeighbor, node, childStartAngle, childEndAngle, distance + radialSeparation, radialSeparation);\n\n    branchCount++;\n  }\n};\n\nCoSELayout.maxDiagonalInTree = function (tree) {\n  var maxDiagonal = Integer.MIN_VALUE;\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    var diagonal = node.getDiagonal();\n\n    if (diagonal > maxDiagonal) {\n      maxDiagonal = diagonal;\n    }\n  }\n\n  return maxDiagonal;\n};\n\nCoSELayout.prototype.calcRepulsionRange = function () {\n  // formula is 2 x (level + 1) x idealEdgeLength\n  return 2 * (this.level + 1) * this.idealEdgeLength;\n};\n\n// Tiling methods\n\n// Group zero degree members whose parents are not to be tiled, create dummy parents where needed and fill memberGroups by their dummp parent id's\nCoSELayout.prototype.groupZeroDegreeMembers = function () {\n  var self = this;\n  // array of [parent_id x oneDegreeNode_id]\n  var tempMemberGroups = {}; // A temporary map of parent node and its zero degree members\n  this.memberGroups = {}; // A map of dummy parent node and its zero degree members whose parents are not to be tiled\n  this.idToDummyNode = {}; // A map of id to dummy node \n\n  var zeroDegree = []; // List of zero degree nodes whose parents are not to be tiled\n  var allNodes = this.graphManager.getAllNodes();\n\n  // Fill zero degree list\n  for (var i = 0; i < allNodes.length; i++) {\n    var node = allNodes[i];\n    var parent = node.getParent();\n    // If a node has zero degree and its parent is not to be tiled if exists add that node to zeroDegres list\n    if (this.getNodeDegreeWithChildren(node) === 0 && (parent.id == undefined || !this.getToBeTiled(parent))) {\n      zeroDegree.push(node);\n    }\n  }\n\n  // Create a map of parent node and its zero degree members\n  for (var i = 0; i < zeroDegree.length; i++) {\n    var node = zeroDegree[i]; // Zero degree node itself\n    var p_id = node.getParent().id; // Parent id\n\n    if (typeof tempMemberGroups[p_id] === \"undefined\") tempMemberGroups[p_id] = [];\n\n    tempMemberGroups[p_id] = tempMemberGroups[p_id].concat(node); // Push node to the list belongs to its parent in tempMemberGroups\n  }\n\n  // If there are at least two nodes at a level, create a dummy compound for them\n  Object.keys(tempMemberGroups).forEach(function (p_id) {\n    if (tempMemberGroups[p_id].length > 1) {\n      var dummyCompoundId = \"DummyCompound_\" + p_id; // The id of dummy compound which will be created soon\n      self.memberGroups[dummyCompoundId] = tempMemberGroups[p_id]; // Add dummy compound to memberGroups\n\n      var parent = tempMemberGroups[p_id][0].getParent(); // The parent of zero degree nodes will be the parent of new dummy compound\n\n      // Create a dummy compound with calculated id\n      var dummyCompound = new CoSENode(self.graphManager);\n      dummyCompound.id = dummyCompoundId;\n      dummyCompound.paddingLeft = parent.paddingLeft || 0;\n      dummyCompound.paddingRight = parent.paddingRight || 0;\n      dummyCompound.paddingBottom = parent.paddingBottom || 0;\n      dummyCompound.paddingTop = parent.paddingTop || 0;\n\n      self.idToDummyNode[dummyCompoundId] = dummyCompound;\n\n      var dummyParentGraph = self.getGraphManager().add(self.newGraph(), dummyCompound);\n      var parentGraph = parent.getChild();\n\n      // Add dummy compound to parent the graph\n      parentGraph.add(dummyCompound);\n\n      // For each zero degree node in this level remove it from its parent graph and add it to the graph of dummy parent\n      for (var i = 0; i < tempMemberGroups[p_id].length; i++) {\n        var node = tempMemberGroups[p_id][i];\n\n        parentGraph.remove(node);\n        dummyParentGraph.add(node);\n      }\n    }\n  });\n};\n\nCoSELayout.prototype.clearCompounds = function () {\n  var childGraphMap = {};\n  var idToNode = {};\n\n  // Get compound ordering by finding the inner one first\n  this.performDFSOnCompounds();\n\n  for (var i = 0; i < this.compoundOrder.length; i++) {\n\n    idToNode[this.compoundOrder[i].id] = this.compoundOrder[i];\n    childGraphMap[this.compoundOrder[i].id] = [].concat(this.compoundOrder[i].getChild().getNodes());\n\n    // Remove children of compounds\n    this.graphManager.remove(this.compoundOrder[i].getChild());\n    this.compoundOrder[i].child = null;\n  }\n\n  this.graphManager.resetAllNodes();\n\n  // Tile the removed children\n  this.tileCompoundMembers(childGraphMap, idToNode);\n};\n\nCoSELayout.prototype.clearZeroDegreeMembers = function () {\n  var self = this;\n  var tiledZeroDegreePack = this.tiledZeroDegreePack = [];\n\n  Object.keys(this.memberGroups).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound\n\n    tiledZeroDegreePack[id] = self.tileNodes(self.memberGroups[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    // Set the width and height of the dummy compound as calculated\n    compoundNode.rect.width = tiledZeroDegreePack[id].width;\n    compoundNode.rect.height = tiledZeroDegreePack[id].height;\n    compoundNode.setCenter(tiledZeroDegreePack[id].centerX, tiledZeroDegreePack[id].centerY);\n\n    // compound left and top margings for labels\n    // when node labels are included, these values may be set to different values below and are used in tilingPostLayout,\n    // otherwise they stay as zero\n    compoundNode.labelMarginLeft = 0;\n    compoundNode.labelMarginTop = 0;\n\n    // Update compound bounds considering its label properties and set label margins for left and top\n    if (CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n\n      var width = compoundNode.rect.width;\n      var height = compoundNode.rect.height;\n\n      if (compoundNode.labelWidth) {\n        if (compoundNode.labelPosHorizontal == \"left\") {\n          compoundNode.rect.x -= compoundNode.labelWidth;\n          compoundNode.setWidth(width + compoundNode.labelWidth);\n          compoundNode.labelMarginLeft = compoundNode.labelWidth;\n        } else if (compoundNode.labelPosHorizontal == \"center\" && compoundNode.labelWidth > width) {\n          compoundNode.rect.x -= (compoundNode.labelWidth - width) / 2;\n          compoundNode.setWidth(compoundNode.labelWidth);\n          compoundNode.labelMarginLeft = (compoundNode.labelWidth - width) / 2;\n        } else if (compoundNode.labelPosHorizontal == \"right\") {\n          compoundNode.setWidth(width + compoundNode.labelWidth);\n        }\n      }\n\n      if (compoundNode.labelHeight) {\n        if (compoundNode.labelPosVertical == \"top\") {\n          compoundNode.rect.y -= compoundNode.labelHeight;\n          compoundNode.setHeight(height + compoundNode.labelHeight);\n          compoundNode.labelMarginTop = compoundNode.labelHeight;\n        } else if (compoundNode.labelPosVertical == \"center\" && compoundNode.labelHeight > height) {\n          compoundNode.rect.y -= (compoundNode.labelHeight - height) / 2;\n          compoundNode.setHeight(compoundNode.labelHeight);\n          compoundNode.labelMarginTop = (compoundNode.labelHeight - height) / 2;\n        } else if (compoundNode.labelPosVertical == \"bottom\") {\n          compoundNode.setHeight(height + compoundNode.labelHeight);\n        }\n      }\n    }\n  });\n};\n\nCoSELayout.prototype.repopulateCompounds = function () {\n  for (var i = this.compoundOrder.length - 1; i >= 0; i--) {\n    var lCompoundNode = this.compoundOrder[i];\n    var id = lCompoundNode.id;\n    var horizontalMargin = lCompoundNode.paddingLeft;\n    var verticalMargin = lCompoundNode.paddingTop;\n    var labelMarginLeft = lCompoundNode.labelMarginLeft;\n    var labelMarginTop = lCompoundNode.labelMarginTop;\n\n    this.adjustLocations(this.tiledMemberPack[id], lCompoundNode.rect.x, lCompoundNode.rect.y, horizontalMargin, verticalMargin, labelMarginLeft, labelMarginTop);\n  }\n};\n\nCoSELayout.prototype.repopulateZeroDegreeMembers = function () {\n  var self = this;\n  var tiledPack = this.tiledZeroDegreePack;\n\n  Object.keys(tiledPack).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound by its id\n    var horizontalMargin = compoundNode.paddingLeft;\n    var verticalMargin = compoundNode.paddingTop;\n    var labelMarginLeft = compoundNode.labelMarginLeft;\n    var labelMarginTop = compoundNode.labelMarginTop;\n\n    // Adjust the positions of nodes wrt its compound\n    self.adjustLocations(tiledPack[id], compoundNode.rect.x, compoundNode.rect.y, horizontalMargin, verticalMargin, labelMarginLeft, labelMarginTop);\n  });\n};\n\nCoSELayout.prototype.getToBeTiled = function (node) {\n  var id = node.id;\n  //firstly check the previous results\n  if (this.toBeTiled[id] != null) {\n    return this.toBeTiled[id];\n  }\n\n  //only compound nodes are to be tiled\n  var childGraph = node.getChild();\n  if (childGraph == null) {\n    this.toBeTiled[id] = false;\n    return false;\n  }\n\n  var children = childGraph.getNodes(); // Get the children nodes\n\n  //a compound node is not to be tiled if all of its compound children are not to be tiled\n  for (var i = 0; i < children.length; i++) {\n    var theChild = children[i];\n\n    if (this.getNodeDegree(theChild) > 0) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n\n    //pass the children not having the compound structure\n    if (theChild.getChild() == null) {\n      this.toBeTiled[theChild.id] = false;\n      continue;\n    }\n\n    if (!this.getToBeTiled(theChild)) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n  }\n  this.toBeTiled[id] = true;\n  return true;\n};\n\n// Get degree of a node depending of its edges and independent of its children\nCoSELayout.prototype.getNodeDegree = function (node) {\n  var id = node.id;\n  var edges = node.getEdges();\n  var degree = 0;\n\n  // For the edges connected\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    if (edge.getSource().id !== edge.getTarget().id) {\n      degree = degree + 1;\n    }\n  }\n  return degree;\n};\n\n// Get degree of a node with its children\nCoSELayout.prototype.getNodeDegreeWithChildren = function (node) {\n  var degree = this.getNodeDegree(node);\n  if (node.getChild() == null) {\n    return degree;\n  }\n  var children = node.getChild().getNodes();\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    degree += this.getNodeDegreeWithChildren(child);\n  }\n  return degree;\n};\n\nCoSELayout.prototype.performDFSOnCompounds = function () {\n  this.compoundOrder = [];\n  this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes());\n};\n\nCoSELayout.prototype.fillCompexOrderByDFS = function (children) {\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    if (child.getChild() != null) {\n      this.fillCompexOrderByDFS(child.getChild().getNodes());\n    }\n    if (this.getToBeTiled(child)) {\n      this.compoundOrder.push(child);\n    }\n  }\n};\n\n/**\n* This method places each zero degree member wrt given (x,y) coordinates (top left).\n*/\nCoSELayout.prototype.adjustLocations = function (organization, x, y, compoundHorizontalMargin, compoundVerticalMargin, compoundLabelMarginLeft, compoundLabelMarginTop) {\n  x += compoundHorizontalMargin + compoundLabelMarginLeft;\n  y += compoundVerticalMargin + compoundLabelMarginTop;\n\n  var left = x;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    var row = organization.rows[i];\n    x = left;\n    var maxHeight = 0;\n\n    for (var j = 0; j < row.length; j++) {\n      var lnode = row[j];\n\n      lnode.rect.x = x; // + lnode.rect.width / 2;\n      lnode.rect.y = y; // + lnode.rect.height / 2;\n\n      x += lnode.rect.width + organization.horizontalPadding;\n\n      if (lnode.rect.height > maxHeight) maxHeight = lnode.rect.height;\n    }\n\n    y += maxHeight + organization.verticalPadding;\n  }\n};\n\nCoSELayout.prototype.tileCompoundMembers = function (childGraphMap, idToNode) {\n  var self = this;\n  this.tiledMemberPack = [];\n\n  Object.keys(childGraphMap).forEach(function (id) {\n    // Get the compound node\n    var compoundNode = idToNode[id];\n\n    self.tiledMemberPack[id] = self.tileNodes(childGraphMap[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    compoundNode.rect.width = self.tiledMemberPack[id].width;\n    compoundNode.rect.height = self.tiledMemberPack[id].height;\n    compoundNode.setCenter(self.tiledMemberPack[id].centerX, self.tiledMemberPack[id].centerY);\n\n    // compound left and top margings for labels\n    // when node labels are included, these values may be set to different values below and are used in tilingPostLayout,\n    // otherwise they stay as zero\n    compoundNode.labelMarginLeft = 0;\n    compoundNode.labelMarginTop = 0;\n\n    // Update compound bounds considering its label properties and set label margins for left and top\n    if (CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n\n      var width = compoundNode.rect.width;\n      var height = compoundNode.rect.height;\n\n      if (compoundNode.labelWidth) {\n        if (compoundNode.labelPosHorizontal == \"left\") {\n          compoundNode.rect.x -= compoundNode.labelWidth;\n          compoundNode.setWidth(width + compoundNode.labelWidth);\n          compoundNode.labelMarginLeft = compoundNode.labelWidth;\n        } else if (compoundNode.labelPosHorizontal == \"center\" && compoundNode.labelWidth > width) {\n          compoundNode.rect.x -= (compoundNode.labelWidth - width) / 2;\n          compoundNode.setWidth(compoundNode.labelWidth);\n          compoundNode.labelMarginLeft = (compoundNode.labelWidth - width) / 2;\n        } else if (compoundNode.labelPosHorizontal == \"right\") {\n          compoundNode.setWidth(width + compoundNode.labelWidth);\n        }\n      }\n\n      if (compoundNode.labelHeight) {\n        if (compoundNode.labelPosVertical == \"top\") {\n          compoundNode.rect.y -= compoundNode.labelHeight;\n          compoundNode.setHeight(height + compoundNode.labelHeight);\n          compoundNode.labelMarginTop = compoundNode.labelHeight;\n        } else if (compoundNode.labelPosVertical == \"center\" && compoundNode.labelHeight > height) {\n          compoundNode.rect.y -= (compoundNode.labelHeight - height) / 2;\n          compoundNode.setHeight(compoundNode.labelHeight);\n          compoundNode.labelMarginTop = (compoundNode.labelHeight - height) / 2;\n        } else if (compoundNode.labelPosVertical == \"bottom\") {\n          compoundNode.setHeight(height + compoundNode.labelHeight);\n        }\n      }\n    }\n  });\n};\n\nCoSELayout.prototype.tileNodes = function (nodes, minWidth) {\n  var horizontalOrg = this.tileNodesByFavoringDim(nodes, minWidth, true);\n  var verticalOrg = this.tileNodesByFavoringDim(nodes, minWidth, false);\n\n  var horizontalRatio = this.getOrgRatio(horizontalOrg);\n  var verticalRatio = this.getOrgRatio(verticalOrg);\n  var bestOrg;\n\n  // the best ratio is the one that is closer to 1 since the ratios are already normalized\n  // and the best organization is the one that has the best ratio\n  if (verticalRatio < horizontalRatio) {\n    bestOrg = verticalOrg;\n  } else {\n    bestOrg = horizontalOrg;\n  }\n\n  return bestOrg;\n};\n\n// get the width/height ratio of the organization that is normalized so that it will not be less than 1\nCoSELayout.prototype.getOrgRatio = function (organization) {\n  // get dimensions and calculate the initial ratio\n  var width = organization.width;\n  var height = organization.height;\n  var ratio = width / height;\n\n  // if the initial ratio is less then 1 then inverse it\n  if (ratio < 1) {\n    ratio = 1 / ratio;\n  }\n\n  // return the normalized ratio\n  return ratio;\n};\n\n/*\n * Calculates the ideal width for the rows. This method assumes that\n * each node has the same sizes and calculates the ideal row width that\n * approximates a square shaped complex accordingly. However, since nodes would\n * have different sizes some rows would have different sizes and the resulting\n * shape would not be an exact square.\n */\nCoSELayout.prototype.calcIdealRowWidth = function (members, favorHorizontalDim) {\n  // To approximate a square shaped complex we need to make complex width equal to complex height.\n  // To achieve this we need to solve the following equation system for hc:\n  // (x + bx) * hc - bx = (y + by) * vc - by, hc * vc = n\n  // where x is the avarage width of the nodes, y is the avarage height of nodes\n  // bx and by are the buffer sizes in horizontal and vertical dimensions accordingly,\n  // hc and vc are the number of rows in horizontal and vertical dimensions\n  // n is number of members.\n\n  var verticalPadding = CoSEConstants.TILING_PADDING_VERTICAL;\n  var horizontalPadding = CoSEConstants.TILING_PADDING_HORIZONTAL;\n\n  // number of members\n  var membersSize = members.length;\n\n  // sum of the width of all members\n  var totalWidth = 0;\n\n  // sum of the height of all members\n  var totalHeight = 0;\n\n  var maxWidth = 0;\n\n  // traverse all members to calculate total width and total height and get the maximum members width\n  members.forEach(function (node) {\n    totalWidth += node.getWidth();\n    totalHeight += node.getHeight();\n\n    if (node.getWidth() > maxWidth) {\n      maxWidth = node.getWidth();\n    }\n  });\n\n  // average width of the members\n  var averageWidth = totalWidth / membersSize;\n\n  // average height of the members\n  var averageHeight = totalHeight / membersSize;\n\n  // solving the initial equation system for the hc yields the following second degree equation:\n  // hc^2 * (x+bx) + hc * (by - bx) - n * (y + by) = 0\n\n  // the delta value to solve the equation above for hc\n  var delta = Math.pow(verticalPadding - horizontalPadding, 2) + 4 * (averageWidth + horizontalPadding) * (averageHeight + verticalPadding) * membersSize;\n\n  // solve the equation using delta value to calculate the horizontal count\n  // that represents the number of nodes in an ideal row\n  var horizontalCountDouble = (horizontalPadding - verticalPadding + Math.sqrt(delta)) / (2 * (averageWidth + horizontalPadding));\n  // round the calculated horizontal count up or down according to the favored dimension\n  var horizontalCount;\n\n  if (favorHorizontalDim) {\n    horizontalCount = Math.ceil(horizontalCountDouble);\n    // if horizontalCount count is not a float value then both of rounding to floor and ceil\n    // will yield the same values. Instead of repeating the same calculation try going up\n    // while favoring horizontal dimension in such cases\n    if (horizontalCount == horizontalCountDouble) {\n      horizontalCount++;\n    }\n  } else {\n    horizontalCount = Math.floor(horizontalCountDouble);\n  }\n\n  // ideal width to be calculated\n  var idealWidth = horizontalCount * (averageWidth + horizontalPadding) - horizontalPadding;\n\n  // if max width is bigger than calculated ideal width reset ideal width to it\n  if (maxWidth > idealWidth) {\n    idealWidth = maxWidth;\n  }\n\n  // add the left-right margins to the ideal row width\n  idealWidth += horizontalPadding * 2;\n\n  // return the ideal row width1\n  return idealWidth;\n};\n\nCoSELayout.prototype.tileNodesByFavoringDim = function (nodes, minWidth, favorHorizontalDim) {\n  var verticalPadding = CoSEConstants.TILING_PADDING_VERTICAL;\n  var horizontalPadding = CoSEConstants.TILING_PADDING_HORIZONTAL;\n  var tilingCompareBy = CoSEConstants.TILING_COMPARE_BY;\n  var organization = {\n    rows: [],\n    rowWidth: [],\n    rowHeight: [],\n    width: 0,\n    height: minWidth, // assume minHeight equals to minWidth\n    verticalPadding: verticalPadding,\n    horizontalPadding: horizontalPadding,\n    centerX: 0,\n    centerY: 0\n  };\n\n  if (tilingCompareBy) {\n    organization.idealRowWidth = this.calcIdealRowWidth(nodes, favorHorizontalDim);\n  }\n\n  var getNodeArea = function getNodeArea(n) {\n    return n.rect.width * n.rect.height;\n  };\n\n  var areaCompareFcn = function areaCompareFcn(n1, n2) {\n    return getNodeArea(n2) - getNodeArea(n1);\n  };\n\n  // Sort the nodes in descending order of their areas\n  nodes.sort(function (n1, n2) {\n    var cmpBy = areaCompareFcn;\n    if (organization.idealRowWidth) {\n      cmpBy = tilingCompareBy;\n      return cmpBy(n1.id, n2.id);\n    }\n    return cmpBy(n1, n2);\n  });\n\n  // Create the organization -> calculate compound center\n  var sumCenterX = 0;\n  var sumCenterY = 0;\n  for (var i = 0; i < nodes.length; i++) {\n    var lNode = nodes[i];\n\n    sumCenterX += lNode.getCenterX();\n    sumCenterY += lNode.getCenterY();\n  }\n\n  organization.centerX = sumCenterX / nodes.length;\n  organization.centerY = sumCenterY / nodes.length;\n\n  // Create the organization -> tile members\n  for (var i = 0; i < nodes.length; i++) {\n    var lNode = nodes[i];\n\n    if (organization.rows.length == 0) {\n      this.insertNodeToRow(organization, lNode, 0, minWidth);\n    } else if (this.canAddHorizontal(organization, lNode.rect.width, lNode.rect.height)) {\n      var rowIndex = organization.rows.length - 1;\n      if (!organization.idealRowWidth) {\n        rowIndex = this.getShortestRowIndex(organization);\n      }\n      this.insertNodeToRow(organization, lNode, rowIndex, minWidth);\n    } else {\n      this.insertNodeToRow(organization, lNode, organization.rows.length, minWidth);\n    }\n\n    this.shiftToLastRow(organization);\n  }\n\n  return organization;\n};\n\nCoSELayout.prototype.insertNodeToRow = function (organization, node, rowIndex, minWidth) {\n  var minCompoundSize = minWidth;\n\n  // Add new row if needed\n  if (rowIndex == organization.rows.length) {\n    var secondDimension = [];\n\n    organization.rows.push(secondDimension);\n    organization.rowWidth.push(minCompoundSize);\n    organization.rowHeight.push(0);\n  }\n\n  // Update row width\n  var w = organization.rowWidth[rowIndex] + node.rect.width;\n\n  if (organization.rows[rowIndex].length > 0) {\n    w += organization.horizontalPadding;\n  }\n\n  organization.rowWidth[rowIndex] = w;\n  // Update compound width\n  if (organization.width < w) {\n    organization.width = w;\n  }\n\n  // Update height\n  var h = node.rect.height;\n  if (rowIndex > 0) h += organization.verticalPadding;\n\n  var extraHeight = 0;\n  if (h > organization.rowHeight[rowIndex]) {\n    extraHeight = organization.rowHeight[rowIndex];\n    organization.rowHeight[rowIndex] = h;\n    extraHeight = organization.rowHeight[rowIndex] - extraHeight;\n  }\n\n  organization.height += extraHeight;\n\n  // Insert node\n  organization.rows[rowIndex].push(node);\n};\n\n//Scans the rows of an organization and returns the one with the min width\nCoSELayout.prototype.getShortestRowIndex = function (organization) {\n  var r = -1;\n  var min = Number.MAX_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    if (organization.rowWidth[i] < min) {\n      r = i;\n      min = organization.rowWidth[i];\n    }\n  }\n  return r;\n};\n\n//Scans the rows of an organization and returns the one with the max width\nCoSELayout.prototype.getLongestRowIndex = function (organization) {\n  var r = -1;\n  var max = Number.MIN_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n\n    if (organization.rowWidth[i] > max) {\n      r = i;\n      max = organization.rowWidth[i];\n    }\n  }\n\n  return r;\n};\n\n/**\n* This method checks whether adding extra width to the organization violates\n* the aspect ratio(1) or not.\n*/\nCoSELayout.prototype.canAddHorizontal = function (organization, extraWidth, extraHeight) {\n\n  // if there is an ideal row width specified use it instead of checking the aspect ratio\n  if (organization.idealRowWidth) {\n    var lastRowIndex = organization.rows.length - 1;\n    var lastRowWidth = organization.rowWidth[lastRowIndex];\n\n    // check and return if ideal row width will be exceed if the node is added to the row\n    return lastRowWidth + extraWidth + organization.horizontalPadding <= organization.idealRowWidth;\n  }\n\n  var sri = this.getShortestRowIndex(organization);\n\n  if (sri < 0) {\n    return true;\n  }\n\n  var min = organization.rowWidth[sri];\n\n  if (min + organization.horizontalPadding + extraWidth <= organization.width) return true;\n\n  var hDiff = 0;\n\n  // Adding to an existing row\n  if (organization.rowHeight[sri] < extraHeight) {\n    if (sri > 0) hDiff = extraHeight + organization.verticalPadding - organization.rowHeight[sri];\n  }\n\n  var add_to_row_ratio;\n  if (organization.width - min >= extraWidth + organization.horizontalPadding) {\n    add_to_row_ratio = (organization.height + hDiff) / (min + extraWidth + organization.horizontalPadding);\n  } else {\n    add_to_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  // Adding a new row for this node\n  hDiff = extraHeight + organization.verticalPadding;\n  var add_new_row_ratio;\n  if (organization.width < extraWidth) {\n    add_new_row_ratio = (organization.height + hDiff) / extraWidth;\n  } else {\n    add_new_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  if (add_new_row_ratio < 1) add_new_row_ratio = 1 / add_new_row_ratio;\n\n  if (add_to_row_ratio < 1) add_to_row_ratio = 1 / add_to_row_ratio;\n\n  return add_to_row_ratio < add_new_row_ratio;\n};\n\n//If moving the last node from the longest row and adding it to the last\n//row makes the bounding box smaller, do it.\nCoSELayout.prototype.shiftToLastRow = function (organization) {\n  var longest = this.getLongestRowIndex(organization);\n  var last = organization.rowWidth.length - 1;\n  var row = organization.rows[longest];\n  var node = row[row.length - 1];\n\n  var diff = node.width + organization.horizontalPadding;\n\n  // Check if there is enough space on the last row\n  if (organization.width - organization.rowWidth[last] > diff && longest != last) {\n    // Remove the last element of the longest row\n    row.splice(-1, 1);\n\n    // Push it to the last row\n    organization.rows[last].push(node);\n\n    organization.rowWidth[longest] = organization.rowWidth[longest] - diff;\n    organization.rowWidth[last] = organization.rowWidth[last] + diff;\n    organization.width = organization.rowWidth[instance.getLongestRowIndex(organization)];\n\n    // Update heights of the organization\n    var maxHeight = Number.MIN_VALUE;\n    for (var i = 0; i < row.length; i++) {\n      if (row[i].height > maxHeight) maxHeight = row[i].height;\n    }\n    if (longest > 0) maxHeight += organization.verticalPadding;\n\n    var prevTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n\n    organization.rowHeight[longest] = maxHeight;\n    if (organization.rowHeight[last] < node.height + organization.verticalPadding) organization.rowHeight[last] = node.height + organization.verticalPadding;\n\n    var finalTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n    organization.height += finalTotal - prevTotal;\n\n    this.shiftToLastRow(organization);\n  }\n};\n\nCoSELayout.prototype.tilingPreLayout = function () {\n  if (CoSEConstants.TILE) {\n    // Find zero degree nodes and create a compound for each level\n    this.groupZeroDegreeMembers();\n    // Tile and clear children of each compound\n    this.clearCompounds();\n    // Separately tile and clear zero degree nodes for each level\n    this.clearZeroDegreeMembers();\n  }\n};\n\nCoSELayout.prototype.tilingPostLayout = function () {\n  if (CoSEConstants.TILE) {\n    this.repopulateZeroDegreeMembers();\n    this.repopulateCompounds();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Tree Reduction methods\n// -----------------------------------------------------------------------------\n// Reduce trees \nCoSELayout.prototype.reduceTrees = function () {\n  var prunedNodesAll = [];\n  var containsLeaf = true;\n  var node;\n\n  while (containsLeaf) {\n    var allNodes = this.graphManager.getAllNodes();\n    var prunedNodesInStepTemp = [];\n    containsLeaf = false;\n\n    for (var i = 0; i < allNodes.length; i++) {\n      node = allNodes[i];\n      if (node.getEdges().length == 1 && !node.getEdges()[0].isInterGraph && node.getChild() == null) {\n        if (CoSEConstants.PURE_INCREMENTAL) {\n          var otherEnd = node.getEdges()[0].getOtherEnd(node);\n          var relativePosition = new DimensionD(node.getCenterX() - otherEnd.getCenterX(), node.getCenterY() - otherEnd.getCenterY());\n          prunedNodesInStepTemp.push([node, node.getEdges()[0], node.getOwner(), relativePosition]);\n        } else {\n          prunedNodesInStepTemp.push([node, node.getEdges()[0], node.getOwner()]);\n        }\n        containsLeaf = true;\n      }\n    }\n    if (containsLeaf == true) {\n      var prunedNodesInStep = [];\n      for (var j = 0; j < prunedNodesInStepTemp.length; j++) {\n        if (prunedNodesInStepTemp[j][0].getEdges().length == 1) {\n          prunedNodesInStep.push(prunedNodesInStepTemp[j]);\n          prunedNodesInStepTemp[j][0].getOwner().remove(prunedNodesInStepTemp[j][0]);\n        }\n      }\n      prunedNodesAll.push(prunedNodesInStep);\n      this.graphManager.resetAllNodes();\n      this.graphManager.resetAllEdges();\n    }\n  }\n  this.prunedNodesAll = prunedNodesAll;\n};\n\n// Grow tree one step \nCoSELayout.prototype.growTree = function (prunedNodesAll) {\n  var lengthOfPrunedNodesInStep = prunedNodesAll.length;\n  var prunedNodesInStep = prunedNodesAll[lengthOfPrunedNodesInStep - 1];\n\n  var nodeData;\n  for (var i = 0; i < prunedNodesInStep.length; i++) {\n    nodeData = prunedNodesInStep[i];\n\n    this.findPlaceforPrunedNode(nodeData);\n\n    nodeData[2].add(nodeData[0]);\n    nodeData[2].add(nodeData[1], nodeData[1].source, nodeData[1].target);\n  }\n\n  prunedNodesAll.splice(prunedNodesAll.length - 1, 1);\n  this.graphManager.resetAllNodes();\n  this.graphManager.resetAllEdges();\n};\n\n// Find an appropriate position to replace pruned node, this method can be improved\nCoSELayout.prototype.findPlaceforPrunedNode = function (nodeData) {\n\n  var gridForPrunedNode;\n  var nodeToConnect;\n  var prunedNode = nodeData[0];\n  if (prunedNode == nodeData[1].source) {\n    nodeToConnect = nodeData[1].target;\n  } else {\n    nodeToConnect = nodeData[1].source;\n  }\n\n  if (CoSEConstants.PURE_INCREMENTAL) {\n    prunedNode.setCenter(nodeToConnect.getCenterX() + nodeData[3].getWidth(), nodeToConnect.getCenterY() + nodeData[3].getHeight());\n  } else {\n    var startGridX = nodeToConnect.startX;\n    var finishGridX = nodeToConnect.finishX;\n    var startGridY = nodeToConnect.startY;\n    var finishGridY = nodeToConnect.finishY;\n\n    var upNodeCount = 0;\n    var downNodeCount = 0;\n    var rightNodeCount = 0;\n    var leftNodeCount = 0;\n    var controlRegions = [upNodeCount, rightNodeCount, downNodeCount, leftNodeCount];\n\n    if (startGridY > 0) {\n      for (var i = startGridX; i <= finishGridX; i++) {\n        controlRegions[0] += this.grid[i][startGridY - 1].length + this.grid[i][startGridY].length - 1;\n      }\n    }\n    if (finishGridX < this.grid.length - 1) {\n      for (var i = startGridY; i <= finishGridY; i++) {\n        controlRegions[1] += this.grid[finishGridX + 1][i].length + this.grid[finishGridX][i].length - 1;\n      }\n    }\n    if (finishGridY < this.grid[0].length - 1) {\n      for (var i = startGridX; i <= finishGridX; i++) {\n        controlRegions[2] += this.grid[i][finishGridY + 1].length + this.grid[i][finishGridY].length - 1;\n      }\n    }\n    if (startGridX > 0) {\n      for (var i = startGridY; i <= finishGridY; i++) {\n        controlRegions[3] += this.grid[startGridX - 1][i].length + this.grid[startGridX][i].length - 1;\n      }\n    }\n    var min = Integer.MAX_VALUE;\n    var minCount;\n    var minIndex;\n    for (var j = 0; j < controlRegions.length; j++) {\n      if (controlRegions[j] < min) {\n        min = controlRegions[j];\n        minCount = 1;\n        minIndex = j;\n      } else if (controlRegions[j] == min) {\n        minCount++;\n      }\n    }\n\n    if (minCount == 3 && min == 0) {\n      if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[2] == 0) {\n        gridForPrunedNode = 1;\n      } else if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[3] == 0) {\n        gridForPrunedNode = 0;\n      } else if (controlRegions[0] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n        gridForPrunedNode = 3;\n      } else if (controlRegions[1] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n        gridForPrunedNode = 2;\n      }\n    } else if (minCount == 2 && min == 0) {\n      var random = Math.floor(Math.random() * 2);\n      if (controlRegions[0] == 0 && controlRegions[1] == 0) {\n        ;\n        if (random == 0) {\n          gridForPrunedNode = 0;\n        } else {\n          gridForPrunedNode = 1;\n        }\n      } else if (controlRegions[0] == 0 && controlRegions[2] == 0) {\n        if (random == 0) {\n          gridForPrunedNode = 0;\n        } else {\n          gridForPrunedNode = 2;\n        }\n      } else if (controlRegions[0] == 0 && controlRegions[3] == 0) {\n        if (random == 0) {\n          gridForPrunedNode = 0;\n        } else {\n          gridForPrunedNode = 3;\n        }\n      } else if (controlRegions[1] == 0 && controlRegions[2] == 0) {\n        if (random == 0) {\n          gridForPrunedNode = 1;\n        } else {\n          gridForPrunedNode = 2;\n        }\n      } else if (controlRegions[1] == 0 && controlRegions[3] == 0) {\n        if (random == 0) {\n          gridForPrunedNode = 1;\n        } else {\n          gridForPrunedNode = 3;\n        }\n      } else {\n        if (random == 0) {\n          gridForPrunedNode = 2;\n        } else {\n          gridForPrunedNode = 3;\n        }\n      }\n    } else if (minCount == 4 && min == 0) {\n      var random = Math.floor(Math.random() * 4);\n      gridForPrunedNode = random;\n    } else {\n      gridForPrunedNode = minIndex;\n    }\n\n    if (gridForPrunedNode == 0) {\n      prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() - nodeToConnect.getHeight() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getHeight() / 2);\n    } else if (gridForPrunedNode == 1) {\n      prunedNode.setCenter(nodeToConnect.getCenterX() + nodeToConnect.getWidth() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n    } else if (gridForPrunedNode == 2) {\n      prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() + nodeToConnect.getHeight() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getHeight() / 2);\n    } else {\n      prunedNode.setCenter(nodeToConnect.getCenterX() - nodeToConnect.getWidth() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n    }\n  }\n};\n\nmodule.exports = CoSELayout;\n\n/***/ }),\n\n/***/ 991:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nvar FDLayoutNode = __webpack_require__(551).FDLayoutNode;\nvar IMath = __webpack_require__(551).IMath;\n\nfunction CoSENode(gm, loc, size, vNode) {\n  FDLayoutNode.call(this, gm, loc, size, vNode);\n}\n\nCoSENode.prototype = Object.create(FDLayoutNode.prototype);\nfor (var prop in FDLayoutNode) {\n  CoSENode[prop] = FDLayoutNode[prop];\n}\n\nCoSENode.prototype.calculateDisplacement = function () {\n  var layout = this.graphManager.getLayout();\n  // this check is for compound nodes that contain fixed nodes\n  if (this.getChild() != null && this.fixedNodeWeight) {\n    this.displacementX += layout.coolingFactor * (this.springForceX + this.repulsionForceX + this.gravitationForceX) / this.fixedNodeWeight;\n    this.displacementY += layout.coolingFactor * (this.springForceY + this.repulsionForceY + this.gravitationForceY) / this.fixedNodeWeight;\n  } else {\n    this.displacementX += layout.coolingFactor * (this.springForceX + this.repulsionForceX + this.gravitationForceX) / this.noOfChildren;\n    this.displacementY += layout.coolingFactor * (this.springForceY + this.repulsionForceY + this.gravitationForceY) / this.noOfChildren;\n  }\n\n  if (Math.abs(this.displacementX) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementX = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementX);\n  }\n\n  if (Math.abs(this.displacementY) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementY = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementY);\n  }\n\n  // non-empty compound node, propogate movement to children as well\n  if (this.child && this.child.getNodes().length > 0) {\n    this.propogateDisplacementToChildren(this.displacementX, this.displacementY);\n  }\n};\n\nCoSENode.prototype.propogateDisplacementToChildren = function (dX, dY) {\n  var nodes = this.getChild().getNodes();\n  var node;\n  for (var i = 0; i < nodes.length; i++) {\n    node = nodes[i];\n    if (node.getChild() == null) {\n      node.displacementX += dX;\n      node.displacementY += dY;\n    } else {\n      node.propogateDisplacementToChildren(dX, dY);\n    }\n  }\n};\n\nCoSENode.prototype.move = function () {\n  var layout = this.graphManager.getLayout();\n\n  // a simple node or an empty compound node, move it\n  if (this.child == null || this.child.getNodes().length == 0) {\n    this.moveBy(this.displacementX, this.displacementY);\n\n    layout.totalDisplacement += Math.abs(this.displacementX) + Math.abs(this.displacementY);\n  }\n\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  this.displacementX = 0;\n  this.displacementY = 0;\n};\n\nCoSENode.prototype.setPred1 = function (pred1) {\n  this.pred1 = pred1;\n};\n\nCoSENode.prototype.getPred1 = function () {\n  return pred1;\n};\n\nCoSENode.prototype.getPred2 = function () {\n  return pred2;\n};\n\nCoSENode.prototype.setNext = function (next) {\n  this.next = next;\n};\n\nCoSENode.prototype.getNext = function () {\n  return next;\n};\n\nCoSENode.prototype.setProcessed = function (processed) {\n  this.processed = processed;\n};\n\nCoSENode.prototype.isProcessed = function () {\n  return processed;\n};\n\nmodule.exports = CoSENode;\n\n/***/ }),\n\n/***/ 902:\n/***/ ((module, __unused_webpack_exports, __webpack_require__) => {\n\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar CoSEConstants = __webpack_require__(806);\nvar LinkedList = __webpack_require__(551).LinkedList;\nvar Matrix = __webpack_require__(551).Matrix;\nvar SVD = __webpack_require__(551).SVD;\n\nfunction ConstraintHandler() {}\n\nConstraintHandler.handleConstraints = function (layout) {\n  //  let layout = this.graphManager.getLayout();\n\n  // get constraints from layout\n  var constraints = {};\n  constraints.fixedNodeConstraint = layout.constraints.fixedNodeConstraint;\n  constraints.alignmentConstraint = layout.constraints.alignmentConstraint;\n  constraints.relativePlacementConstraint = layout.constraints.relativePlacementConstraint;\n\n  var idToNodeMap = new Map();\n  var nodeIndexes = new Map();\n  var xCoords = [];\n  var yCoords = [];\n\n  var allNodes = layout.getAllNodes();\n  var index = 0;\n  // fill index map and coordinates\n  for (var i = 0; i < allNodes.length; i++) {\n    var node = allNodes[i];\n    if (node.getChild() == null) {\n      nodeIndexes.set(node.id, index++);\n      xCoords.push(node.getCenterX());\n      yCoords.push(node.getCenterY());\n      idToNodeMap.set(node.id, node);\n    }\n  }\n\n  // if there exists relative placement constraint without gap value, set it to default \n  if (constraints.relativePlacementConstraint) {\n    constraints.relativePlacementConstraint.forEach(function (constraint) {\n      if (!constraint.gap && constraint.gap != 0) {\n        if (constraint.left) {\n          constraint.gap = CoSEConstants.DEFAULT_EDGE_LENGTH + idToNodeMap.get(constraint.left).getWidth() / 2 + idToNodeMap.get(constraint.right).getWidth() / 2;\n        } else {\n          constraint.gap = CoSEConstants.DEFAULT_EDGE_LENGTH + idToNodeMap.get(constraint.top).getHeight() / 2 + idToNodeMap.get(constraint.bottom).getHeight() / 2;\n        }\n      }\n    });\n  }\n\n  /* auxiliary functions */\n\n  // calculate difference between two position objects\n  var calculatePositionDiff = function calculatePositionDiff(pos1, pos2) {\n    return { x: pos1.x - pos2.x, y: pos1.y - pos2.y };\n  };\n\n  // calculate average position of the nodes\n  var calculateAvgPosition = function calculateAvgPosition(nodeIdSet) {\n    var xPosSum = 0;\n    var yPosSum = 0;\n    nodeIdSet.forEach(function (nodeId) {\n      xPosSum += xCoords[nodeIndexes.get(nodeId)];\n      yPosSum += yCoords[nodeIndexes.get(nodeId)];\n    });\n\n    return { x: xPosSum / nodeIdSet.size, y: yPosSum / nodeIdSet.size };\n  };\n\n  // find an appropriate positioning for the nodes in a given graph according to relative placement constraints\n  // this function also takes the fixed nodes and alignment constraints into account\n  // graph: dag to be evaluated, direction: \"horizontal\" or \"vertical\", \n  // fixedNodes: set of fixed nodes to consider during evaluation, dummyPositions: appropriate coordinates of the dummy nodes  \n  var findAppropriatePositionForRelativePlacement = function findAppropriatePositionForRelativePlacement(graph, direction, fixedNodes, dummyPositions, componentSources) {\n\n    // find union of two sets\n    function setUnion(setA, setB) {\n      var union = new Set(setA);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = setB[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var elem = _step.value;\n\n          union.add(elem);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return union;\n    }\n\n    // find indegree count for each node\n    var inDegrees = new Map();\n\n    graph.forEach(function (value, key) {\n      inDegrees.set(key, 0);\n    });\n    graph.forEach(function (value, key) {\n      value.forEach(function (adjacent) {\n        inDegrees.set(adjacent.id, inDegrees.get(adjacent.id) + 1);\n      });\n    });\n\n    var positionMap = new Map(); // keeps the position for each node\n    var pastMap = new Map(); // keeps the predecessors(past) of a node\n    var queue = new LinkedList();\n    inDegrees.forEach(function (value, key) {\n      if (value == 0) {\n        queue.push(key);\n        if (!fixedNodes) {\n          if (direction == \"horizontal\") {\n            positionMap.set(key, nodeIndexes.has(key) ? xCoords[nodeIndexes.get(key)] : dummyPositions.get(key));\n          } else {\n            positionMap.set(key, nodeIndexes.has(key) ? yCoords[nodeIndexes.get(key)] : dummyPositions.get(key));\n          }\n        }\n      } else {\n        positionMap.set(key, Number.NEGATIVE_INFINITY);\n      }\n      if (fixedNodes) {\n        pastMap.set(key, new Set([key]));\n      }\n    });\n\n    // align sources of each component in enforcement phase\n    if (fixedNodes) {\n      componentSources.forEach(function (component) {\n        var fixedIds = [];\n        component.forEach(function (nodeId) {\n          if (fixedNodes.has(nodeId)) {\n            fixedIds.push(nodeId);\n          }\n        });\n        if (fixedIds.length > 0) {\n          var position = 0;\n          fixedIds.forEach(function (fixedId) {\n            if (direction == \"horizontal\") {\n              positionMap.set(fixedId, nodeIndexes.has(fixedId) ? xCoords[nodeIndexes.get(fixedId)] : dummyPositions.get(fixedId));\n              position += positionMap.get(fixedId);\n            } else {\n              positionMap.set(fixedId, nodeIndexes.has(fixedId) ? yCoords[nodeIndexes.get(fixedId)] : dummyPositions.get(fixedId));\n              position += positionMap.get(fixedId);\n            }\n          });\n          position = position / fixedIds.length;\n          component.forEach(function (nodeId) {\n            if (!fixedNodes.has(nodeId)) {\n              positionMap.set(nodeId, position);\n            }\n          });\n        } else {\n          var _position = 0;\n          component.forEach(function (nodeId) {\n            if (direction == \"horizontal\") {\n              _position += nodeIndexes.has(nodeId) ? xCoords[nodeIndexes.get(nodeId)] : dummyPositions.get(nodeId);\n            } else {\n              _position += nodeIndexes.has(nodeId) ? yCoords[nodeIndexes.get(nodeId)] : dummyPositions.get(nodeId);\n            }\n          });\n          _position = _position / component.length;\n          component.forEach(function (nodeId) {\n            positionMap.set(nodeId, _position);\n          });\n        }\n      });\n    }\n\n    // calculate positions of the nodes\n\n    var _loop = function _loop() {\n      var currentNode = queue.shift();\n      var neighbors = graph.get(currentNode);\n      neighbors.forEach(function (neighbor) {\n        if (positionMap.get(neighbor.id) < positionMap.get(currentNode) + neighbor.gap) {\n          if (fixedNodes && fixedNodes.has(neighbor.id)) {\n            var fixedPosition = void 0;\n            if (direction == \"horizontal\") {\n              fixedPosition = nodeIndexes.has(neighbor.id) ? xCoords[nodeIndexes.get(neighbor.id)] : dummyPositions.get(neighbor.id);\n            } else {\n              fixedPosition = nodeIndexes.has(neighbor.id) ? yCoords[nodeIndexes.get(neighbor.id)] : dummyPositions.get(neighbor.id);\n            }\n            positionMap.set(neighbor.id, fixedPosition); // TODO: may do unnecessary work\n            if (fixedPosition < positionMap.get(currentNode) + neighbor.gap) {\n              var diff = positionMap.get(currentNode) + neighbor.gap - fixedPosition;\n              pastMap.get(currentNode).forEach(function (nodeId) {\n                positionMap.set(nodeId, positionMap.get(nodeId) - diff);\n              });\n            }\n          } else {\n            positionMap.set(neighbor.id, positionMap.get(currentNode) + neighbor.gap);\n          }\n        }\n        inDegrees.set(neighbor.id, inDegrees.get(neighbor.id) - 1);\n        if (inDegrees.get(neighbor.id) == 0) {\n          queue.push(neighbor.id);\n        }\n        if (fixedNodes) {\n          pastMap.set(neighbor.id, setUnion(pastMap.get(currentNode), pastMap.get(neighbor.id)));\n        }\n      });\n    };\n\n    while (queue.length != 0) {\n      _loop();\n    }\n\n    // readjust position of the nodes after enforcement\n    if (fixedNodes) {\n      // find indegree count for each node\n      var sinkNodes = new Set();\n\n      graph.forEach(function (value, key) {\n        if (value.length == 0) {\n          sinkNodes.add(key);\n        }\n      });\n\n      var _components = [];\n      pastMap.forEach(function (value, key) {\n        if (sinkNodes.has(key)) {\n          var isFixedComponent = false;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = value[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var nodeId = _step2.value;\n\n              if (fixedNodes.has(nodeId)) {\n                isFixedComponent = true;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          if (!isFixedComponent) {\n            var isExist = false;\n            var existAt = void 0;\n            _components.forEach(function (component, index) {\n              if (component.has([].concat(_toConsumableArray(value))[0])) {\n                isExist = true;\n                existAt = index;\n              }\n            });\n            if (!isExist) {\n              _components.push(new Set(value));\n            } else {\n              value.forEach(function (ele) {\n                _components[existAt].add(ele);\n              });\n            }\n          }\n        }\n      });\n\n      _components.forEach(function (component, index) {\n        var minBefore = Number.POSITIVE_INFINITY;\n        var minAfter = Number.POSITIVE_INFINITY;\n        var maxBefore = Number.NEGATIVE_INFINITY;\n        var maxAfter = Number.NEGATIVE_INFINITY;\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = component[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var nodeId = _step3.value;\n\n            var posBefore = void 0;\n            if (direction == \"horizontal\") {\n              posBefore = nodeIndexes.has(nodeId) ? xCoords[nodeIndexes.get(nodeId)] : dummyPositions.get(nodeId);\n            } else {\n              posBefore = nodeIndexes.has(nodeId) ? yCoords[nodeIndexes.get(nodeId)] : dummyPositions.get(nodeId);\n            }\n            var posAfter = positionMap.get(nodeId);\n            if (posBefore < minBefore) {\n              minBefore = posBefore;\n            }\n            if (posBefore > maxBefore) {\n              maxBefore = posBefore;\n            }\n            if (posAfter < minAfter) {\n              minAfter = posAfter;\n            }\n            if (posAfter > maxAfter) {\n              maxAfter = posAfter;\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        var diff = (minBefore + maxBefore) / 2 - (minAfter + maxAfter) / 2;\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = component[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var _nodeId = _step4.value;\n\n            positionMap.set(_nodeId, positionMap.get(_nodeId) + diff);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      });\n    }\n\n    return positionMap;\n  };\n\n  // find transformation based on rel. placement constraints if there are both alignment and rel. placement constraints\n  // or if there are only rel. placement contraints where the largest component isn't sufficiently large\n  var applyReflectionForRelativePlacement = function applyReflectionForRelativePlacement(relativePlacementConstraints) {\n    // variables to count votes\n    var reflectOnY = 0,\n        notReflectOnY = 0;\n    var reflectOnX = 0,\n        notReflectOnX = 0;\n\n    relativePlacementConstraints.forEach(function (constraint) {\n      if (constraint.left) {\n        xCoords[nodeIndexes.get(constraint.left)] - xCoords[nodeIndexes.get(constraint.right)] >= 0 ? reflectOnY++ : notReflectOnY++;\n      } else {\n        yCoords[nodeIndexes.get(constraint.top)] - yCoords[nodeIndexes.get(constraint.bottom)] >= 0 ? reflectOnX++ : notReflectOnX++;\n      }\n    });\n\n    if (reflectOnY > notReflectOnY && reflectOnX > notReflectOnX) {\n      for (var _i = 0; _i < nodeIndexes.size; _i++) {\n        xCoords[_i] = -1 * xCoords[_i];\n        yCoords[_i] = -1 * yCoords[_i];\n      }\n    } else if (reflectOnY > notReflectOnY) {\n      for (var _i2 = 0; _i2 < nodeIndexes.size; _i2++) {\n        xCoords[_i2] = -1 * xCoords[_i2];\n      }\n    } else if (reflectOnX > notReflectOnX) {\n      for (var _i3 = 0; _i3 < nodeIndexes.size; _i3++) {\n        yCoords[_i3] = -1 * yCoords[_i3];\n      }\n    }\n  };\n\n  // find weakly connected components in undirected graph\n  var findComponents = function findComponents(graph) {\n    // find weakly connected components in dag\n    var components = [];\n    var queue = new LinkedList();\n    var visited = new Set();\n    var count = 0;\n\n    graph.forEach(function (value, key) {\n      if (!visited.has(key)) {\n        components[count] = [];\n        var _currentNode = key;\n        queue.push(_currentNode);\n        visited.add(_currentNode);\n        components[count].push(_currentNode);\n\n        while (queue.length != 0) {\n          _currentNode = queue.shift();\n          var neighbors = graph.get(_currentNode);\n          neighbors.forEach(function (neighbor) {\n            if (!visited.has(neighbor.id)) {\n              queue.push(neighbor.id);\n              visited.add(neighbor.id);\n              components[count].push(neighbor.id);\n            }\n          });\n        }\n        count++;\n      }\n    });\n    return components;\n  };\n\n  // return undirected version of given dag\n  var dagToUndirected = function dagToUndirected(dag) {\n    var undirected = new Map();\n\n    dag.forEach(function (value, key) {\n      undirected.set(key, []);\n    });\n\n    dag.forEach(function (value, key) {\n      value.forEach(function (adjacent) {\n        undirected.get(key).push(adjacent);\n        undirected.get(adjacent.id).push({ id: key, gap: adjacent.gap, direction: adjacent.direction });\n      });\n    });\n\n    return undirected;\n  };\n\n  // return reversed (directions inverted) version of given dag\n  var dagToReversed = function dagToReversed(dag) {\n    var reversed = new Map();\n\n    dag.forEach(function (value, key) {\n      reversed.set(key, []);\n    });\n\n    dag.forEach(function (value, key) {\n      value.forEach(function (adjacent) {\n        reversed.get(adjacent.id).push({ id: key, gap: adjacent.gap, direction: adjacent.direction });\n      });\n    });\n\n    return reversed;\n  };\n\n  /****  apply transformation to the initial draft layout to better align with constrained nodes ****/\n  // solve the Orthogonal Procrustean Problem to rotate and/or reflect initial draft layout\n  // here we follow the solution in Chapter 20.2 of Borg, I. & Groenen, P. (2005) Modern Multidimensional Scaling: Theory and Applications \n\n  /* construct source and target configurations */\n\n  var targetMatrix = []; // A - target configuration\n  var sourceMatrix = []; // B - source configuration \n  var standardTransformation = false; // false for no transformation, true for standart (Procrustes) transformation (rotation and/or reflection)\n  var reflectionType = false; // false/true for reflection check, 'reflectOnX', 'reflectOnY' or 'reflectOnBoth' for reflection type if necessary\n  var fixedNodes = new Set();\n  var dag = new Map(); // adjacency list to keep directed acyclic graph (dag) that consists of relative placement constraints\n  var dagUndirected = new Map(); // undirected version of the dag\n  var components = []; // weakly connected components\n\n  // fill fixedNodes collection to use later\n  if (constraints.fixedNodeConstraint) {\n    constraints.fixedNodeConstraint.forEach(function (nodeData) {\n      fixedNodes.add(nodeData.nodeId);\n    });\n  }\n\n  // construct dag from relative placement constraints \n  if (constraints.relativePlacementConstraint) {\n    // construct both directed and undirected version of the dag\n    constraints.relativePlacementConstraint.forEach(function (constraint) {\n      if (constraint.left) {\n        if (dag.has(constraint.left)) {\n          dag.get(constraint.left).push({ id: constraint.right, gap: constraint.gap, direction: \"horizontal\" });\n        } else {\n          dag.set(constraint.left, [{ id: constraint.right, gap: constraint.gap, direction: \"horizontal\" }]);\n        }\n        if (!dag.has(constraint.right)) {\n          dag.set(constraint.right, []);\n        }\n      } else {\n        if (dag.has(constraint.top)) {\n          dag.get(constraint.top).push({ id: constraint.bottom, gap: constraint.gap, direction: \"vertical\" });\n        } else {\n          dag.set(constraint.top, [{ id: constraint.bottom, gap: constraint.gap, direction: \"vertical\" }]);\n        }\n        if (!dag.has(constraint.bottom)) {\n          dag.set(constraint.bottom, []);\n        }\n      }\n    });\n\n    dagUndirected = dagToUndirected(dag);\n    components = findComponents(dagUndirected);\n  }\n\n  if (CoSEConstants.TRANSFORM_ON_CONSTRAINT_HANDLING) {\n    // first check fixed node constraint\n    if (constraints.fixedNodeConstraint && constraints.fixedNodeConstraint.length > 1) {\n      constraints.fixedNodeConstraint.forEach(function (nodeData, i) {\n        targetMatrix[i] = [nodeData.position.x, nodeData.position.y];\n        sourceMatrix[i] = [xCoords[nodeIndexes.get(nodeData.nodeId)], yCoords[nodeIndexes.get(nodeData.nodeId)]];\n      });\n      standardTransformation = true;\n    } else if (constraints.alignmentConstraint) {\n      (function () {\n        // then check alignment constraint\n        var count = 0;\n        if (constraints.alignmentConstraint.vertical) {\n          var verticalAlign = constraints.alignmentConstraint.vertical;\n\n          var _loop2 = function _loop2(_i4) {\n            var alignmentSet = new Set();\n            verticalAlign[_i4].forEach(function (nodeId) {\n              alignmentSet.add(nodeId);\n            });\n            var intersection = new Set([].concat(_toConsumableArray(alignmentSet)).filter(function (x) {\n              return fixedNodes.has(x);\n            }));\n            var xPos = void 0;\n            if (intersection.size > 0) xPos = xCoords[nodeIndexes.get(intersection.values().next().value)];else xPos = calculateAvgPosition(alignmentSet).x;\n\n            verticalAlign[_i4].forEach(function (nodeId) {\n              targetMatrix[count] = [xPos, yCoords[nodeIndexes.get(nodeId)]];\n              sourceMatrix[count] = [xCoords[nodeIndexes.get(nodeId)], yCoords[nodeIndexes.get(nodeId)]];\n              count++;\n            });\n          };\n\n          for (var _i4 = 0; _i4 < verticalAlign.length; _i4++) {\n            _loop2(_i4);\n          }\n          standardTransformation = true;\n        }\n        if (constraints.alignmentConstraint.horizontal) {\n          var horizontalAlign = constraints.alignmentConstraint.horizontal;\n\n          var _loop3 = function _loop3(_i5) {\n            var alignmentSet = new Set();\n            horizontalAlign[_i5].forEach(function (nodeId) {\n              alignmentSet.add(nodeId);\n            });\n            var intersection = new Set([].concat(_toConsumableArray(alignmentSet)).filter(function (x) {\n              return fixedNodes.has(x);\n            }));\n            var yPos = void 0;\n            if (intersection.size > 0) yPos = xCoords[nodeIndexes.get(intersection.values().next().value)];else yPos = calculateAvgPosition(alignmentSet).y;\n\n            horizontalAlign[_i5].forEach(function (nodeId) {\n              targetMatrix[count] = [xCoords[nodeIndexes.get(nodeId)], yPos];\n              sourceMatrix[count] = [xCoords[nodeIndexes.get(nodeId)], yCoords[nodeIndexes.get(nodeId)]];\n              count++;\n            });\n          };\n\n          for (var _i5 = 0; _i5 < horizontalAlign.length; _i5++) {\n            _loop3(_i5);\n          }\n          standardTransformation = true;\n        }\n        if (constraints.relativePlacementConstraint) {\n          reflectionType = true;\n        }\n      })();\n    } else if (constraints.relativePlacementConstraint) {\n      // finally check relative placement constraint\n      // find largest component in dag\n      var largestComponentSize = 0;\n      var largestComponentIndex = 0;\n      for (var _i6 = 0; _i6 < components.length; _i6++) {\n        if (components[_i6].length > largestComponentSize) {\n          largestComponentSize = components[_i6].length;\n          largestComponentIndex = _i6;\n        }\n      }\n      // if largest component isn't dominant, then take the votes for reflection\n      if (largestComponentSize < dagUndirected.size / 2) {\n        applyReflectionForRelativePlacement(constraints.relativePlacementConstraint);\n        standardTransformation = false;\n        reflectionType = false;\n      } else {\n        // use largest component for transformation\n        // construct horizontal and vertical subgraphs in the largest component\n        var subGraphOnHorizontal = new Map();\n        var subGraphOnVertical = new Map();\n        var constraintsInlargestComponent = [];\n\n        components[largestComponentIndex].forEach(function (nodeId) {\n          dag.get(nodeId).forEach(function (adjacent) {\n            if (adjacent.direction == \"horizontal\") {\n              if (subGraphOnHorizontal.has(nodeId)) {\n                subGraphOnHorizontal.get(nodeId).push(adjacent);\n              } else {\n                subGraphOnHorizontal.set(nodeId, [adjacent]);\n              }\n              if (!subGraphOnHorizontal.has(adjacent.id)) {\n                subGraphOnHorizontal.set(adjacent.id, []);\n              }\n              constraintsInlargestComponent.push({ left: nodeId, right: adjacent.id });\n            } else {\n              if (subGraphOnVertical.has(nodeId)) {\n                subGraphOnVertical.get(nodeId).push(adjacent);\n              } else {\n                subGraphOnVertical.set(nodeId, [adjacent]);\n              }\n              if (!subGraphOnVertical.has(adjacent.id)) {\n                subGraphOnVertical.set(adjacent.id, []);\n              }\n              constraintsInlargestComponent.push({ top: nodeId, bottom: adjacent.id });\n            }\n          });\n        });\n\n        applyReflectionForRelativePlacement(constraintsInlargestComponent);\n        reflectionType = false;\n\n        // calculate appropriate positioning for subgraphs\n        var positionMapHorizontal = findAppropriatePositionForRelativePlacement(subGraphOnHorizontal, \"horizontal\");\n        var positionMapVertical = findAppropriatePositionForRelativePlacement(subGraphOnVertical, \"vertical\");\n\n        // construct source and target configuration\n        components[largestComponentIndex].forEach(function (nodeId, i) {\n          sourceMatrix[i] = [xCoords[nodeIndexes.get(nodeId)], yCoords[nodeIndexes.get(nodeId)]];\n          targetMatrix[i] = [];\n          if (positionMapHorizontal.has(nodeId)) {\n            targetMatrix[i][0] = positionMapHorizontal.get(nodeId);\n          } else {\n            targetMatrix[i][0] = xCoords[nodeIndexes.get(nodeId)];\n          }\n          if (positionMapVertical.has(nodeId)) {\n            targetMatrix[i][1] = positionMapVertical.get(nodeId);\n          } else {\n            targetMatrix[i][1] = yCoords[nodeIndexes.get(nodeId)];\n          }\n        });\n\n        standardTransformation = true;\n      }\n    }\n\n    // if transformation is required, then calculate and apply transformation matrix\n    if (standardTransformation) {\n      /* calculate transformation matrix */\n      var transformationMatrix = void 0;\n      var targetMatrixTranspose = Matrix.transpose(targetMatrix); // A'\n      var sourceMatrixTranspose = Matrix.transpose(sourceMatrix); // B'\n\n      // centralize transpose matrices\n      for (var _i7 = 0; _i7 < targetMatrixTranspose.length; _i7++) {\n        targetMatrixTranspose[_i7] = Matrix.multGamma(targetMatrixTranspose[_i7]);\n        sourceMatrixTranspose[_i7] = Matrix.multGamma(sourceMatrixTranspose[_i7]);\n      }\n\n      // do actual calculation for transformation matrix\n      var tempMatrix = Matrix.multMat(targetMatrixTranspose, Matrix.transpose(sourceMatrixTranspose)); // tempMatrix = A'B\n      var SVDResult = SVD.svd(tempMatrix); // SVD(A'B) = USV', svd function returns U, S and V \n      transformationMatrix = Matrix.multMat(SVDResult.V, Matrix.transpose(SVDResult.U)); // transformationMatrix = T = VU'\n\n      /* apply found transformation matrix to obtain final draft layout */\n      for (var _i8 = 0; _i8 < nodeIndexes.size; _i8++) {\n        var temp1 = [xCoords[_i8], yCoords[_i8]];\n        var temp2 = [transformationMatrix[0][0], transformationMatrix[1][0]];\n        var temp3 = [transformationMatrix[0][1], transformationMatrix[1][1]];\n        xCoords[_i8] = Matrix.dotProduct(temp1, temp2);\n        yCoords[_i8] = Matrix.dotProduct(temp1, temp3);\n      }\n\n      // applied only both alignment and rel. placement constraints exist\n      if (reflectionType) {\n        applyReflectionForRelativePlacement(constraints.relativePlacementConstraint);\n      }\n    }\n  }\n\n  if (CoSEConstants.ENFORCE_CONSTRAINTS) {\n    /****  enforce constraints on the transformed draft layout ****/\n\n    /* first enforce fixed node constraint */\n\n    if (constraints.fixedNodeConstraint && constraints.fixedNodeConstraint.length > 0) {\n      var translationAmount = { x: 0, y: 0 };\n      constraints.fixedNodeConstraint.forEach(function (nodeData, i) {\n        var posInTheory = { x: xCoords[nodeIndexes.get(nodeData.nodeId)], y: yCoords[nodeIndexes.get(nodeData.nodeId)] };\n        var posDesired = nodeData.position;\n        var posDiff = calculatePositionDiff(posDesired, posInTheory);\n        translationAmount.x += posDiff.x;\n        translationAmount.y += posDiff.y;\n      });\n      translationAmount.x /= constraints.fixedNodeConstraint.length;\n      translationAmount.y /= constraints.fixedNodeConstraint.length;\n\n      xCoords.forEach(function (value, i) {\n        xCoords[i] += translationAmount.x;\n      });\n\n      yCoords.forEach(function (value, i) {\n        yCoords[i] += translationAmount.y;\n      });\n\n      constraints.fixedNodeConstraint.forEach(function (nodeData) {\n        xCoords[nodeIndexes.get(nodeData.nodeId)] = nodeData.position.x;\n        yCoords[nodeIndexes.get(nodeData.nodeId)] = nodeData.position.y;\n      });\n    }\n\n    /* then enforce alignment constraint */\n\n    if (constraints.alignmentConstraint) {\n      if (constraints.alignmentConstraint.vertical) {\n        var xAlign = constraints.alignmentConstraint.vertical;\n\n        var _loop4 = function _loop4(_i9) {\n          var alignmentSet = new Set();\n          xAlign[_i9].forEach(function (nodeId) {\n            alignmentSet.add(nodeId);\n          });\n          var intersection = new Set([].concat(_toConsumableArray(alignmentSet)).filter(function (x) {\n            return fixedNodes.has(x);\n          }));\n          var xPos = void 0;\n          if (intersection.size > 0) xPos = xCoords[nodeIndexes.get(intersection.values().next().value)];else xPos = calculateAvgPosition(alignmentSet).x;\n\n          alignmentSet.forEach(function (nodeId) {\n            if (!fixedNodes.has(nodeId)) xCoords[nodeIndexes.get(nodeId)] = xPos;\n          });\n        };\n\n        for (var _i9 = 0; _i9 < xAlign.length; _i9++) {\n          _loop4(_i9);\n        }\n      }\n      if (constraints.alignmentConstraint.horizontal) {\n        var yAlign = constraints.alignmentConstraint.horizontal;\n\n        var _loop5 = function _loop5(_i10) {\n          var alignmentSet = new Set();\n          yAlign[_i10].forEach(function (nodeId) {\n            alignmentSet.add(nodeId);\n          });\n          var intersection = new Set([].concat(_toConsumableArray(alignmentSet)).filter(function (x) {\n            return fixedNodes.has(x);\n          }));\n          var yPos = void 0;\n          if (intersection.size > 0) yPos = yCoords[nodeIndexes.get(intersection.values().next().value)];else yPos = calculateAvgPosition(alignmentSet).y;\n\n          alignmentSet.forEach(function (nodeId) {\n            if (!fixedNodes.has(nodeId)) yCoords[nodeIndexes.get(nodeId)] = yPos;\n          });\n        };\n\n        for (var _i10 = 0; _i10 < yAlign.length; _i10++) {\n          _loop5(_i10);\n        }\n      }\n    }\n\n    /* finally enforce relative placement constraint */\n\n    if (constraints.relativePlacementConstraint) {\n      (function () {\n        var nodeToDummyForVerticalAlignment = new Map();\n        var nodeToDummyForHorizontalAlignment = new Map();\n        var dummyToNodeForVerticalAlignment = new Map();\n        var dummyToNodeForHorizontalAlignment = new Map();\n        var dummyPositionsForVerticalAlignment = new Map();\n        var dummyPositionsForHorizontalAlignment = new Map();\n        var fixedNodesOnHorizontal = new Set();\n        var fixedNodesOnVertical = new Set();\n\n        // fill maps and sets      \n        fixedNodes.forEach(function (nodeId) {\n          fixedNodesOnHorizontal.add(nodeId);\n          fixedNodesOnVertical.add(nodeId);\n        });\n\n        if (constraints.alignmentConstraint) {\n          if (constraints.alignmentConstraint.vertical) {\n            var verticalAlignment = constraints.alignmentConstraint.vertical;\n\n            var _loop6 = function _loop6(_i11) {\n              dummyToNodeForVerticalAlignment.set(\"dummy\" + _i11, []);\n              verticalAlignment[_i11].forEach(function (nodeId) {\n                nodeToDummyForVerticalAlignment.set(nodeId, \"dummy\" + _i11);\n                dummyToNodeForVerticalAlignment.get(\"dummy\" + _i11).push(nodeId);\n                if (fixedNodes.has(nodeId)) {\n                  fixedNodesOnHorizontal.add(\"dummy\" + _i11);\n                }\n              });\n              dummyPositionsForVerticalAlignment.set(\"dummy\" + _i11, xCoords[nodeIndexes.get(verticalAlignment[_i11][0])]);\n            };\n\n            for (var _i11 = 0; _i11 < verticalAlignment.length; _i11++) {\n              _loop6(_i11);\n            }\n          }\n          if (constraints.alignmentConstraint.horizontal) {\n            var horizontalAlignment = constraints.alignmentConstraint.horizontal;\n\n            var _loop7 = function _loop7(_i12) {\n              dummyToNodeForHorizontalAlignment.set(\"dummy\" + _i12, []);\n              horizontalAlignment[_i12].forEach(function (nodeId) {\n                nodeToDummyForHorizontalAlignment.set(nodeId, \"dummy\" + _i12);\n                dummyToNodeForHorizontalAlignment.get(\"dummy\" + _i12).push(nodeId);\n                if (fixedNodes.has(nodeId)) {\n                  fixedNodesOnVertical.add(\"dummy\" + _i12);\n                }\n              });\n              dummyPositionsForHorizontalAlignment.set(\"dummy\" + _i12, yCoords[nodeIndexes.get(horizontalAlignment[_i12][0])]);\n            };\n\n            for (var _i12 = 0; _i12 < horizontalAlignment.length; _i12++) {\n              _loop7(_i12);\n            }\n          }\n        }\n\n        // construct horizontal and vertical dags (subgraphs) from overall dag\n        var dagOnHorizontal = new Map();\n        var dagOnVertical = new Map();\n\n        var _loop8 = function _loop8(nodeId) {\n          dag.get(nodeId).forEach(function (adjacent) {\n            var sourceId = void 0;\n            var targetNode = void 0;\n            if (adjacent[\"direction\"] == \"horizontal\") {\n              sourceId = nodeToDummyForVerticalAlignment.get(nodeId) ? nodeToDummyForVerticalAlignment.get(nodeId) : nodeId;\n              if (nodeToDummyForVerticalAlignment.get(adjacent.id)) {\n                targetNode = { id: nodeToDummyForVerticalAlignment.get(adjacent.id), gap: adjacent.gap, direction: adjacent.direction };\n              } else {\n                targetNode = adjacent;\n              }\n              if (dagOnHorizontal.has(sourceId)) {\n                dagOnHorizontal.get(sourceId).push(targetNode);\n              } else {\n                dagOnHorizontal.set(sourceId, [targetNode]);\n              }\n              if (!dagOnHorizontal.has(targetNode.id)) {\n                dagOnHorizontal.set(targetNode.id, []);\n              }\n            } else {\n              sourceId = nodeToDummyForHorizontalAlignment.get(nodeId) ? nodeToDummyForHorizontalAlignment.get(nodeId) : nodeId;\n              if (nodeToDummyForHorizontalAlignment.get(adjacent.id)) {\n                targetNode = { id: nodeToDummyForHorizontalAlignment.get(adjacent.id), gap: adjacent.gap, direction: adjacent.direction };\n              } else {\n                targetNode = adjacent;\n              }\n              if (dagOnVertical.has(sourceId)) {\n                dagOnVertical.get(sourceId).push(targetNode);\n              } else {\n                dagOnVertical.set(sourceId, [targetNode]);\n              }\n              if (!dagOnVertical.has(targetNode.id)) {\n                dagOnVertical.set(targetNode.id, []);\n              }\n            }\n          });\n        };\n\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = dag.keys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var nodeId = _step5.value;\n\n            _loop8(nodeId);\n          }\n\n          // find source nodes of each component in horizontal and vertical dags\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n\n        var undirectedOnHorizontal = dagToUndirected(dagOnHorizontal);\n        var undirectedOnVertical = dagToUndirected(dagOnVertical);\n        var componentsOnHorizontal = findComponents(undirectedOnHorizontal);\n        var componentsOnVertical = findComponents(undirectedOnVertical);\n        var reversedDagOnHorizontal = dagToReversed(dagOnHorizontal);\n        var reversedDagOnVertical = dagToReversed(dagOnVertical);\n        var componentSourcesOnHorizontal = [];\n        var componentSourcesOnVertical = [];\n\n        componentsOnHorizontal.forEach(function (component, index) {\n          componentSourcesOnHorizontal[index] = [];\n          component.forEach(function (nodeId) {\n            if (reversedDagOnHorizontal.get(nodeId).length == 0) {\n              componentSourcesOnHorizontal[index].push(nodeId);\n            }\n          });\n        });\n\n        componentsOnVertical.forEach(function (component, index) {\n          componentSourcesOnVertical[index] = [];\n          component.forEach(function (nodeId) {\n            if (reversedDagOnVertical.get(nodeId).length == 0) {\n              componentSourcesOnVertical[index].push(nodeId);\n            }\n          });\n        });\n\n        // calculate appropriate positioning for subgraphs\n        var positionMapHorizontal = findAppropriatePositionForRelativePlacement(dagOnHorizontal, \"horizontal\", fixedNodesOnHorizontal, dummyPositionsForVerticalAlignment, componentSourcesOnHorizontal);\n        var positionMapVertical = findAppropriatePositionForRelativePlacement(dagOnVertical, \"vertical\", fixedNodesOnVertical, dummyPositionsForHorizontalAlignment, componentSourcesOnVertical);\n\n        // update positions of the nodes based on relative placement constraints\n\n        var _loop9 = function _loop9(key) {\n          if (dummyToNodeForVerticalAlignment.get(key)) {\n            dummyToNodeForVerticalAlignment.get(key).forEach(function (nodeId) {\n              xCoords[nodeIndexes.get(nodeId)] = positionMapHorizontal.get(key);\n            });\n          } else {\n            xCoords[nodeIndexes.get(key)] = positionMapHorizontal.get(key);\n          }\n        };\n\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = positionMapHorizontal.keys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var key = _step6.value;\n\n            _loop9(key);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n\n        var _loop10 = function _loop10(key) {\n          if (dummyToNodeForHorizontalAlignment.get(key)) {\n            dummyToNodeForHorizontalAlignment.get(key).forEach(function (nodeId) {\n              yCoords[nodeIndexes.get(nodeId)] = positionMapVertical.get(key);\n            });\n          } else {\n            yCoords[nodeIndexes.get(key)] = positionMapVertical.get(key);\n          }\n        };\n\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = positionMapVertical.keys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var key = _step7.value;\n\n            _loop10(key);\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n      })();\n    }\n  }\n\n  // assign new coordinates to nodes after constraint handling\n  for (var _i13 = 0; _i13 < allNodes.length; _i13++) {\n    var _node = allNodes[_i13];\n    if (_node.getChild() == null) {\n      _node.setCenter(xCoords[nodeIndexes.get(_node.id)], yCoords[nodeIndexes.get(_node.id)]);\n    }\n  }\n};\n\nmodule.exports = ConstraintHandler;\n\n/***/ }),\n\n/***/ 551:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__551__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __webpack_exports__ = __webpack_require__(45);\n/******/ \t\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});"],"x_google_ignoreList":[0,1,2,3]}