{"version":3,"file":"polyfills.72e47915d66af816.js","mappings":"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","names":["_typeof","__webpack_require__","default","toPrimitive","module","exports","toPropertyKey","t","i","__esModule","_defineProperty","require","global","globalThis","__symbol__","name","__Zone_symbol_prefix","ObjectGetOwnPropertyDescriptor","Object","getOwnPropertyDescriptor","ObjectDefineProperty","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","ObjectCreate","create","ArraySlice","Array","prototype","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrapWithCurrentZone","callback","source","Zone","current","wrap","scheduleMacroTaskWithCurrentZone","data","customSchedule","customCancel","scheduleMacroTask","zoneSymbol","isWindowExists","window","internalWindow","undefined","_global","bindArguments","args","length","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","self","isNode","process","toString","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","enableBeforeunloadSymbol","wrapFn","event","eventNameSymbol","type","target","this","listener","result","call","message","filename","lineno","colno","error","preventDefault","apply","arguments","returnValue","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","hasOwnProperty","value","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","patchOnProperties","properties","onProperties","push","j","originalInstanceKey","patchClass","className","OriginalClass","a","Error","attachOriginToPatched","instance","fn","patchMethod","patchFn","proto","delegateName","delegate","patchDelegate","patchMacroTask","funcName","metaCreator","setNative","scheduleTask","task","cbIdx","invoke","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIEOrEdge","ua","navigator","userAgent","indexOf","isFunction","isNumber","OPTIMIZED_ZONE_EVENT_TASK_DATA","useG","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbol","symbolCapture","patchEventTarget","api","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","isRemoved","handleEvent","originalDelegate","err","options","once","globalCallback","context","isCapture","tasks","errors","copyTasks","nativeScheduleMicroTask","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","checkDuplicate","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","splice","removeAbortListener","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isEventListenerObject","passive","copyEventListenerOptions","newOptions","signal","buildEventListenerOptions","aborted","zone","constructorName","constructor","targetSource","scheduleEventTask","onAbort","cancelTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","patchEventPrototype","Event","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleOrId","handleId","handle","isRefreshable","refresh","clearTask","isPeriodic","delay","originalRefresh","state","_state","_updateTaskCount","id","cancelFn","filterProperties","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","patchCallbacks","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","_redefineProperty","Zone$1","loadZone","initZone","performance","mark","performanceMeasure","label","measure","ZoneImpl","assertZonePatched","Promise","patches","ZoneAwarePromise","root","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","ignoreDuplicate","perfName","_api","_parent","_name","zoneSpec","_properties","_zoneDelegate","_ZoneDelegate","key","getZoneWith","fork","_callback","intercept","runGuarded","run","applyThis","applyArgs","handleError","runTask","NO_ZONE","zoneTask","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","unknown","scheduling","zoneDelegates","_zoneDelegates","newZone","_zone","scheduleMicroTask","ZoneTask","microTask","canceling","runCount","count","DELEGATE_ZS","onHasTask","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","returnTask","scheduleFn","isEmpty","counts","_taskCounts","prev","next","change","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","func","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","currentZoneFrame","noop","showUncaughtError","patchThen","getGlobalObjects","patchCommon","patchPromise","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","v","resolvePromise","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","readableObjectToString","JSON","stringify","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","AggregateError","withResolvers","res","rej","any","values","Symbol","iterator","promises","finished","race","onResolve","onReject","all","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","patchUtil","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchBrowser","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchQueueMicrotask","r","String","Number","o"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@babel/runtime/helpers/toPropertyKey.js","./node_modules/zone.js/fesm2015/zone.js","./node_modules/@babel/runtime/helpers/toPrimitive.js","./node_modules/@babel/runtime/helpers/defineProperty.js","./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        static __symbol__ = __symbol__;\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        _parent;\n        _name;\n        _properties;\n        _zoneDelegate;\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            const zoneTask = task;\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            const { type, data: { isPeriodic = false, isRefreshable = false } = {} } = task;\n            if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && zoneTask._transitionTo(running, scheduled);\n            const previousTask = _currentTask;\n            _currentTask = zoneTask;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                const state = task.state;\n                if (state !== notScheduled && state !== unknown) {\n                    if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                        reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                    }\n                    else {\n                        const zoneDelegates = zoneTask._zoneDelegates;\n                        this._updateTaskCount(zoneTask, -1);\n                        reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                        if (isRefreshable) {\n                            zoneTask._zoneDelegates = zoneDelegates;\n                        }\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = -1;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        _zone;\n        _taskCounts = {\n            'microTask': 0,\n            'macroTask': 0,\n            'eventTask': 0,\n        };\n        _parentDelegate;\n        _forkDlgt;\n        _forkZS;\n        _forkCurrZone;\n        _interceptDlgt;\n        _interceptZS;\n        _interceptCurrZone;\n        _invokeDlgt;\n        _invokeZS;\n        _invokeCurrZone;\n        _handleErrorDlgt;\n        _handleErrorZS;\n        _handleErrorCurrZone;\n        _scheduleTaskDlgt;\n        _scheduleTaskZS;\n        _scheduleTaskCurrZone;\n        _invokeTaskDlgt;\n        _invokeTaskZS;\n        _invokeTaskCurrZone;\n        _cancelTaskDlgt;\n        _cancelTaskZS;\n        _cancelTaskCurrZone;\n        _hasTaskDlgt;\n        _hasTaskDlgtOwner;\n        _hasTaskZS;\n        _hasTaskCurrZone;\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        type;\n        source;\n        invoke;\n        callback;\n        data;\n        scheduleFn;\n        cancelFn;\n        _zone = null;\n        runCount = 0;\n        _zoneDelegates = null;\n        _state = 'notScheduled';\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (\n        // https://github.com/angular/angular/issues/47579\n        // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n        // This is the only specific case we should check for. The spec defines that the\n        // `returnValue` attribute represents the message to show the user. When the event\n        // is created, this attribute must be set to the empty string.\n        event.type === 'beforeunload' &&\n            // To prevent any breaking changes resulting from this change, given that\n            // it was already causing a significant number of failures in G3, we have hidden\n            // that behavior behind a global configuration flag. Consumers can enable this\n            // flag explicitly if they want the `beforeunload` event to be handled as defined\n            // in the specification.\n            _global[enableBeforeunloadSymbol] &&\n            // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n            // `typeof result` is a string.\n            typeof result === 'string') {\n            event.returnValue = result;\n        }\n        else if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // In some versions of Windows, the `this` context may be undefined\n        // in on-property callbacks.\n        // To handle this edge case, we check if `this` is falsy and\n        // fallback to `_global` if needed.\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // https://github.com/angular/zone.js/issues/978\n        // If an inline handler (like `onload`) was defined before zone.js was loaded,\n        // call the original descriptor's setter to clean it up.\n        originalDescSet?.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n        // eliminating the need to create a new object solely for passing data.\n        // WARNING: This object has a static lifetime, meaning it is not created\n        // each time `addEventListener` is called. It is instantiated only once\n        // and captured by reference inside the `addEventListener` and\n        // `removeEventListener` functions. Do not add any new properties to this\n        // object, as doing so would necessitate maintaining the information\n        // between `addEventListener` calls.\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        /**\n         * In the context of events and listeners, this function will be\n         * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n         * Cancelling a task is primarily used to remove event listeners from\n         * the task target.\n         */\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (task.removeAbortListener) {\n                                task.removeAbortListener();\n                                task.removeAbortListener = null;\n                            }\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions?.diff || compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        function copyEventListenerOptions(options) {\n            if (typeof options === 'object' && options !== null) {\n                // We need to destructure the target `options` object since it may\n                // be frozen or sealed (possibly provided implicitly by a third-party\n                // library), or its properties may be readonly.\n                const newOptions = { ...options };\n                // The `signal` option was recently introduced, which caused regressions in\n                // third-party scenarios where `AbortController` was directly provided to\n                // `addEventListener` as options. For instance, in cases like\n                // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                // which is valid because `AbortController` includes a `signal` getter, spreading\n                // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                // isn't feasible since `AbortController` is a built-in object type, and attempting\n                // to create a new object directly with it as the prototype might result in\n                // unexpected behavior.\n                if (options.signal) {\n                    newOptions.signal = options.signal;\n                }\n                return newOptions;\n            }\n            return options;\n        }\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // To improve `addEventListener` performance, we will create the callback\n                // for the task later when the task is invoked.\n                let isEventListenerObject = false;\n                if (typeof delegate !== 'function') {\n                    // This checks whether the provided listener argument is an object with\n                    // a `handleEvent` method (since we can call `addEventListener` with a\n                    // function `event => ...` or with an object `{ handleEvent: event => ... }`).\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isEventListenerObject = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // In the code below, `options` should no longer be reassigned; instead, it\n                // should only be mutated. This is because we pass that object to the native\n                // `addEventListener`.\n                // It's generally recommended to use the same object reference for options.\n                // This ensures consistency and avoids potential issues.\n                taskData.options = options;\n                if (once) {\n                    // When using `addEventListener` with the `once` option, we don't pass\n                    // the `once` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `once` setting and handle it ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // When using `addEventListener` with the `signal` option, we don't pass\n                    // the `signal` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `signal` setting and handle it ourselves.\n                    taskData.options.signal = undefined;\n                }\n                // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                // is updated before scheduling the task, as `customScheduleGlobal` uses\n                // `taskData.options` to pass it to the native `addEventListener`.\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    taskData.options.once = true;\n                }\n                if (typeof task.options !== 'boolean') {\n                    // We should save the options on the task (if it's an object) because\n                    // we'll be using `task.options` later when removing the event listener\n                    // and passing it back to `removeEventListener`.\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isEventListenerObject) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            // `existingTasks` may not exist if the `addEventListener` was called before\n            // it was patched by zone.js. Please refer to the attached issue for\n            // clarification, particularly after the `if` condition, before calling\n            // the native `removeEventListener`.\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // In all other conditions, when `addEventListener` is called after being\n                        // patched by zone.js, we would always find an event task on the `EventTarget`.\n                        // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                        // which ultimately removes an event listener and cleans up the abort listener\n                        // (if an `AbortSignal` was provided when scheduling a task).\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // https://github.com/angular/zone.js/issues/930\n            // We may encounter a situation where the `addEventListener` was\n            // called on the event target before zone.js is loaded, resulting\n            // in no task being stored on the event target due to its invocation\n            // of the native implementation. In this scenario, we simply need to\n            // invoke the native `removeEventListener`.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        const handleOrId = setNative.apply(window, data.args);\n        // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n        // to this so that we do not cause potentally leaks when using `setTimeout`\n        // since this can be periodic when using `.refresh`.\n        if (isNumber(handleOrId)) {\n            data.handleId = handleOrId;\n        }\n        else {\n            data.handle = handleOrId;\n            // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n            data.isRefreshable = isFunction(handleOrId.refresh);\n        }\n        return task;\n    }\n    function clearTask(task) {\n        const { handle, handleId } = task.data;\n        return clearNative.call(window, handle ?? handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (isFunction(args[0])) {\n            const options = {\n                isRefreshable: false,\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    const { handle, handleId, isPeriodic, isRefreshable } = options;\n                    if (!isPeriodic && !isRefreshable) {\n                        if (handleId) {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[handleId];\n                        }\n                        else if (handle) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            handle[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const { handleId, handle, isRefreshable, isPeriodic } = task.data;\n            if (handleId) {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handleId] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n                if (isRefreshable && !isPeriodic) {\n                    const originalRefresh = handle.refresh;\n                    handle.refresh = function () {\n                        const { zone, state } = task;\n                        if (state === 'notScheduled') {\n                            task._state = 'scheduled';\n                            zone._updateTaskCount(task, 1);\n                        }\n                        else if (state === 'running') {\n                            task._state = 'scheduling';\n                        }\n                        return originalRefresh.call(this);\n                    };\n                }\n            }\n            return handle ?? handleId ?? task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (isNumber(id)) {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n            delete tasksByHandleId[id];\n        }\n        else {\n            // nodejs env ?? other environments.\n            task = id?.[taskSymbol];\n            if (task) {\n                id[taskSymbol] = null;\n            }\n            else {\n                task = id;\n            }\n        }\n        if (task?.type) {\n            if (task.cancelFn) {\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = [];\n        // In older browsers like IE or Edge, event handler properties (e.g., `onclick`)\n        // may not be defined directly on the `window` object but on its prototype (`WindowPrototype`).\n        // To ensure complete coverage, we use the prototype when checking\n        // for and patching these properties.\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target?.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && typeof value.then === 'function';\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"x_google_ignoreList":[0,1,2,3,4]}