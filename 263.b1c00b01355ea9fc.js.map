{"version":3,"file":"263.b1c00b01355ea9fc.js","mappings":"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","names":["_a","_b","parser","o","k","v","o2","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","parser2","trace","yy","symbols_","error","spaceLines","SPACELINE","NL","separator","SPACE","EOF","start","BLOCK_DIAGRAM_KEY","document","stop","statement","link","LINK","START_LINK","LINK_LABEL","STR","nodeStatement","columnsStatement","SPACE_BLOCK","blockStatement","classDefStatement","cssClassStatement","styleStatement","node","SIZE","COLUMNS","end","block","NODE_ID","nodeShapeNLabel","dirList","DIR","NODE_DSTART","NODE_DEND","BLOCK_ARROW_START","BLOCK_ARROW_END","classDef","CLASSDEF_ID","CLASSDEF_STYLEOPTS","DEFAULT","class","CLASSENTITY_IDS","STYLECLASS","style","STYLE_ENTITY_IDS","STYLE_DEFINITION_DATA","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","getLogger","debug","setHierarchy","this","$","concat","edgeTypeStr","label","num","parseInt","spaceId","generateId","id","type","width","children","edgeData","edgeStrToEdgeData","directions","arrowTypeEnd","arrowTypeStart","typeStr2Type","typeStr","widthInColumns","columns","trim","css","styleClass","stylesStr","table","defaultActions","parseError","str","hash","recoverable","Error","parse","input","stack","tstack","vstack","lstack","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","token","ranges","options","getPrototypeOf","symbol","state","action","r","p","len","expected","yyval","pop","lex","Array","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","Parser","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","INITIAL","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","STYLE_DEFINITION","inclusive","STYLE_STMNT","CLASSDEFID","CLASSDEF","CLASS_STYLE","CLASS","LLABEL","ARROW_DIR","BLOCK_ARROW","NODE","md_string","space","string","acc_descr_multiline","acc_descr","acc_title","parser$1","blockDatabase","edgeList","edgeCount","config","getConfig","classes","sanitizeText","txt","common","addStyleClass","styleAttributes","styles","textStyles","foundClass","forEach","attrib","fixedAttrib","newStyle2","addStyle2Node","setCssClass","itemIds","cssClassName","foundBlock","trimmedId","populateBlockDatabase","_blockList","parent","blockList","flat","newBlock","w","j","newBlock2","clone","blocks","rootBlock","cnt","db$1","getConfig$1","log","edgeTypeStr2Type","console","getBlocksFlat","values","getBlocks","getEdges","getBlock","setBlock","getColumns","blockId","getClasses","clear","clear$1","root","random","toString","fade","color","opacity","channel","khroma","g","b","getNodeFromBlock","db2","positioned","_a2","_b2","_c","vertex","classStr","padding2","radius","shape","getStylesFromArray","bounds","size","height","x","y","labelStyle","labelText","rx","ry","intersect","padding","calculateBlockSize","_x","_x2","_x3","_calculateBlockSize","_asyncToGenerator","elem","nodeEl","insertNode","boundingBox","getBBox","obj","remove","insertBlockPositioned","_x4","_x5","_x6","_insertBlockPositioned","positionNode","performOperations","_x7","_x8","_x9","_x0","_performOperations","blocks2","operation","_calculateBlockSizes","_insertBlocks","_insertEdges","edges","graphlib","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setNode","edge","startBlock","endBlock","points","insertEdge","name","insertEdgeLabel","positionEdgeLabel","originalPath","calculateBlockPosition","position","Number","isInteger","px","py","floor","setBlockSizes","siblingWidth","siblingHeight","_d","_e","_f","_g","_h","_i","_j","_k","maxWidth","maxHeight","child","childSize","getMaxChildSize","numItems","xSize","ySize","ceil","childWidth","childHeight","max","min","layoutBlocks","_l","_m","_n","_o","_p","_q","columnPos","startingPosX","rowPos","width2","halfWidth","findBounds","minX","minY","maxX","maxY","layout","JSON","stringify","diagram","db","renderer","draw","_ref","_version","diagObj","securityLevel","conf","sandboxElement","select","nodes","contentDocument","body","svg","insertMarkers","bl","blArr","insert","attr","calculateBlockSizes","_x1","_x10","_x11","insertBlocks","_x12","_x13","_x14","insertEdges","_x15","_x16","_x17","_x18","_x19","bounds2","magicFactor","round","useMaxWidth","configureSvgSize","scaleOrdinal","schemeTableau10","_x20","_x21","_x22","_x23","fontFamily","nodeTextColor","textColor","titleColor","mainBkg","nodeBorder","arrowheadColor","lineColor","edgeLabelBackground","clusterBkg","clusterBorder","tertiaryColor","border2","__WEBPACK_DEFAULT_EXPORT__","value","baseClone"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/mermaid/dist/blockDiagram-38ab4fdb.js","./node_modules/lodash-es/clone.js"],"sourcesContent":["var _a, _b;\nimport { c as getConfig, F as getConfig$1, l as log, v as clear$1, e as common, k as getStylesFromArray, i as configureSvgSize } from \"./mermaid-b5860b54.js\";\nimport clone from \"lodash-es/clone.js\";\nimport * as khroma from \"khroma\";\nimport { h as insertEdge, f as insertEdgeLabel, j as positionEdgeLabel, e as insertNode, p as positionNode, a as insertMarkers } from \"./edges-e0da2a9e.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { select, scaleOrdinal, schemeTableau10 } from \"d3\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 7], $V1 = [1, 13], $V2 = [1, 14], $V3 = [1, 15], $V4 = [1, 19], $V5 = [1, 16], $V6 = [1, 17], $V7 = [1, 18], $V8 = [8, 30], $V9 = [8, 21, 28, 29, 30, 31, 32, 40, 44, 47], $Va = [1, 23], $Vb = [1, 24], $Vc = [8, 15, 16, 21, 28, 29, 30, 31, 32, 40, 44, 47], $Vd = [8, 15, 16, 21, 27, 28, 29, 30, 31, 32, 40, 44, 47], $Ve = [1, 49];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"spaceLines\": 3, \"SPACELINE\": 4, \"NL\": 5, \"separator\": 6, \"SPACE\": 7, \"EOF\": 8, \"start\": 9, \"BLOCK_DIAGRAM_KEY\": 10, \"document\": 11, \"stop\": 12, \"statement\": 13, \"link\": 14, \"LINK\": 15, \"START_LINK\": 16, \"LINK_LABEL\": 17, \"STR\": 18, \"nodeStatement\": 19, \"columnsStatement\": 20, \"SPACE_BLOCK\": 21, \"blockStatement\": 22, \"classDefStatement\": 23, \"cssClassStatement\": 24, \"styleStatement\": 25, \"node\": 26, \"SIZE\": 27, \"COLUMNS\": 28, \"id-block\": 29, \"end\": 30, \"block\": 31, \"NODE_ID\": 32, \"nodeShapeNLabel\": 33, \"dirList\": 34, \"DIR\": 35, \"NODE_DSTART\": 36, \"NODE_DEND\": 37, \"BLOCK_ARROW_START\": 38, \"BLOCK_ARROW_END\": 39, \"classDef\": 40, \"CLASSDEF_ID\": 41, \"CLASSDEF_STYLEOPTS\": 42, \"DEFAULT\": 43, \"class\": 44, \"CLASSENTITY_IDS\": 45, \"STYLECLASS\": 46, \"style\": 47, \"STYLE_ENTITY_IDS\": 48, \"STYLE_DEFINITION_DATA\": 49, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"SPACELINE\", 5: \"NL\", 7: \"SPACE\", 8: \"EOF\", 10: \"BLOCK_DIAGRAM_KEY\", 15: \"LINK\", 16: \"START_LINK\", 17: \"LINK_LABEL\", 18: \"STR\", 21: \"SPACE_BLOCK\", 27: \"SIZE\", 28: \"COLUMNS\", 29: \"id-block\", 30: \"end\", 31: \"block\", 32: \"NODE_ID\", 35: \"DIR\", 36: \"NODE_DSTART\", 37: \"NODE_DEND\", 38: \"BLOCK_ARROW_START\", 39: \"BLOCK_ARROW_END\", 40: \"classDef\", 41: \"CLASSDEF_ID\", 42: \"CLASSDEF_STYLEOPTS\", 43: \"DEFAULT\", 44: \"class\", 45: \"CLASSENTITY_IDS\", 46: \"STYLECLASS\", 47: \"style\", 48: \"STYLE_ENTITY_IDS\", 49: \"STYLE_DEFINITION_DATA\" },\n    productions_: [0, [3, 1], [3, 2], [3, 2], [6, 1], [6, 1], [6, 1], [9, 3], [12, 1], [12, 1], [12, 2], [12, 2], [11, 1], [11, 2], [14, 1], [14, 4], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [13, 1], [19, 3], [19, 2], [19, 1], [20, 1], [22, 4], [22, 3], [26, 1], [26, 2], [34, 1], [34, 2], [33, 3], [33, 4], [23, 3], [23, 3], [24, 3], [25, 3]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 4:\n          yy.getLogger().debug(\"Rule: separator (NL) \");\n          break;\n        case 5:\n          yy.getLogger().debug(\"Rule: separator (Space) \");\n          break;\n        case 6:\n          yy.getLogger().debug(\"Rule: separator (EOF) \");\n          break;\n        case 7:\n          yy.getLogger().debug(\"Rule: hierarchy: \", $$[$0 - 1]);\n          yy.setHierarchy($$[$0 - 1]);\n          break;\n        case 8:\n          yy.getLogger().debug(\"Stop NL \");\n          break;\n        case 9:\n          yy.getLogger().debug(\"Stop EOF \");\n          break;\n        case 10:\n          yy.getLogger().debug(\"Stop NL2 \");\n          break;\n        case 11:\n          yy.getLogger().debug(\"Stop EOF2 \");\n          break;\n        case 12:\n          yy.getLogger().debug(\"Rule: statement: \", $$[$0]);\n          typeof $$[$0].length === \"number\" ? this.$ = $$[$0] : this.$ = [$$[$0]];\n          break;\n        case 13:\n          yy.getLogger().debug(\"Rule: statement #2: \", $$[$0 - 1]);\n          this.$ = [$$[$0 - 1]].concat($$[$0]);\n          break;\n        case 14:\n          yy.getLogger().debug(\"Rule: link: \", $$[$0], yytext);\n          this.$ = { edgeTypeStr: $$[$0], label: \"\" };\n          break;\n        case 15:\n          yy.getLogger().debug(\"Rule: LABEL link: \", $$[$0 - 3], $$[$0 - 1], $$[$0]);\n          this.$ = { edgeTypeStr: $$[$0], label: $$[$0 - 1] };\n          break;\n        case 18:\n          const num = parseInt($$[$0]);\n          const spaceId = yy.generateId();\n          this.$ = { id: spaceId, type: \"space\", label: \"\", width: num, children: [] };\n          break;\n        case 23:\n          yy.getLogger().debug(\"Rule: (nodeStatement link node) \", $$[$0 - 2], $$[$0 - 1], $$[$0], \" typestr: \", $$[$0 - 1].edgeTypeStr);\n          const edgeData = yy.edgeStrToEdgeData($$[$0 - 1].edgeTypeStr);\n          this.$ = [\n            { id: $$[$0 - 2].id, label: $$[$0 - 2].label, type: $$[$0 - 2].type, directions: $$[$0 - 2].directions },\n            { id: $$[$0 - 2].id + \"-\" + $$[$0].id, start: $$[$0 - 2].id, end: $$[$0].id, label: $$[$0 - 1].label, type: \"edge\", directions: $$[$0].directions, arrowTypeEnd: edgeData, arrowTypeStart: \"arrow_open\" },\n            { id: $$[$0].id, label: $$[$0].label, type: yy.typeStr2Type($$[$0].typeStr), directions: $$[$0].directions }\n          ];\n          break;\n        case 24:\n          yy.getLogger().debug(\"Rule: nodeStatement (abc88 node size) \", $$[$0 - 1], $$[$0]);\n          this.$ = { id: $$[$0 - 1].id, label: $$[$0 - 1].label, type: yy.typeStr2Type($$[$0 - 1].typeStr), directions: $$[$0 - 1].directions, widthInColumns: parseInt($$[$0], 10) };\n          break;\n        case 25:\n          yy.getLogger().debug(\"Rule: nodeStatement (node) \", $$[$0]);\n          this.$ = { id: $$[$0].id, label: $$[$0].label, type: yy.typeStr2Type($$[$0].typeStr), directions: $$[$0].directions, widthInColumns: 1 };\n          break;\n        case 26:\n          yy.getLogger().debug(\"APA123\", this ? this : \"na\");\n          yy.getLogger().debug(\"COLUMNS: \", $$[$0]);\n          this.$ = { type: \"column-setting\", columns: $$[$0] === \"auto\" ? -1 : parseInt($$[$0]) };\n          break;\n        case 27:\n          yy.getLogger().debug(\"Rule: id-block statement : \", $$[$0 - 2], $$[$0 - 1]);\n          yy.generateId();\n          this.$ = { ...$$[$0 - 2], type: \"composite\", children: $$[$0 - 1] };\n          break;\n        case 28:\n          yy.getLogger().debug(\"Rule: blockStatement : \", $$[$0 - 2], $$[$0 - 1], $$[$0]);\n          const id = yy.generateId();\n          this.$ = { id, type: \"composite\", label: \"\", children: $$[$0 - 1] };\n          break;\n        case 29:\n          yy.getLogger().debug(\"Rule: node (NODE_ID separator): \", $$[$0]);\n          this.$ = { id: $$[$0] };\n          break;\n        case 30:\n          yy.getLogger().debug(\"Rule: node (NODE_ID nodeShapeNLabel separator): \", $$[$0 - 1], $$[$0]);\n          this.$ = { id: $$[$0 - 1], label: $$[$0].label, typeStr: $$[$0].typeStr, directions: $$[$0].directions };\n          break;\n        case 31:\n          yy.getLogger().debug(\"Rule: dirList: \", $$[$0]);\n          this.$ = [$$[$0]];\n          break;\n        case 32:\n          yy.getLogger().debug(\"Rule: dirList: \", $$[$0 - 1], $$[$0]);\n          this.$ = [$$[$0 - 1]].concat($$[$0]);\n          break;\n        case 33:\n          yy.getLogger().debug(\"Rule: nodeShapeNLabel: \", $$[$0 - 2], $$[$0 - 1], $$[$0]);\n          this.$ = { typeStr: $$[$0 - 2] + $$[$0], label: $$[$0 - 1] };\n          break;\n        case 34:\n          yy.getLogger().debug(\"Rule: BLOCK_ARROW nodeShapeNLabel: \", $$[$0 - 3], $$[$0 - 2], \" #3:\", $$[$0 - 1], $$[$0]);\n          this.$ = { typeStr: $$[$0 - 3] + $$[$0], label: $$[$0 - 2], directions: $$[$0 - 1] };\n          break;\n        case 35:\n        case 36:\n          this.$ = { type: \"classDef\", id: $$[$0 - 1].trim(), css: $$[$0].trim() };\n          break;\n        case 37:\n          this.$ = { type: \"applyClass\", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\n          break;\n        case 38:\n          this.$ = { type: \"applyStyles\", id: $$[$0 - 1].trim(), stylesStr: $$[$0].trim() };\n          break;\n      }\n    },\n    table: [{ 9: 1, 10: [1, 2] }, { 1: [3] }, { 11: 3, 13: 4, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 8: [1, 20] }, o($V8, [2, 12], { 13: 4, 19: 5, 20: 6, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 11: 21, 21: $V0, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }), o($V9, [2, 16], { 14: 22, 15: $Va, 16: $Vb }), o($V9, [2, 17]), o($V9, [2, 18]), o($V9, [2, 19]), o($V9, [2, 20]), o($V9, [2, 21]), o($V9, [2, 22]), o($Vc, [2, 25], { 27: [1, 25] }), o($V9, [2, 26]), { 19: 26, 26: 12, 32: $V4 }, { 11: 27, 13: 4, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 41: [1, 28], 43: [1, 29] }, { 45: [1, 30] }, { 48: [1, 31] }, o($Vd, [2, 29], { 33: 32, 36: [1, 33], 38: [1, 34] }), { 1: [2, 7] }, o($V8, [2, 13]), { 26: 35, 32: $V4 }, { 32: [2, 14] }, { 17: [1, 36] }, o($Vc, [2, 24]), { 11: 37, 13: 4, 14: 22, 15: $Va, 16: $Vb, 19: 5, 20: 6, 21: $V0, 22: 8, 23: 9, 24: 10, 25: 11, 26: 12, 28: $V1, 29: $V2, 31: $V3, 32: $V4, 40: $V5, 44: $V6, 47: $V7 }, { 30: [1, 38] }, { 42: [1, 39] }, { 42: [1, 40] }, { 46: [1, 41] }, { 49: [1, 42] }, o($Vd, [2, 30]), { 18: [1, 43] }, { 18: [1, 44] }, o($Vc, [2, 23]), { 18: [1, 45] }, { 30: [1, 46] }, o($V9, [2, 28]), o($V9, [2, 35]), o($V9, [2, 36]), o($V9, [2, 37]), o($V9, [2, 38]), { 37: [1, 47] }, { 34: 48, 35: $Ve }, { 15: [1, 50] }, o($V9, [2, 27]), o($Vd, [2, 33]), { 39: [1, 51] }, { 34: 52, 35: $Ve, 39: [2, 31] }, { 32: [2, 15] }, o($Vd, [2, 34]), { 39: [2, 32] }],\n    defaultActions: { 20: [2, 7], 23: [2, 14], 50: [2, 15], 52: [2, 32] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {},\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 10;\n          case 1:\n            yy.getLogger().debug(\"Found space-block\");\n            return 31;\n          case 2:\n            yy.getLogger().debug(\"Found nl-block\");\n            return 31;\n          case 3:\n            yy.getLogger().debug(\"Found space-block\");\n            return 29;\n          case 4:\n            yy.getLogger().debug(\".\", yy_.yytext);\n            break;\n          case 5:\n            yy.getLogger().debug(\"_\", yy_.yytext);\n            break;\n          case 6:\n            return 5;\n          case 7:\n            yy_.yytext = -1;\n            return 28;\n          case 8:\n            yy_.yytext = yy_.yytext.replace(/columns\\s+/, \"\");\n            yy.getLogger().debug(\"COLUMNS (LEX)\", yy_.yytext);\n            return 28;\n          case 9:\n            this.pushState(\"md_string\");\n            break;\n          case 10:\n            return \"MD_STR\";\n          case 11:\n            this.popState();\n            break;\n          case 12:\n            this.pushState(\"string\");\n            break;\n          case 13:\n            yy.getLogger().debug(\"LEX: POPPING STR:\", yy_.yytext);\n            this.popState();\n            break;\n          case 14:\n            yy.getLogger().debug(\"LEX: STR end:\", yy_.yytext);\n            return \"STR\";\n          case 15:\n            yy_.yytext = yy_.yytext.replace(/space\\:/, \"\");\n            yy.getLogger().debug(\"SPACE NUM (LEX)\", yy_.yytext);\n            return 21;\n          case 16:\n            yy_.yytext = \"1\";\n            yy.getLogger().debug(\"COLUMNS (LEX)\", yy_.yytext);\n            return 21;\n          case 17:\n            return 43;\n          case 18:\n            return \"LINKSTYLE\";\n          case 19:\n            return \"INTERPOLATE\";\n          case 20:\n            this.pushState(\"CLASSDEF\");\n            return 40;\n          case 21:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return \"DEFAULT_CLASSDEF_ID\";\n          case 22:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return 41;\n          case 23:\n            this.popState();\n            return 42;\n          case 24:\n            this.pushState(\"CLASS\");\n            return 44;\n          case 25:\n            this.popState();\n            this.pushState(\"CLASS_STYLE\");\n            return 45;\n          case 26:\n            this.popState();\n            return 46;\n          case 27:\n            this.pushState(\"STYLE_STMNT\");\n            return 47;\n          case 28:\n            this.popState();\n            this.pushState(\"STYLE_DEFINITION\");\n            return 48;\n          case 29:\n            this.popState();\n            return 49;\n          case 30:\n            this.pushState(\"acc_title\");\n            return \"acc_title\";\n          case 31:\n            this.popState();\n            return \"acc_title_value\";\n          case 32:\n            this.pushState(\"acc_descr\");\n            return \"acc_descr\";\n          case 33:\n            this.popState();\n            return \"acc_descr_value\";\n          case 34:\n            this.pushState(\"acc_descr_multiline\");\n            break;\n          case 35:\n            this.popState();\n            break;\n          case 36:\n            return \"acc_descr_multiline_value\";\n          case 37:\n            return 30;\n          case 38:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 39:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 40:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ))\");\n            return \"NODE_DEND\";\n          case 41:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 42:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 43:\n            this.popState();\n            yy.getLogger().debug(\"Lex: (-\");\n            return \"NODE_DEND\";\n          case 44:\n            this.popState();\n            yy.getLogger().debug(\"Lex: -)\");\n            return \"NODE_DEND\";\n          case 45:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ((\");\n            return \"NODE_DEND\";\n          case 46:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ]]\");\n            return \"NODE_DEND\";\n          case 47:\n            this.popState();\n            yy.getLogger().debug(\"Lex: (\");\n            return \"NODE_DEND\";\n          case 48:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ])\");\n            return \"NODE_DEND\";\n          case 49:\n            this.popState();\n            yy.getLogger().debug(\"Lex: /]\");\n            return \"NODE_DEND\";\n          case 50:\n            this.popState();\n            yy.getLogger().debug(\"Lex: /]\");\n            return \"NODE_DEND\";\n          case 51:\n            this.popState();\n            yy.getLogger().debug(\"Lex: )]\");\n            return \"NODE_DEND\";\n          case 52:\n            this.popState();\n            yy.getLogger().debug(\"Lex: )\");\n            return \"NODE_DEND\";\n          case 53:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ]>\");\n            return \"NODE_DEND\";\n          case 54:\n            this.popState();\n            yy.getLogger().debug(\"Lex: ]\");\n            return \"NODE_DEND\";\n          case 55:\n            yy.getLogger().debug(\"Lexa: -)\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 56:\n            yy.getLogger().debug(\"Lexa: (-\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 57:\n            yy.getLogger().debug(\"Lexa: ))\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 58:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 59:\n            yy.getLogger().debug(\"Lex: (((\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 60:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 61:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 62:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 63:\n            yy.getLogger().debug(\"Lexc: >\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 64:\n            yy.getLogger().debug(\"Lexa: ([\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 65:\n            yy.getLogger().debug(\"Lexa: )\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 66:\n            this.pushState(\"NODE\");\n            return 36;\n          case 67:\n            this.pushState(\"NODE\");\n            return 36;\n          case 68:\n            this.pushState(\"NODE\");\n            return 36;\n          case 69:\n            this.pushState(\"NODE\");\n            return 36;\n          case 70:\n            this.pushState(\"NODE\");\n            return 36;\n          case 71:\n            this.pushState(\"NODE\");\n            return 36;\n          case 72:\n            this.pushState(\"NODE\");\n            return 36;\n          case 73:\n            yy.getLogger().debug(\"Lexa: [\");\n            this.pushState(\"NODE\");\n            return 36;\n          case 74:\n            this.pushState(\"BLOCK_ARROW\");\n            yy.getLogger().debug(\"LEX ARR START\");\n            return 38;\n          case 75:\n            yy.getLogger().debug(\"Lex: NODE_ID\", yy_.yytext);\n            return 32;\n          case 76:\n            yy.getLogger().debug(\"Lex: EOF\", yy_.yytext);\n            return 8;\n          case 77:\n            this.pushState(\"md_string\");\n            break;\n          case 78:\n            this.pushState(\"md_string\");\n            break;\n          case 79:\n            return \"NODE_DESCR\";\n          case 80:\n            this.popState();\n            break;\n          case 81:\n            yy.getLogger().debug(\"Lex: Starting string\");\n            this.pushState(\"string\");\n            break;\n          case 82:\n            yy.getLogger().debug(\"LEX ARR: Starting string\");\n            this.pushState(\"string\");\n            break;\n          case 83:\n            yy.getLogger().debug(\"LEX: NODE_DESCR:\", yy_.yytext);\n            return \"NODE_DESCR\";\n          case 84:\n            yy.getLogger().debug(\"LEX POPPING\");\n            this.popState();\n            break;\n          case 85:\n            yy.getLogger().debug(\"Lex: =>BAE\");\n            this.pushState(\"ARROW_DIR\");\n            break;\n          case 86:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (right): dir:\", yy_.yytext);\n            return \"DIR\";\n          case 87:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (left):\", yy_.yytext);\n            return \"DIR\";\n          case 88:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (x):\", yy_.yytext);\n            return \"DIR\";\n          case 89:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (y):\", yy_.yytext);\n            return \"DIR\";\n          case 90:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (up):\", yy_.yytext);\n            return \"DIR\";\n          case 91:\n            yy_.yytext = yy_.yytext.replace(/^,\\s*/, \"\");\n            yy.getLogger().debug(\"Lex (down):\", yy_.yytext);\n            return \"DIR\";\n          case 92:\n            yy_.yytext = \"]>\";\n            yy.getLogger().debug(\"Lex (ARROW_DIR end):\", yy_.yytext);\n            this.popState();\n            this.popState();\n            return \"BLOCK_ARROW_END\";\n          case 93:\n            yy.getLogger().debug(\"Lex: LINK\", \"#\" + yy_.yytext + \"#\");\n            return 15;\n          case 94:\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 95:\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 96:\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 97:\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\n            this.pushState(\"LLABEL\");\n            return 16;\n          case 98:\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\n            this.pushState(\"LLABEL\");\n            return 16;\n          case 99:\n            yy.getLogger().debug(\"Lex: START_LINK\", yy_.yytext);\n            this.pushState(\"LLABEL\");\n            return 16;\n          case 100:\n            this.pushState(\"md_string\");\n            break;\n          case 101:\n            yy.getLogger().debug(\"Lex: Starting string\");\n            this.pushState(\"string\");\n            return \"LINK_LABEL\";\n          case 102:\n            this.popState();\n            yy.getLogger().debug(\"Lex: LINK\", \"#\" + yy_.yytext + \"#\");\n            return 15;\n          case 103:\n            this.popState();\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 104:\n            this.popState();\n            yy.getLogger().debug(\"Lex: LINK\", yy_.yytext);\n            return 15;\n          case 105:\n            yy.getLogger().debug(\"Lex: COLON\", yy_.yytext);\n            yy_.yytext = yy_.yytext.slice(1);\n            return 27;\n        }\n      },\n      rules: [/^(?:block-beta\\b)/, /^(?:block\\s+)/, /^(?:block\\n+)/, /^(?:block:)/, /^(?:[\\s]+)/, /^(?:[\\n]+)/, /^(?:((\\u000D\\u000A)|(\\u000A)))/, /^(?:columns\\s+auto\\b)/, /^(?:columns\\s+[\\d]+)/, /^(?:[\"][`])/, /^(?:[^`\"]+)/, /^(?:[`][\"])/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]*)/, /^(?:space[:]\\d+)/, /^(?:space\\b)/, /^(?:default\\b)/, /^(?:linkStyle\\b)/, /^(?:interpolate\\b)/, /^(?:classDef\\s+)/, /^(?:DEFAULT\\s+)/, /^(?:\\w+\\s+)/, /^(?:[^\\n]*)/, /^(?:class\\s+)/, /^(?:(\\w+)+((,\\s*\\w+)*))/, /^(?:[^\\n]*)/, /^(?:style\\s+)/, /^(?:(\\w+)+((,\\s*\\w+)*))/, /^(?:[^\\n]*)/, /^(?:accTitle\\s*:\\s*)/, /^(?:(?!\\n||)*[^\\n]*)/, /^(?:accDescr\\s*:\\s*)/, /^(?:(?!\\n||)*[^\\n]*)/, /^(?:accDescr\\s*\\{\\s*)/, /^(?:[\\}])/, /^(?:[^\\}]*)/, /^(?:end\\b\\s*)/, /^(?:\\(\\(\\()/, /^(?:\\)\\)\\))/, /^(?:[\\)]\\))/, /^(?:\\}\\})/, /^(?:\\})/, /^(?:\\(-)/, /^(?:-\\))/, /^(?:\\(\\()/, /^(?:\\]\\])/, /^(?:\\()/, /^(?:\\]\\))/, /^(?:\\\\\\])/, /^(?:\\/\\])/, /^(?:\\)\\])/, /^(?:[\\)])/, /^(?:\\]>)/, /^(?:[\\]])/, /^(?:-\\))/, /^(?:\\(-)/, /^(?:\\)\\))/, /^(?:\\))/, /^(?:\\(\\(\\()/, /^(?:\\(\\()/, /^(?:\\{\\{)/, /^(?:\\{)/, /^(?:>)/, /^(?:\\(\\[)/, /^(?:\\()/, /^(?:\\[\\[)/, /^(?:\\[\\|)/, /^(?:\\[\\()/, /^(?:\\)\\)\\))/, /^(?:\\[\\\\)/, /^(?:\\[\\/)/, /^(?:\\[\\\\)/, /^(?:\\[)/, /^(?:<\\[)/, /^(?:[^\\(\\[\\n\\-\\)\\{\\}\\s\\<\\>:]+)/, /^(?:$)/, /^(?:[\"][`])/, /^(?:[\"][`])/, /^(?:[^`\"]+)/, /^(?:[`][\"])/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]+)/, /^(?:[\"])/, /^(?:\\]>\\s*\\()/, /^(?:,?\\s*right\\s*)/, /^(?:,?\\s*left\\s*)/, /^(?:,?\\s*x\\s*)/, /^(?:,?\\s*y\\s*)/, /^(?:,?\\s*up\\s*)/, /^(?:,?\\s*down\\s*)/, /^(?:\\)\\s*)/, /^(?:\\s*[xo<]?--+[-xo>]\\s*)/, /^(?:\\s*[xo<]?==+[=xo>]\\s*)/, /^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/, /^(?:\\s*~~[\\~]+\\s*)/, /^(?:\\s*[xo<]?--\\s*)/, /^(?:\\s*[xo<]?==\\s*)/, /^(?:\\s*[xo<]?-\\.\\s*)/, /^(?:[\"][`])/, /^(?:[\"])/, /^(?:\\s*[xo<]?--+[-xo>]\\s*)/, /^(?:\\s*[xo<]?==+[=xo>]\\s*)/, /^(?:\\s*[xo<]?-?\\.+-[xo>]?\\s*)/, /^(?::\\d+)/],\n      conditions: { \"STYLE_DEFINITION\": { \"rules\": [29], \"inclusive\": false }, \"STYLE_STMNT\": { \"rules\": [28], \"inclusive\": false }, \"CLASSDEFID\": { \"rules\": [23], \"inclusive\": false }, \"CLASSDEF\": { \"rules\": [21, 22], \"inclusive\": false }, \"CLASS_STYLE\": { \"rules\": [26], \"inclusive\": false }, \"CLASS\": { \"rules\": [25], \"inclusive\": false }, \"LLABEL\": { \"rules\": [100, 101, 102, 103, 104], \"inclusive\": false }, \"ARROW_DIR\": { \"rules\": [86, 87, 88, 89, 90, 91, 92], \"inclusive\": false }, \"BLOCK_ARROW\": { \"rules\": [77, 82, 85], \"inclusive\": false }, \"NODE\": { \"rules\": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 81], \"inclusive\": false }, \"md_string\": { \"rules\": [10, 11, 79, 80], \"inclusive\": false }, \"space\": { \"rules\": [], \"inclusive\": false }, \"string\": { \"rules\": [13, 14, 83, 84], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [35, 36], \"inclusive\": false }, \"acc_descr\": { \"rules\": [33], \"inclusive\": false }, \"acc_title\": { \"rules\": [31], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 24, 27, 30, 32, 34, 37, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 93, 94, 95, 96, 97, 98, 99, 105], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet blockDatabase = {};\nlet edgeList = [];\nlet edgeCount = {};\nconst COLOR_KEYWORD = \"color\";\nconst FILL_KEYWORD = \"fill\";\nconst BG_FILL = \"bgFill\";\nconst STYLECLASS_SEP = \",\";\nconst config = getConfig();\nlet classes = {};\nconst sanitizeText = (txt) => common.sanitizeText(txt, config);\nconst addStyleClass = function(id, styleAttributes = \"\") {\n  if (classes[id] === void 0) {\n    classes[id] = { id, styles: [], textStyles: [] };\n  }\n  const foundClass = classes[id];\n  if (styleAttributes !== void 0 && styleAttributes !== null) {\n    styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\n      const fixedAttrib = attrib.replace(/([^;]*);/, \"$1\").trim();\n      if (attrib.match(COLOR_KEYWORD)) {\n        const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\n        const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\n        foundClass.textStyles.push(newStyle2);\n      }\n      foundClass.styles.push(fixedAttrib);\n    });\n  }\n};\nconst addStyle2Node = function(id, styles = \"\") {\n  const foundBlock = blockDatabase[id];\n  if (styles !== void 0 && styles !== null) {\n    foundBlock.styles = styles.split(STYLECLASS_SEP);\n  }\n};\nconst setCssClass = function(itemIds, cssClassName) {\n  itemIds.split(\",\").forEach(function(id) {\n    let foundBlock = blockDatabase[id];\n    if (foundBlock === void 0) {\n      const trimmedId = id.trim();\n      blockDatabase[trimmedId] = { id: trimmedId, type: \"na\", children: [] };\n      foundBlock = blockDatabase[trimmedId];\n    }\n    if (!foundBlock.classes) {\n      foundBlock.classes = [];\n    }\n    foundBlock.classes.push(cssClassName);\n  });\n};\nconst populateBlockDatabase = (_blockList, parent) => {\n  const blockList = _blockList.flat();\n  const children = [];\n  for (const block of blockList) {\n    if (block.label) {\n      block.label = sanitizeText(block.label);\n    }\n    if (block.type === \"classDef\") {\n      addStyleClass(block.id, block.css);\n      continue;\n    }\n    if (block.type === \"applyClass\") {\n      setCssClass(block.id, (block == null ? void 0 : block.styleClass) || \"\");\n      continue;\n    }\n    if (block.type === \"applyStyles\") {\n      if (block == null ? void 0 : block.stylesStr) {\n        addStyle2Node(block.id, block == null ? void 0 : block.stylesStr);\n      }\n      continue;\n    }\n    if (block.type === \"column-setting\") {\n      parent.columns = block.columns || -1;\n    } else if (block.type === \"edge\") {\n      if (edgeCount[block.id]) {\n        edgeCount[block.id]++;\n      } else {\n        edgeCount[block.id] = 1;\n      }\n      block.id = edgeCount[block.id] + \"-\" + block.id;\n      edgeList.push(block);\n    } else {\n      if (!block.label) {\n        if (block.type === \"composite\") {\n          block.label = \"\";\n        } else {\n          block.label = block.id;\n        }\n      }\n      const newBlock = !blockDatabase[block.id];\n      if (newBlock) {\n        blockDatabase[block.id] = block;\n      } else {\n        if (block.type !== \"na\") {\n          blockDatabase[block.id].type = block.type;\n        }\n        if (block.label !== block.id) {\n          blockDatabase[block.id].label = block.label;\n        }\n      }\n      if (block.children) {\n        populateBlockDatabase(block.children, block);\n      }\n      if (block.type === \"space\") {\n        const w = block.width || 1;\n        for (let j = 0; j < w; j++) {\n          const newBlock2 = clone(block);\n          newBlock2.id = newBlock2.id + \"-\" + j;\n          blockDatabase[newBlock2.id] = newBlock2;\n          children.push(newBlock2);\n        }\n      } else if (newBlock) {\n        children.push(block);\n      }\n    }\n  }\n  parent.children = children;\n};\nlet blocks = [];\nlet rootBlock = { id: \"root\", type: \"composite\", children: [], columns: -1 };\nconst clear = () => {\n  log.debug(\"Clear called\");\n  clear$1();\n  rootBlock = { id: \"root\", type: \"composite\", children: [], columns: -1 };\n  blockDatabase = { root: rootBlock };\n  blocks = [];\n  classes = {};\n  edgeList = [];\n  edgeCount = {};\n};\nfunction typeStr2Type(typeStr) {\n  log.debug(\"typeStr2Type\", typeStr);\n  switch (typeStr) {\n    case \"[]\":\n      return \"square\";\n    case \"()\":\n      log.debug(\"we have a round\");\n      return \"round\";\n    case \"(())\":\n      return \"circle\";\n    case \">]\":\n      return \"rect_left_inv_arrow\";\n    case \"{}\":\n      return \"diamond\";\n    case \"{{}}\":\n      return \"hexagon\";\n    case \"([])\":\n      return \"stadium\";\n    case \"[[]]\":\n      return \"subroutine\";\n    case \"[()]\":\n      return \"cylinder\";\n    case \"((()))\":\n      return \"doublecircle\";\n    case \"[//]\":\n      return \"lean_right\";\n    case \"[\\\\\\\\]\":\n      return \"lean_left\";\n    case \"[/\\\\]\":\n      return \"trapezoid\";\n    case \"[\\\\/]\":\n      return \"inv_trapezoid\";\n    case \"<[]>\":\n      return \"block_arrow\";\n    default:\n      return \"na\";\n  }\n}\nfunction edgeTypeStr2Type(typeStr) {\n  log.debug(\"typeStr2Type\", typeStr);\n  switch (typeStr) {\n    case \"==\":\n      return \"thick\";\n    default:\n      return \"normal\";\n  }\n}\nfunction edgeStrToEdgeData(typeStr) {\n  switch (typeStr.trim()) {\n    case \"--x\":\n      return \"arrow_cross\";\n    case \"--o\":\n      return \"arrow_circle\";\n    default:\n      return \"arrow_point\";\n  }\n}\nlet cnt = 0;\nconst generateId = () => {\n  cnt++;\n  return \"id-\" + Math.random().toString(36).substr(2, 12) + \"-\" + cnt;\n};\nconst setHierarchy = (block) => {\n  rootBlock.children = block;\n  populateBlockDatabase(block, rootBlock);\n  blocks = rootBlock.children;\n};\nconst getColumns = (blockId) => {\n  const block = blockDatabase[blockId];\n  if (!block) {\n    return -1;\n  }\n  if (block.columns) {\n    return block.columns;\n  }\n  if (!block.children) {\n    return -1;\n  }\n  return block.children.length;\n};\nconst getBlocksFlat = () => {\n  return [...Object.values(blockDatabase)];\n};\nconst getBlocks = () => {\n  return blocks || [];\n};\nconst getEdges = () => {\n  return edgeList;\n};\nconst getBlock = (id) => {\n  return blockDatabase[id];\n};\nconst setBlock = (block) => {\n  blockDatabase[block.id] = block;\n};\nconst getLogger = () => console;\nconst getClasses$1 = function() {\n  return classes;\n};\nconst db = {\n  getConfig: () => getConfig$1().block,\n  typeStr2Type,\n  edgeTypeStr2Type,\n  edgeStrToEdgeData,\n  getLogger,\n  getBlocksFlat,\n  getBlocks,\n  getEdges,\n  setHierarchy,\n  getBlock,\n  setBlock,\n  getColumns,\n  getClasses: getClasses$1,\n  clear,\n  generateId\n};\nconst db$1 = db;\nconst fade = (color, opacity) => {\n  const channel = khroma.channel;\n  const r = channel(color, \"r\");\n  const g = channel(color, \"g\");\n  const b = channel(color, \"b\");\n  return khroma.rgba(r, g, b, opacity);\n};\nconst getStyles = (options) => `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color:\n  }\n\n  .node .cluster {\n    // fill: ${fade(options.mainBkg, 0.5)};\n    fill: ${fade(options.clusterBkg, 0.5)};\n    stroke: ${fade(options.clusterBorder, 0.2)};\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\nconst flowStyles = getStyles;\nfunction getNodeFromBlock(block, db2, positioned = false) {\n  var _a2, _b2, _c;\n  const vertex = block;\n  let classStr = \"default\";\n  if ((((_a2 = vertex == null ? void 0 : vertex.classes) == null ? void 0 : _a2.length) || 0) > 0) {\n    classStr = ((vertex == null ? void 0 : vertex.classes) || []).join(\" \");\n  }\n  classStr = classStr + \" flowchart-label\";\n  let radius = 0;\n  let shape = \"\";\n  let padding2;\n  switch (vertex.type) {\n    case \"round\":\n      radius = 5;\n      shape = \"rect\";\n      break;\n    case \"composite\":\n      radius = 0;\n      shape = \"composite\";\n      padding2 = 0;\n      break;\n    case \"square\":\n      shape = \"rect\";\n      break;\n    case \"diamond\":\n      shape = \"question\";\n      break;\n    case \"hexagon\":\n      shape = \"hexagon\";\n      break;\n    case \"block_arrow\":\n      shape = \"block_arrow\";\n      break;\n    case \"odd\":\n      shape = \"rect_left_inv_arrow\";\n      break;\n    case \"lean_right\":\n      shape = \"lean_right\";\n      break;\n    case \"lean_left\":\n      shape = \"lean_left\";\n      break;\n    case \"trapezoid\":\n      shape = \"trapezoid\";\n      break;\n    case \"inv_trapezoid\":\n      shape = \"inv_trapezoid\";\n      break;\n    case \"rect_left_inv_arrow\":\n      shape = \"rect_left_inv_arrow\";\n      break;\n    case \"circle\":\n      shape = \"circle\";\n      break;\n    case \"ellipse\":\n      shape = \"ellipse\";\n      break;\n    case \"stadium\":\n      shape = \"stadium\";\n      break;\n    case \"subroutine\":\n      shape = \"subroutine\";\n      break;\n    case \"cylinder\":\n      shape = \"cylinder\";\n      break;\n    case \"group\":\n      shape = \"rect\";\n      break;\n    case \"doublecircle\":\n      shape = \"doublecircle\";\n      break;\n    default:\n      shape = \"rect\";\n  }\n  const styles = getStylesFromArray((vertex == null ? void 0 : vertex.styles) || []);\n  const vertexText = vertex.label;\n  const bounds = vertex.size || { width: 0, height: 0, x: 0, y: 0 };\n  const node = {\n    labelStyle: styles.labelStyle,\n    shape,\n    labelText: vertexText,\n    rx: radius,\n    ry: radius,\n    class: classStr,\n    style: styles.style,\n    id: vertex.id,\n    directions: vertex.directions,\n    width: bounds.width,\n    height: bounds.height,\n    x: bounds.x,\n    y: bounds.y,\n    positioned,\n    intersect: void 0,\n    type: vertex.type,\n    padding: padding2 ?? (((_c = (_b2 = getConfig$1()) == null ? void 0 : _b2.block) == null ? void 0 : _c.padding) || 0)\n  };\n  return node;\n}\nasync function calculateBlockSize(elem, block, db2) {\n  const node = getNodeFromBlock(block, db2, false);\n  if (node.type === \"group\") {\n    return;\n  }\n  const nodeEl = await insertNode(elem, node);\n  const boundingBox = nodeEl.node().getBBox();\n  const obj = db2.getBlock(node.id);\n  obj.size = { width: boundingBox.width, height: boundingBox.height, x: 0, y: 0, node: nodeEl };\n  db2.setBlock(obj);\n  nodeEl.remove();\n}\nasync function insertBlockPositioned(elem, block, db2) {\n  const node = getNodeFromBlock(block, db2, true);\n  const obj = db2.getBlock(node.id);\n  if (obj.type !== \"space\") {\n    await insertNode(elem, node);\n    block.intersect = node == null ? void 0 : node.intersect;\n    positionNode(node);\n  }\n}\nasync function performOperations(elem, blocks2, db2, operation) {\n  for (const block of blocks2) {\n    await operation(elem, block, db2);\n    if (block.children) {\n      await performOperations(elem, block.children, db2, operation);\n    }\n  }\n}\nasync function calculateBlockSizes(elem, blocks2, db2) {\n  await performOperations(elem, blocks2, db2, calculateBlockSize);\n}\nasync function insertBlocks(elem, blocks2, db2) {\n  await performOperations(elem, blocks2, db2, insertBlockPositioned);\n}\nasync function insertEdges(elem, edges, blocks2, db2, id) {\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  });\n  g.setGraph({\n    rankdir: \"TB\",\n    nodesep: 10,\n    ranksep: 10,\n    marginx: 8,\n    marginy: 8\n  });\n  for (const block of blocks2) {\n    if (block.size) {\n      g.setNode(block.id, {\n        width: block.size.width,\n        height: block.size.height,\n        intersect: block.intersect\n      });\n    }\n  }\n  for (const edge of edges) {\n    if (edge.start && edge.end) {\n      const startBlock = db2.getBlock(edge.start);\n      const endBlock = db2.getBlock(edge.end);\n      if ((startBlock == null ? void 0 : startBlock.size) && (endBlock == null ? void 0 : endBlock.size)) {\n        const start = startBlock.size;\n        const end = endBlock.size;\n        const points = [\n          { x: start.x, y: start.y },\n          { x: start.x + (end.x - start.x) / 2, y: start.y + (end.y - start.y) / 2 },\n          { x: end.x, y: end.y }\n        ];\n        await insertEdge(\n          elem,\n          { v: edge.start, w: edge.end, name: edge.id },\n          {\n            ...edge,\n            arrowTypeEnd: edge.arrowTypeEnd,\n            arrowTypeStart: edge.arrowTypeStart,\n            points,\n            classes: \"edge-thickness-normal edge-pattern-solid flowchart-link LS-a1 LE-b1\"\n          },\n          void 0,\n          \"block\",\n          g,\n          id\n        );\n        if (edge.label) {\n          await insertEdgeLabel(elem, {\n            ...edge,\n            label: edge.label,\n            labelStyle: \"stroke: #333; stroke-width: 1.5px;fill:none;\",\n            arrowTypeEnd: edge.arrowTypeEnd,\n            arrowTypeStart: edge.arrowTypeStart,\n            points,\n            classes: \"edge-thickness-normal edge-pattern-solid flowchart-link LS-a1 LE-b1\"\n          });\n          await positionEdgeLabel(\n            { ...edge, x: points[1].x, y: points[1].y },\n            {\n              originalPath: points\n            }\n          );\n        }\n      }\n    }\n  }\n}\nconst padding = ((_b = (_a = getConfig()) == null ? void 0 : _a.block) == null ? void 0 : _b.padding) || 8;\nfunction calculateBlockPosition(columns, position) {\n  if (columns === 0 || !Number.isInteger(columns)) {\n    throw new Error(\"Columns must be an integer !== 0.\");\n  }\n  if (position < 0 || !Number.isInteger(position)) {\n    throw new Error(\"Position must be a non-negative integer.\" + position);\n  }\n  if (columns < 0) {\n    return { px: position, py: 0 };\n  }\n  if (columns === 1) {\n    return { px: 0, py: position };\n  }\n  const px = position % columns;\n  const py = Math.floor(position / columns);\n  return { px, py };\n}\nconst getMaxChildSize = (block) => {\n  let maxWidth = 0;\n  let maxHeight = 0;\n  for (const child of block.children) {\n    const { width, height, x, y } = child.size || { width: 0, height: 0, x: 0, y: 0 };\n    log.debug(\n      \"getMaxChildSize abc95 child:\",\n      child.id,\n      \"width:\",\n      width,\n      \"height:\",\n      height,\n      \"x:\",\n      x,\n      \"y:\",\n      y,\n      child.type\n    );\n    if (child.type === \"space\") {\n      continue;\n    }\n    if (width > maxWidth) {\n      maxWidth = width / (block.widthInColumns || 1);\n    }\n    if (height > maxHeight) {\n      maxHeight = height;\n    }\n  }\n  return { width: maxWidth, height: maxHeight };\n};\nfunction setBlockSizes(block, db2, siblingWidth = 0, siblingHeight = 0) {\n  var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j, _k;\n  log.debug(\n    \"setBlockSizes abc95 (start)\",\n    block.id,\n    (_a2 = block == null ? void 0 : block.size) == null ? void 0 : _a2.x,\n    \"block width =\",\n    block == null ? void 0 : block.size,\n    \"sieblingWidth\",\n    siblingWidth\n  );\n  if (!((_b2 = block == null ? void 0 : block.size) == null ? void 0 : _b2.width)) {\n    block.size = {\n      width: siblingWidth,\n      height: siblingHeight,\n      x: 0,\n      y: 0\n    };\n  }\n  let maxWidth = 0;\n  let maxHeight = 0;\n  if (((_c = block.children) == null ? void 0 : _c.length) > 0) {\n    for (const child of block.children) {\n      setBlockSizes(child, db2);\n    }\n    const childSize = getMaxChildSize(block);\n    maxWidth = childSize.width;\n    maxHeight = childSize.height;\n    log.debug(\"setBlockSizes abc95 maxWidth of\", block.id, \":s children is \", maxWidth, maxHeight);\n    for (const child of block.children) {\n      if (child.size) {\n        log.debug(\n          `abc95 Setting size of children of ${block.id} id=${child.id} ${maxWidth} ${maxHeight} ${child.size}`\n        );\n        child.size.width = maxWidth * (child.widthInColumns || 1) + padding * ((child.widthInColumns || 1) - 1);\n        child.size.height = maxHeight;\n        child.size.x = 0;\n        child.size.y = 0;\n        log.debug(\n          `abc95 updating size of ${block.id} children child:${child.id} maxWidth:${maxWidth} maxHeight:${maxHeight}`\n        );\n      }\n    }\n    for (const child of block.children) {\n      setBlockSizes(child, db2, maxWidth, maxHeight);\n    }\n    const columns = block.columns || -1;\n    let numItems = 0;\n    for (const child of block.children) {\n      numItems += child.widthInColumns || 1;\n    }\n    let xSize = block.children.length;\n    if (columns > 0 && columns < numItems) {\n      xSize = columns;\n    }\n    block.widthInColumns || 1;\n    const ySize = Math.ceil(numItems / xSize);\n    let width = xSize * (maxWidth + padding) + padding;\n    let height = ySize * (maxHeight + padding) + padding;\n    if (width < siblingWidth) {\n      log.debug(\n        `Detected to small siebling: abc95 ${block.id} sieblingWidth ${siblingWidth} sieblingHeight ${siblingHeight} width ${width}`\n      );\n      width = siblingWidth;\n      height = siblingHeight;\n      const childWidth = (siblingWidth - xSize * padding - padding) / xSize;\n      const childHeight = (siblingHeight - ySize * padding - padding) / ySize;\n      log.debug(\"Size indata abc88\", block.id, \"childWidth\", childWidth, \"maxWidth\", maxWidth);\n      log.debug(\"Size indata abc88\", block.id, \"childHeight\", childHeight, \"maxHeight\", maxHeight);\n      log.debug(\"Size indata abc88 xSize\", xSize, \"padding\", padding);\n      for (const child of block.children) {\n        if (child.size) {\n          child.size.width = childWidth;\n          child.size.height = childHeight;\n          child.size.x = 0;\n          child.size.y = 0;\n        }\n      }\n    }\n    log.debug(\n      `abc95 (finale calc) ${block.id} xSize ${xSize} ySize ${ySize} columns ${columns}${block.children.length} width=${Math.max(width, ((_d = block.size) == null ? void 0 : _d.width) || 0)}`\n    );\n    if (width < (((_e = block == null ? void 0 : block.size) == null ? void 0 : _e.width) || 0)) {\n      width = ((_f = block == null ? void 0 : block.size) == null ? void 0 : _f.width) || 0;\n      const num = columns > 0 ? Math.min(block.children.length, columns) : block.children.length;\n      if (num > 0) {\n        const childWidth = (width - num * padding - padding) / num;\n        log.debug(\"abc95 (growing to fit) width\", block.id, width, (_g = block.size) == null ? void 0 : _g.width, childWidth);\n        for (const child of block.children) {\n          if (child.size) {\n            child.size.width = childWidth;\n          }\n        }\n      }\n    }\n    block.size = {\n      width,\n      height,\n      x: 0,\n      y: 0\n    };\n  }\n  log.debug(\n    \"setBlockSizes abc94 (done)\",\n    block.id,\n    (_h = block == null ? void 0 : block.size) == null ? void 0 : _h.x,\n    (_i = block == null ? void 0 : block.size) == null ? void 0 : _i.width,\n    (_j = block == null ? void 0 : block.size) == null ? void 0 : _j.y,\n    (_k = block == null ? void 0 : block.size) == null ? void 0 : _k.height\n  );\n}\nfunction layoutBlocks(block, db2) {\n  var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q;\n  log.debug(\n    `abc85 layout blocks (=>layoutBlocks) ${block.id} x: ${(_a2 = block == null ? void 0 : block.size) == null ? void 0 : _a2.x} y: ${(_b2 = block == null ? void 0 : block.size) == null ? void 0 : _b2.y} width: ${(_c = block == null ? void 0 : block.size) == null ? void 0 : _c.width}`\n  );\n  const columns = block.columns || -1;\n  log.debug(\"layoutBlocks columns abc95\", block.id, \"=>\", columns, block);\n  if (block.children && // find max width of children\n  block.children.length > 0) {\n    const width = ((_e = (_d = block == null ? void 0 : block.children[0]) == null ? void 0 : _d.size) == null ? void 0 : _e.width) || 0;\n    const widthOfChildren = block.children.length * width + (block.children.length - 1) * padding;\n    log.debug(\"widthOfChildren 88\", widthOfChildren, \"posX\");\n    let columnPos = 0;\n    log.debug(\"abc91 block?.size?.x\", block.id, (_f = block == null ? void 0 : block.size) == null ? void 0 : _f.x);\n    let startingPosX = ((_g = block == null ? void 0 : block.size) == null ? void 0 : _g.x) ? ((_h = block == null ? void 0 : block.size) == null ? void 0 : _h.x) + (-((_i = block == null ? void 0 : block.size) == null ? void 0 : _i.width) / 2 || 0) : -padding;\n    let rowPos = 0;\n    for (const child of block.children) {\n      const parent = block;\n      if (!child.size) {\n        continue;\n      }\n      const { width: width2, height } = child.size;\n      const { px, py } = calculateBlockPosition(columns, columnPos);\n      if (py != rowPos) {\n        rowPos = py;\n        startingPosX = ((_j = block == null ? void 0 : block.size) == null ? void 0 : _j.x) ? ((_k = block == null ? void 0 : block.size) == null ? void 0 : _k.x) + (-((_l = block == null ? void 0 : block.size) == null ? void 0 : _l.width) / 2 || 0) : -padding;\n        log.debug(\"New row in layout for block\", block.id, \" and child \", child.id, rowPos);\n      }\n      log.debug(\n        `abc89 layout blocks (child) id: ${child.id} Pos: ${columnPos} (px, py) ${px},${py} (${(_m = parent == null ? void 0 : parent.size) == null ? void 0 : _m.x},${(_n = parent == null ? void 0 : parent.size) == null ? void 0 : _n.y}) parent: ${parent.id} width: ${width2}${padding}`\n      );\n      if (parent.size) {\n        const halfWidth = width2 / 2;\n        child.size.x = startingPosX + padding + halfWidth;\n        log.debug(\n          `abc91 layout blocks (calc) px, pyid:${child.id} startingPos=X${startingPosX} new startingPosX${child.size.x} ${halfWidth} padding=${padding} width=${width2} halfWidth=${halfWidth} => x:${child.size.x} y:${child.size.y} ${child.widthInColumns} (width * (child?.w || 1)) / 2 ${width2 * ((child == null ? void 0 : child.widthInColumns) || 1) / 2}`\n        );\n        startingPosX = child.size.x + halfWidth;\n        child.size.y = parent.size.y - parent.size.height / 2 + py * (height + padding) + height / 2 + padding;\n        log.debug(\n          `abc88 layout blocks (calc) px, pyid:${child.id}startingPosX${startingPosX}${padding}${halfWidth}=>x:${child.size.x}y:${child.size.y}${child.widthInColumns}(width * (child?.w || 1)) / 2${width2 * ((child == null ? void 0 : child.widthInColumns) || 1) / 2}`\n        );\n      }\n      if (child.children) {\n        layoutBlocks(child);\n      }\n      columnPos += (child == null ? void 0 : child.widthInColumns) || 1;\n      log.debug(\"abc88 columnsPos\", child, columnPos);\n    }\n  }\n  log.debug(\n    `layout blocks (<==layoutBlocks) ${block.id} x: ${(_o = block == null ? void 0 : block.size) == null ? void 0 : _o.x} y: ${(_p = block == null ? void 0 : block.size) == null ? void 0 : _p.y} width: ${(_q = block == null ? void 0 : block.size) == null ? void 0 : _q.width}`\n  );\n}\nfunction findBounds(block, { minX, minY, maxX, maxY } = { minX: 0, minY: 0, maxX: 0, maxY: 0 }) {\n  if (block.size && block.id !== \"root\") {\n    const { x, y, width, height } = block.size;\n    if (x - width / 2 < minX) {\n      minX = x - width / 2;\n    }\n    if (y - height / 2 < minY) {\n      minY = y - height / 2;\n    }\n    if (x + width / 2 > maxX) {\n      maxX = x + width / 2;\n    }\n    if (y + height / 2 > maxY) {\n      maxY = y + height / 2;\n    }\n  }\n  if (block.children) {\n    for (const child of block.children) {\n      ({ minX, minY, maxX, maxY } = findBounds(child, { minX, minY, maxX, maxY }));\n    }\n  }\n  return { minX, minY, maxX, maxY };\n}\nfunction layout(db2) {\n  const root = db2.getBlock(\"root\");\n  if (!root) {\n    return;\n  }\n  setBlockSizes(root, db2, 0, 0);\n  layoutBlocks(root);\n  log.debug(\"getBlocks\", JSON.stringify(root, null, 2));\n  const { minX, minY, maxX, maxY } = findBounds(root);\n  const height = maxY - minY;\n  const width = maxX - minX;\n  return { x: minX, y: minY, width, height };\n}\nconst getClasses = function(text, diagObj) {\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  const { securityLevel, block: conf } = getConfig$1();\n  const db2 = diagObj.db;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = securityLevel === \"sandbox\" ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n  const markers = [\"point\", \"circle\", \"cross\"];\n  insertMarkers(svg, markers, diagObj.type, id);\n  const bl = db2.getBlocks();\n  const blArr = db2.getBlocksFlat();\n  const edges = db2.getEdges();\n  const nodes = svg.insert(\"g\").attr(\"class\", \"block\");\n  await calculateBlockSizes(nodes, bl, db2);\n  const bounds = layout(db2);\n  await insertBlocks(nodes, bl, db2);\n  await insertEdges(nodes, edges, blArr, db2, id);\n  if (bounds) {\n    const bounds2 = bounds;\n    const magicFactor = Math.max(1, Math.round(0.125 * (bounds2.width / bounds2.height)));\n    const height = bounds2.height + magicFactor + 10;\n    const width = bounds2.width + 10;\n    const { useMaxWidth } = conf;\n    configureSvgSize(svg, height, width, !!useMaxWidth);\n    log.debug(\"Here Bounds\", bounds, bounds2);\n    svg.attr(\n      \"viewBox\",\n      `${bounds2.x - 5} ${bounds2.y - 5} ${bounds2.width + 10} ${bounds2.height + 10}`\n    );\n  }\n  scaleOrdinal(schemeTableau10);\n};\nconst renderer = {\n  draw,\n  getClasses\n};\nconst diagram = {\n  parser: parser$1,\n  db: db$1,\n  renderer,\n  styles: flowStyles\n};\nexport {\n  diagram\n};\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n"],"x_google_ignoreList":[0,1]}