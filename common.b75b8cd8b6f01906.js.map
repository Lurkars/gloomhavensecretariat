{"version":3,"file":"common.b75b8cd8b6f01906.js","mappings":"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","names":["addHtmlLabel","root","node","fo","append","attr","div","label","insert","html","util","labelStyle","style","client","getBoundingClientRect","width","height","__WEBPACK_DEFAULT_EXPORT__","channel","color","_","lang","round","Color","parse","isSubgraph","g","v","children","length","edgeToId","e","escapeId","w","name","ID_DELIM","str","String","replace","applyStyle","dom","styleFn","applyClass","classFn","otherClasses","applyTransition","selection","graph","transition","conf","addVertices","_ref","_asyncToGenerator","vert","svgId","doc","diagObj","svg","select","keys","Object","id","vertex","classStr","classes","join","styles","getStylesFromArray","vertexNode","vertexText","text","log","info","labelType","evaluate","getConfig","flowchart","htmlLabels","parentNode","removeChild","svgLabel","createElementNS","setAttribute","rows","split","common","lineBreakRegex","row","tspan","setAttributeNS","textContent","appendChild","radius","_shape","type","labelText","renderKatex","setNode","shape","rx","ry","class","link","linkTarget","tooltip","db","getTooltip","domId","lookUpDomId","haveCallback","dir","props","padding","_x","_x2","_x3","_x4","_x5","_x6","apply","this","arguments","addEdges","_ref2","edges","defaultStyle","defaultLabelStyle","cnt","linkIdCnt","defaultStyles","edge","linkIdBase","start","end","linkId","linkNameStart","linkNameEnd","edgeData","minlen","arrowhead","arrowTypeStart","arrowTypeEnd","stroke","thickness","pattern","curve","interpolateToCurve","interpolate","defaultInterpolate","curveLinear","arrowheadStyle","labelpos","setEdge","_x7","_x8","_x9","flowRendererV2","setConf","cnf","key","getClasses","draw","_ref3","_version","getDirection","securityLevel","conf2","nodeSpacing","rankSpacing","sandboxElement","nodes","contentDocument","body","document","graphlib","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","subG","subGraphs","getSubGraphs","i2","addVertex","title","getVertices","getEdges","i","selectAll","j","setParent","element","render","utils","insertTitle","titleTopMargin","getDiagramTitle","setupGraphViewbox","diagramPadding","useMaxWidth","indexNodes","labels","querySelectorAll","dim","getBBox","rect","insertBefore","firstChild","forEach","linkNode","_x0","_x1","_x10","_x11","flowStyles","options","fontFamily","nodeTextColor","textColor","titleColor","mainBkg","nodeBorder","arrowheadColor","lineColor","edgeLabelBackground","fade","khroma","r","b","clusterBkg","clusterBorder","tertiaryColor","border2","drawRect","rectData","rectElement","x","y","fill","attrs","attrKey","drawBackgroundRect","bounds","startx","starty","stopx","stopy","lower","drawText","textData","nText","textElem","anchor","textMargin","drawImage","elem","imageElement","sanitizedLink","sanitizeUrl","drawEmbeddedImage","getNoteRect","getTextObj"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/dagre-d3-es/src/dagre-js/label/add-html-label.js","./node_modules/khroma/dist/methods/channel.js","./node_modules/dagre-d3-es/src/dagre-js/util.js","./node_modules/mermaid/dist/styles-c10674c1.js","./node_modules/mermaid/dist/svgDrawCommon-08f97a94.js"],"sourcesContent":["import * as util from '../util.js';\n\nexport { addHtmlLabel };\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div.node().getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n","/* IMPORT */\nimport _ from '../utils/index.js';\nimport Color from '../color/index.js';\n/* MAIN */\nconst channel = (color, channel) => {\n    return _.lang.round(Color.parse(color)[channel]);\n};\n/* EXPORT */\nexport default channel;\n","import * as _ from 'lodash-es';\n\n// Public utility functions\nexport { isSubgraph, edgeToId, applyStyle, applyClass, applyTransition };\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","import * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { curveLinear, select, selectAll } from \"d3\";\nimport { k as getStylesFromArray, l as log, m as evaluate, c as getConfig, e as common, r as renderKatex, n as interpolateToCurve, u as utils, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { r as render } from \"./index-3862675e.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport * as khroma from \"khroma\";\nconst conf = {};\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = async function(vert, g, svgId, root, doc, diagObj) {\n  const svg = root.select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(vert);\n  for (const id of keys) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    classStr = classStr + \" flowchart-label\";\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    log.info(\"vertex\", vertex, vertex.labelType);\n    if (vertex.labelType === \"markdown\") {\n      log.info(\"vertex\", vertex, vertex.labelType);\n    } else {\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        const node = {\n          label: vertexText\n        };\n        vertexNode = addHtmlLabel(svg, node).node();\n        vertexNode.parentNode.removeChild(vertexNode);\n      } else {\n        const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n        const rows = vertexText.split(common.lineBreakRegex);\n        for (const row of rows) {\n          const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n          tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n          tspan.setAttribute(\"dy\", \"1em\");\n          tspan.setAttribute(\"x\", \"1\");\n          tspan.textContent = row;\n          svgLabel.appendChild(tspan);\n        }\n        vertexNode = svgLabel;\n      }\n    }\n    let radius = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radius = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      case \"doublecircle\":\n        _shape = \"doublecircle\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    const labelText = await renderKatex(vertexText, getConfig());\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText,\n      labelType: vertex.labelType,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      link: vertex.link,\n      linkTarget: vertex.linkTarget,\n      tooltip: diagObj.db.getTooltip(vertex.id) || \"\",\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      haveCallback: vertex.haveCallback,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      dir: vertex.dir,\n      type: vertex.type,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n    log.info(\"setNode\", {\n      labelStyle: styles.labelStyle,\n      labelType: vertex.labelType,\n      shape: _shape,\n      labelText,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      dir: vertex.dir,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n  }\n};\nconst addEdges = async function(edges, g, diagObj) {\n  log.info(\"abc78 edges = \", edges);\n  let cnt = 0;\n  let linkIdCnt = {};\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  for (const edge of edges) {\n    cnt++;\n    const linkIdBase = \"L-\" + edge.start + \"-\" + edge.end;\n    if (linkIdCnt[linkIdBase] === void 0) {\n      linkIdCnt[linkIdBase] = 0;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    } else {\n      linkIdCnt[linkIdBase]++;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    }\n    let linkId = linkIdBase + \"-\" + linkIdCnt[linkIdBase];\n    log.info(\"abc78 new link id to be used is\", linkIdBase, linkId, linkIdCnt[linkIdBase]);\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = { style: \"\", labelStyle: \"\" };\n    edgeData.minlen = edge.length || 1;\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    edgeData.arrowTypeStart = \"arrow_open\";\n    edgeData.arrowTypeEnd = \"arrow_open\";\n    switch (edge.type) {\n      case \"double_arrow_cross\":\n        edgeData.arrowTypeStart = \"arrow_cross\";\n      case \"arrow_cross\":\n        edgeData.arrowTypeEnd = \"arrow_cross\";\n        break;\n      case \"double_arrow_point\":\n        edgeData.arrowTypeStart = \"arrow_point\";\n      case \"arrow_point\":\n        edgeData.arrowTypeEnd = \"arrow_point\";\n        break;\n      case \"double_arrow_circle\":\n        edgeData.arrowTypeStart = \"arrow_circle\";\n      case \"arrow_circle\":\n        edgeData.arrowTypeEnd = \"arrow_circle\";\n        break;\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    switch (edge.stroke) {\n      case \"normal\":\n        style = \"fill:none;\";\n        if (defaultStyle !== void 0) {\n          style = defaultStyle;\n        }\n        if (defaultLabelStyle !== void 0) {\n          labelStyle = defaultLabelStyle;\n        }\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"solid\";\n        break;\n      case \"dotted\":\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"dotted\";\n        edgeData.style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n        break;\n      case \"thick\":\n        edgeData.thickness = \"thick\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 3.5px;fill:none;\";\n        break;\n      case \"invisible\":\n        edgeData.thickness = \"invisible\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 0;fill:none;\";\n        break;\n    }\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    }\n    edgeData.style = edgeData.style += style;\n    edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n    }\n    edgeData.labelType = edge.labelType;\n    edgeData.label = await renderKatex(edge.text.replace(common.lineBreakRegex, \"\\n\"), getConfig());\n    if (edge.style === void 0) {\n      edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none;\";\n    }\n    edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n    edgeData.id = linkId;\n    edgeData.classes = \"flowchart-link \" + linkNameStart + \" \" + linkNameEnd;\n    g.setEdge(edge.start, edge.end, edgeData, cnt);\n  }\n};\nconst getClasses = function(text, diagObj) {\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const { securityLevel, flowchart: conf2 } = getConfig();\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 0,\n    marginy: 0\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  log.info(\"Subgraphs - \", subGraphs);\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    log.info(\"Subgraph - \", subG);\n    diagObj.db.addVertex(\n      subG.id,\n      { text: subG.title, type: subG.labelType },\n      \"group\",\n      void 0,\n      subG.classes,\n      subG.dir\n    );\n  }\n  const vert = diagObj.db.getVertices();\n  const edges = diagObj.db.getEdges();\n  log.info(\"Edges\", edges);\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.info(\"Setting up subgraphs\", subG.nodes[j], subG.id);\n      g.setParent(subG.nodes[j], subG.id);\n    }\n  }\n  await addVertices(vert, g, id, root, doc, diagObj);\n  await addEdges(edges, g);\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(element, g, [\"point\", \"circle\", \"cross\"], \"flowchart\", id);\n  utils.insertTitle(svg, \"flowchartTitleText\", conf2.titleTopMargin, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  const keys = Object.keys(vert);\n  keys.forEach(function(key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = select(\"#\" + id + ' [id=\"' + key + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function() {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function() {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function() {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRendererV2 = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst fade = (color, opacity) => {\n  const channel = khroma.channel;\n  const r = channel(color, \"r\");\n  const g = channel(color, \"g\");\n  const b = channel(color, \"b\");\n  return khroma.rgba(r, g, b, opacity);\n};\nconst getStyles = (options) => `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .katex path {\n    fill: #000;\n    stroke: #000;\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color: \n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\nconst flowStyles = getStyles;\nexport {\n  flowStyles as a,\n  flowRendererV2 as f\n};\n","import { sanitizeUrl } from \"@braintree/sanitize-url\";\nimport { J as lineBreakRegex } from \"./mermaid-b5860b54.js\";\nconst drawRect = (element, rectData) => {\n  const rectElement = element.append(\"rect\");\n  rectElement.attr(\"x\", rectData.x);\n  rectElement.attr(\"y\", rectData.y);\n  rectElement.attr(\"fill\", rectData.fill);\n  rectElement.attr(\"stroke\", rectData.stroke);\n  rectElement.attr(\"width\", rectData.width);\n  rectElement.attr(\"height\", rectData.height);\n  if (rectData.name) {\n    rectElement.attr(\"name\", rectData.name);\n  }\n  rectData.rx !== void 0 && rectElement.attr(\"rx\", rectData.rx);\n  rectData.ry !== void 0 && rectElement.attr(\"ry\", rectData.ry);\n  if (rectData.attrs !== void 0) {\n    for (const attrKey in rectData.attrs) {\n      rectElement.attr(attrKey, rectData.attrs[attrKey]);\n    }\n  }\n  rectData.class !== void 0 && rectElement.attr(\"class\", rectData.class);\n  return rectElement;\n};\nconst drawBackgroundRect = (element, bounds) => {\n  const rectData = {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    stroke: bounds.stroke,\n    class: \"rect\"\n  };\n  const rectElement = drawRect(element, rectData);\n  rectElement.lower();\n};\nconst drawText = (element, textData) => {\n  const nText = textData.text.replace(lineBreakRegex, \" \");\n  const textElem = element.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.attr(\"class\", \"legend\");\n  textElem.style(\"text-anchor\", textData.anchor);\n  textData.class !== void 0 && textElem.attr(\"class\", textData.class);\n  const tspan = textElem.append(\"tspan\");\n  tspan.attr(\"x\", textData.x + textData.textMargin * 2);\n  tspan.text(nText);\n  return textElem;\n};\nconst drawImage = (elem, x, y, link) => {\n  const imageElement = elem.append(\"image\");\n  imageElement.attr(\"x\", x);\n  imageElement.attr(\"y\", y);\n  const sanitizedLink = sanitizeUrl(link);\n  imageElement.attr(\"xlink:href\", sanitizedLink);\n};\nconst drawEmbeddedImage = (element, x, y, link) => {\n  const imageElement = element.append(\"use\");\n  imageElement.attr(\"x\", x);\n  imageElement.attr(\"y\", y);\n  const sanitizedLink = sanitizeUrl(link);\n  imageElement.attr(\"xlink:href\", `#${sanitizedLink}`);\n};\nconst getNoteRect = () => {\n  const noteRectData = {\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    anchor: \"start\",\n    rx: 0,\n    ry: 0\n  };\n  return noteRectData;\n};\nconst getTextObj = () => {\n  const testObject = {\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    \"text-anchor\": \"start\",\n    style: \"#666\",\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true\n  };\n  return testObject;\n};\nexport {\n  drawBackgroundRect as a,\n  drawEmbeddedImage as b,\n  drawImage as c,\n  drawRect as d,\n  getTextObj as e,\n  drawText as f,\n  getNoteRect as g\n};\n"],"x_google_ignoreList":[0,1,2,3,4]}