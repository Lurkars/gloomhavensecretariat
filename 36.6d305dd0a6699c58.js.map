{"version":3,"file":"36.6d305dd0a6699c58.js","mappings":"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","names":["edgeCount","addTspan","textEl","member","isFirst","conf","displayText","cssStyle","getDisplayDetails","tSpan","append","attr","padding","text","textHeight","svgDraw","elem","classDef","diagObj","log","debug","id","classInfo","label","width","height","g","db","lookUpDomId","title","link","linkTarget","annotations","forEach","titleText2","classTitleString","type","parseGenericTypes","getClassTitleString","classTitle","titleHeight","node","getBBox","membersLine","membersBox","methodsLine","members","length","dividerMargin","methods","method","classBox","cssClassStr","cssClasses","join","rectWidth","insert","childNodes","x","setAttribute","tooltip","idCache","getGraphId","foundEntry","Object","entries","find","entry","diagram","parser","_styles_9a916d00_js__WEBPACK_IMPORTED_MODULE_7__","p","d","renderer","draw","_version","getConfig","class","info","securityLevel","sandboxElement","select","root","nodes","contentDocument","body","diagram2","insertMarkers","graphlib","multigraph","setGraph","isMultiGraph","setDefaultEdgeLabel","classes","getClasses","keys","key","setNode","getRelations","relation","id1","id2","JSON","stringify","setEdge","getNotes","note","noteInfo","lines","parse","split","line2","noteBox","type1","type2","lineType","layout","v","y","edges","e","edge","w","path","getRelationType","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","LOLLIPOP","points","filter","Number","isNaN","lineData","lineFunction","line","curve","curveBasis","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","replace","l","p1_card_x","p1_card_y","p2_card_x","p2_card_y","labelPosition","utils","calcLabelPosition","cardinality_1_point","calcCardinalityPosition","cardinality_2_point","bounds","relationTitle1","relationTitle2","svgBounds","configureSvgSize","useMaxWidth","vBox","styles","s","init","cnf","clear"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/mermaid/dist/classDiagram-70f12bd4.js"],"sourcesContent":["import { p as parser, d as db, s as styles } from \"./styles-9a916d00.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { u as utils, l as log, x as parseGenericTypes, c as getConfig, i as configureSvgSize } from \"./mermaid-b5860b54.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation, conf, diagObj) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case diagObj.db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case diagObj.db.relationType.EXTENSION:\n        return \"extension\";\n      case diagObj.db.relationType.COMPOSITION:\n        return \"composition\";\n      case diagObj.db.relationType.DEPENDENCY:\n        return \"dependency\";\n      case diagObj.db.relationType.LOLLIPOP:\n        return \"lollipop\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"relation\");\n  let url = \"\";\n  if (conf.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  if (relation.relation.lineType == 1) {\n    svgPath.attr(\"class\", \"relation dashed-line\");\n  }\n  if (relation.relation.lineType == 10) {\n    svgPath.attr(\"class\", \"relation dotted-line\");\n  }\n  if (relation.relation.type1 !== \"none\") {\n    svgPath.attr(\n      \"marker-start\",\n      \"url(\" + url + \"#\" + getRelationType(relation.relation.type1) + \"Start)\"\n    );\n  }\n  if (relation.relation.type2 !== \"none\") {\n    svgPath.attr(\n      \"marker-end\",\n      \"url(\" + url + \"#\" + getRelationType(relation.relation.type2) + \"End)\"\n    );\n  }\n  let x, y;\n  const l = path.points.length;\n  let labelPosition = utils.calcLabelPosition(path.points);\n  x = labelPosition.x;\n  y = labelPosition.y;\n  let p1_card_x, p1_card_y;\n  let p2_card_x, p2_card_y;\n  if (l % 2 !== 0 && l > 1) {\n    let cardinality_1_point = utils.calcCardinalityPosition(\n      relation.relation.type1 !== \"none\",\n      path.points,\n      path.points[0]\n    );\n    let cardinality_2_point = utils.calcCardinalityPosition(\n      relation.relation.type2 !== \"none\",\n      path.points,\n      path.points[l - 1]\n    );\n    log.debug(\"cardinality_1_point \" + JSON.stringify(cardinality_1_point));\n    log.debug(\"cardinality_2_point \" + JSON.stringify(cardinality_2_point));\n    p1_card_x = cardinality_1_point.x;\n    p1_card_y = cardinality_1_point.y;\n    p2_card_x = cardinality_2_point.x;\n    p2_card_y = cardinality_2_point.y;\n  }\n  if (relation.title !== void 0) {\n    const g = elem.append(\"g\").attr(\"class\", \"classLabel\");\n    const label = g.append(\"text\").attr(\"class\", \"label\").attr(\"x\", x).attr(\"y\", y).attr(\"fill\", \"red\").attr(\"text-anchor\", \"middle\").text(relation.title);\n    window.label = label;\n    const bounds = label.node().getBBox();\n    g.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", bounds.x - conf.padding / 2).attr(\"y\", bounds.y - conf.padding / 2).attr(\"width\", bounds.width + conf.padding).attr(\"height\", bounds.height + conf.padding);\n  }\n  log.info(\"Rendering relation \" + JSON.stringify(relation));\n  if (relation.relationTitle1 !== void 0 && relation.relationTitle1 !== \"none\") {\n    const g = elem.append(\"g\").attr(\"class\", \"cardinality\");\n    g.append(\"text\").attr(\"class\", \"type1\").attr(\"x\", p1_card_x).attr(\"y\", p1_card_y).attr(\"fill\", \"black\").attr(\"font-size\", \"6\").text(relation.relationTitle1);\n  }\n  if (relation.relationTitle2 !== void 0 && relation.relationTitle2 !== \"none\") {\n    const g = elem.append(\"g\").attr(\"class\", \"cardinality\");\n    g.append(\"text\").attr(\"class\", \"type2\").attr(\"x\", p2_card_x).attr(\"y\", p2_card_y).attr(\"fill\", \"black\").attr(\"font-size\", \"6\").text(relation.relationTitle2);\n  }\n  edgeCount++;\n};\nconst drawClass = function(elem, classDef, conf, diagObj) {\n  log.debug(\"Rendering class \", classDef, conf);\n  const id = classDef.id;\n  const classInfo = {\n    id,\n    label: classDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", diagObj.db.lookUpDomId(id)).attr(\"class\", \"classGroup\");\n  let title;\n  if (classDef.link) {\n    title = g.append(\"svg:a\").attr(\"xlink:href\", classDef.link).attr(\"target\", classDef.linkTarget).append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  } else {\n    title = g.append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  }\n  let isFirst = true;\n  classDef.annotations.forEach(function(member) {\n    const titleText2 = title.append(\"tspan\").text(\"«\" + member + \"»\");\n    if (!isFirst) {\n      titleText2.attr(\"dy\", conf.textHeight);\n    }\n    isFirst = false;\n  });\n  let classTitleString = getClassTitleString(classDef);\n  const classTitle = title.append(\"tspan\").text(classTitleString).attr(\"class\", \"title\");\n  if (!isFirst) {\n    classTitle.attr(\"dy\", conf.textHeight);\n  }\n  const titleHeight = title.node().getBBox().height;\n  let membersLine;\n  let membersBox;\n  let methodsLine;\n  if (classDef.members.length > 0) {\n    membersLine = g.append(\"line\").attr(\"x1\", 0).attr(\"y1\", conf.padding + titleHeight + conf.dividerMargin / 2).attr(\"y2\", conf.padding + titleHeight + conf.dividerMargin / 2);\n    const members = g.append(\"text\").attr(\"x\", conf.padding).attr(\"y\", titleHeight + conf.dividerMargin + conf.textHeight).attr(\"fill\", \"white\").attr(\"class\", \"classText\");\n    isFirst = true;\n    classDef.members.forEach(function(member) {\n      addTspan(members, member, isFirst, conf);\n      isFirst = false;\n    });\n    membersBox = members.node().getBBox();\n  }\n  if (classDef.methods.length > 0) {\n    methodsLine = g.append(\"line\").attr(\"x1\", 0).attr(\"y1\", conf.padding + titleHeight + conf.dividerMargin + membersBox.height).attr(\"y2\", conf.padding + titleHeight + conf.dividerMargin + membersBox.height);\n    const methods = g.append(\"text\").attr(\"x\", conf.padding).attr(\"y\", titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight).attr(\"fill\", \"white\").attr(\"class\", \"classText\");\n    isFirst = true;\n    classDef.methods.forEach(function(method) {\n      addTspan(methods, method, isFirst, conf);\n      isFirst = false;\n    });\n  }\n  const classBox = g.node().getBBox();\n  var cssClassStr = \" \";\n  if (classDef.cssClasses.length > 0) {\n    cssClassStr = cssClassStr + classDef.cssClasses.join(\" \");\n  }\n  const rect = g.insert(\"rect\", \":first-child\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", classBox.width + 2 * conf.padding).attr(\"height\", classBox.height + conf.padding + 0.5 * conf.dividerMargin).attr(\"class\", cssClassStr);\n  const rectWidth = rect.node().getBBox().width;\n  title.node().childNodes.forEach(function(x) {\n    x.setAttribute(\"x\", (rectWidth - x.getBBox().width) / 2);\n  });\n  if (classDef.tooltip) {\n    title.insert(\"title\").text(classDef.tooltip);\n  }\n  if (membersLine) {\n    membersLine.attr(\"x2\", rectWidth);\n  }\n  if (methodsLine) {\n    methodsLine.attr(\"x2\", rectWidth);\n  }\n  classInfo.width = rectWidth;\n  classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n  return classInfo;\n};\nconst getClassTitleString = function(classDef) {\n  let classTitleString = classDef.id;\n  if (classDef.type) {\n    classTitleString += \"<\" + parseGenericTypes(classDef.type) + \">\";\n  }\n  return classTitleString;\n};\nconst drawNote = function(elem, note, conf, diagObj) {\n  log.debug(\"Rendering note \", note, conf);\n  const id = note.id;\n  const noteInfo = {\n    id,\n    text: note.text,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"classGroup\");\n  let text = g.append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  const lines = JSON.parse(`\"${note.text}\"`).split(\"\\n\");\n  lines.forEach(function(line2) {\n    log.debug(`Adding line: ${line2}`);\n    text.append(\"tspan\").text(line2).attr(\"class\", \"title\").attr(\"dy\", conf.textHeight);\n  });\n  const noteBox = g.node().getBBox();\n  const rect = g.insert(\"rect\", \":first-child\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", noteBox.width + 2 * conf.padding).attr(\n    \"height\",\n    noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin\n  );\n  const rectWidth = rect.node().getBBox().width;\n  text.node().childNodes.forEach(function(x) {\n    x.setAttribute(\"x\", (rectWidth - x.getBBox().width) / 2);\n  });\n  noteInfo.width = rectWidth;\n  noteInfo.height = noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin;\n  return noteInfo;\n};\nconst addTspan = function(textEl, member, isFirst, conf) {\n  const { displayText, cssStyle } = member.getDisplayDetails();\n  const tSpan = textEl.append(\"tspan\").attr(\"x\", conf.padding).text(displayText);\n  if (cssStyle !== \"\") {\n    tSpan.attr(\"style\", member.cssStyle);\n  }\n  if (!isFirst) {\n    tSpan.attr(\"dy\", conf.textHeight);\n  }\n};\nconst svgDraw = {\n  getClassTitleString,\n  drawClass,\n  drawEdge,\n  drawNote\n};\nlet idCache = {};\nconst padding = 20;\nconst getGraphId = function(label) {\n  const foundEntry = Object.entries(idCache).find((entry) => entry[1].label === label);\n  if (foundEntry) {\n    return foundEntry[0];\n  }\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"extensionStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,7 L18,13 V 1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"extensionEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 V 13 L18,7 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"compositionStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"compositionEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"aggregationStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"aggregationEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 5,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  const conf = getConfig().class;\n  idCache = {};\n  log.info(\"Rendering diagram \" + text);\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const g = new graphlib.Graph({\n    multigraph: true\n  });\n  g.setGraph({\n    isMultiGraph: true\n  });\n  g.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const classes = diagObj.db.getClasses();\n  const keys = Object.keys(classes);\n  for (const key of keys) {\n    const classDef = classes[key];\n    const node = svgDraw.drawClass(diagram2, classDef, conf, diagObj);\n    idCache[node.id] = node;\n    g.setNode(node.id, node);\n    log.info(\"Org height: \" + node.height);\n  }\n  const relations = diagObj.db.getRelations();\n  relations.forEach(function(relation) {\n    log.info(\n      // cspell:ignore tjoho\n      \"tjoho\" + getGraphId(relation.id1) + getGraphId(relation.id2) + JSON.stringify(relation)\n    );\n    g.setEdge(\n      getGraphId(relation.id1),\n      getGraphId(relation.id2),\n      {\n        relation\n      },\n      relation.title || \"DEFAULT\"\n    );\n  });\n  const notes = diagObj.db.getNotes();\n  notes.forEach(function(note) {\n    log.debug(`Adding note: ${JSON.stringify(note)}`);\n    const node = svgDraw.drawNote(diagram2, note, conf, diagObj);\n    idCache[node.id] = node;\n    g.setNode(node.id, node);\n    if (note.class && note.class in classes) {\n      g.setEdge(\n        note.id,\n        getGraphId(note.class),\n        {\n          relation: {\n            id1: note.id,\n            id2: note.class,\n            relation: {\n              type1: \"none\",\n              type2: \"none\",\n              lineType: 10\n            }\n          }\n        },\n        \"DEFAULT\"\n      );\n    }\n  });\n  layout(g);\n  g.nodes().forEach(function(v) {\n    if (v !== void 0 && g.node(v) !== void 0) {\n      log.debug(\"Node \" + v + \": \" + JSON.stringify(g.node(v)));\n      root.select(\"#\" + (diagObj.db.lookUpDomId(v) || v)).attr(\n        \"transform\",\n        \"translate(\" + (g.node(v).x - g.node(v).width / 2) + \",\" + (g.node(v).y - g.node(v).height / 2) + \" )\"\n      );\n    }\n  });\n  g.edges().forEach(function(e) {\n    if (e !== void 0 && g.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(g.edge(e)));\n      svgDraw.drawEdge(diagram2, g.edge(e), g.edge(e).relation, conf, diagObj);\n    }\n  });\n  const svgBounds = diagram2.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n  configureSvgSize(diagram2, height, width, conf.useMaxWidth);\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  diagram2.attr(\"viewBox\", vBox);\n};\nconst renderer = {\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"x_google_ignoreList":[0]}