{"version":3,"file":"805.bd687252f2a8e716.js","mappings":"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","names":["module","exports","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","LayoutConstants","QUALITY","DEFAULT_CREATE_BENDS_AS_NEEDED","DEFAULT_INCREMENTAL","DEFAULT_ANIMATION_ON_LAYOUT","DEFAULT_ANIMATION_DURING_LAYOUT","DEFAULT_ANIMATION_PERIOD","DEFAULT_UNIFORM_LEAF_NODE_SIZES","DEFAULT_GRAPH_MARGIN","NODE_DIMENSIONS_INCLUDE_LABELS","SIMPLE_NODE_HALF_SIZE","SIMPLE_NODE_SIZE","EMPTY_COMPOUND_NODE_SIZE","MIN_EDGE_LENGTH","INITIAL_WORLD_BOUNDARY","WORLD_BOUNDARY","WORLD_CENTER_X","WORLD_CENTER_Y","LGraphObject","IGeometry","IMath","LEdge","source","target","vEdge","this","isOverlapingSourceAndTarget","vGraphObject","bendpoints","prop","create","getSource","getTarget","isInterGraph","getLength","length","getBendpoints","getLca","lca","getSourceInLca","sourceInLca","getTargetInLca","targetInLca","getOtherEnd","node","getOtherEndInGraph","graph","otherEnd","root","getGraphManager","getRoot","getOwner","getParent","updateLength","clipPointCoordinates","Array","getIntersection","getRect","lengthX","lengthY","Math","abs","sign","sqrt","updateLengthSimple","getCenterX","getCenterY","Integer","RectangleD","RandomSeed","PointD","LNode","gm","loc","size","vNode","graphManager","estimatedSize","MIN_VALUE","inclusionTreeDepth","MAX_VALUE","edges","rect","x","y","width","height","getEdges","getChild","child","owner","getWidth","setWidth","getHeight","setHeight","getCenter","getLocation","getDiagonal","getHalfTheDiagonal","setRect","upperLeft","dimension","setCenter","cx","cy","setLocation","moveBy","dx","dy","getEdgeListToNode","to","edgeList","self","forEach","edge","push","getEdgesBetween","other","getNeighborsList","neighbors","Set","add","withChildren","withNeighborsList","nodes","getNodes","getNoOfChildren","noOfChildren","getEstimatedSize","calcEstimatedSize","scatter","randomCenterX","randomCenterY","minX","maxX","nextDouble","minY","maxY","updateBounds","childGraph","getLeft","getTop","getRight","getBottom","labelWidth","labelHeight","labelPos","getInclusionTreeDepth","transform","trans","left","top","leftTop","vLeftTop","inverseTransformPoint","getX","getY","setX","setY","getDifference","pt","DimensionD","getCopy","translate","dim","LGraphManager","Point","LinkedList","LGraph","parent","obj2","vGraph","margin","isConnected","Layout","right","bottom","obj1","sourceNode","targetNode","newNode","indexOf","newEdge","remove","obj","edgesToBeRemoved","slice","index","splice","sourceIndex","targetIndex","updateLeftTop","nodeTop","nodeLeft","lNode","undefined","paddingLeft","recursive","nodeRight","nodeBottom","boundingRect","calculateBounds","updateConnected","neighborEdges","currentNeighbor","queue","visited","currentNode","shift","has","noOfVisitedInThisGraph","visitedNode","layout","graphs","addRoot","ngraph","newGraph","nnode","setRootGraph","rootGraph","parentNode","sourceGraph","targetGraph","lObj","concat","nodesToBeRemoved","getGraphs","getAllNodes","allNodes","nodeList","resetAllNodes","resetAllEdges","allEdges","resetAllNodesToApplyGravitation","allNodesToApplyGravitation","getAllEdges","getAllNodesToApplyGravitation","setAllNodesToApplyGravitation","getLayout","isOneAncestorOfOther","firstNode","secondNode","ownerGraph","calcLowestCommonAncestors","sourceAncestorGraph","targetAncestorGraph","calcLowestCommonAncestor","firstOwnerGraph","secondOwnerGraph","calcInclusionTreeDepths","depth","includesInvalidEdge","FDLayoutConstants","MAX_ITERATIONS","DEFAULT_EDGE_LENGTH","DEFAULT_SPRING_STRENGTH","DEFAULT_REPULSION_STRENGTH","DEFAULT_GRAVITY_STRENGTH","DEFAULT_COMPOUND_GRAVITY_STRENGTH","DEFAULT_GRAVITY_RANGE_FACTOR","DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR","DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION","DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION","DEFAULT_COOLING_FACTOR_INCREMENTAL","COOLING_ADAPTATION_FACTOR","ADAPTATION_LOWER_NODE_LIMIT","ADAPTATION_UPPER_NODE_LIMIT","MAX_NODE_DISPLACEMENT","MAX_NODE_DISPLACEMENT_INCREMENTAL","MIN_REPULSION_DIST","CONVERGENCE_CHECK_PERIOD","PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR","GRID_CALCULATION_CHECK_PERIOD","calcSeparationAmount","rectA","rectB","overlapAmount","separationBuffer","intersects","directions","decideDirectionsForOverlappingNodes","min","max","slope","moveByY","moveByX","getIntersection2","result","p1x","p1y","p2x","p2y","topLeftAx","topLeftAy","topRightAx","bottomLeftAx","bottomLeftAy","bottomRightAx","halfWidthA","getWidthHalf","halfHeightA","getHeightHalf","topLeftBx","topLeftBy","topRightBx","bottomLeftBx","bottomLeftBy","bottomRightBx","halfWidthB","halfHeightB","clipPointAFound","clipPointBFound","slopeA","slopeB","slopePrime","cardinalDirectionA","cardinalDirectionB","tempPointAy","tempPointBy","getCardinalDirection","line","s1","s2","f1","f2","a1","a2","b1","b2","c1","c2","denom","x1","y1","x2","y2","x3","y3","x4","y4","angleOfVector","Cx","Cy","Nx","Ny","C_angle","atan","PI","TWO_PI","ONE_AND_HALF_PI","HALF_PI","doIntersect","p1","p2","p3","p4","a","b","q","r","det","lambda","gamma","THREE_PI","floor","ceil","_createClass","defineProperties","props","descriptor","writable","key","Constructor","protoProps","staticProps","nodeFrom","next","prev","list","head","tail","_remove","vals","_this","_classCallCheck","instance","TypeError","v","val","otherNode","current","constructor","parseInt","move","equals","toString","getMinX","getMaxX","getMinY","getMaxY","_typeof","Symbol","iterator","UniqueIDGeneretor","lastID","createID","isPrimitive","uniqueID","getString","id","arg","type","_toConsumableArray","arr","isArray","arr2","from","Transform","Emitter","isRemoteUse","layoutQuality","createBendsAsNeeded","incremental","animationOnLayout","animationDuringLayout","animationPeriod","uniformLeafNodeSizes","edgeToDummyNodes","Map","isLayoutFinished","isSubLayout","RANDOM_SEED","newGraphManager","checkLayoutSuccess","runLayout","isLayoutSuccessfull","tilingPreLayout","initParameters","ANIMATE","doPostLayout","tilingPostLayout","update","update2","createBendpointsFromDummyNodes","newLeftTop","setWorldOrgX","setWorldOrgY","setDeviceOrgX","setDeviceOrgY","positionNodesRandomly","getFlatForest","flatForest","isForest","isFlat","toBeVisited","parents","unProcessedNodes","set","temp","createDummyNodesForBendpoints","dummyNodes","dummyNode","Dimension","dummyEdge","keys","k","lEdge","path","ebp","sliderValue","defaultValue","minDiv","maxMul","findCenterOfTree","removedNodes","remainingDegrees","foundCenter","centerNode","degree","tempList","tempList2","neighbour","newDegree","setGraphManager","seed","sin","lworldOrgX","lworldOrgY","ldeviceOrgX","ldeviceOrgY","lworldExtX","lworldExtY","ldeviceExtX","ldeviceExtY","getWorldOrgX","wox","getWorldOrgY","woy","getWorldExtX","setWorldExtX","wex","getWorldExtY","setWorldExtY","wey","getDeviceOrgX","dox","getDeviceOrgY","doy","getDeviceExtX","setDeviceExtX","dex","getDeviceExtY","setDeviceExtY","dey","transformX","xDevice","worldExtX","transformY","yDevice","worldExtY","inverseTransformX","xWorld","deviceExtX","inverseTransformY","yWorld","deviceExtY","inPoint","FDLayout","useSmartIdealEdgeLengthCalculation","idealEdgeLength","springConstant","repulsionConstant","gravityConstant","compoundGravityConstant","gravityRangeFactor","compoundGravityRangeFactor","displacementThresholdPerNode","coolingFactor","initialCoolingFactor","totalDisplacement","oldTotalDisplacement","maxIterations","arguments","totalIterations","notAnimatedIterations","useFRGridVariant","grid","calcIdealEdgeLengths","lcaDepth","sizeOfSourceInLca","sizeOfTargetInLca","idealLength","initSpringEmbedder","maxNodeDisplacement","totalDisplacementThreshold","repulsionRange","calcRepulsionRange","calcSpringForces","lEdges","calcSpringForce","calcRepulsionForces","j","nodeA","nodeB","processedNodeSet","gridUpdateAllowed","forceToNodeSurroundingUpdate","lNodes","updateGrid","calculateRepulsionForceOfANode","calcRepulsionForce","calcGravitationalForces","calcGravitationalForce","moveNodes","springForce","springForceX","springForceY","distanceX","distanceY","distanceSquared","distance","repulsionForce","repulsionForceX","repulsionForceY","clipPoints","childrenConstant","ownerCenterX","ownerCenterY","absDistanceX","absDistanceY","gravitationForceX","gravitationForceY","isConverged","converged","oscilating","animate","calcNoOfChildrenForAllNodes","calcGrid","sizeX","sizeY","addNodeToGrid","startX","finishX","startY","finishY","setGridCoordinates","surrounding","FDLayoutEdge","FDLayoutNode","displacementX","displacementY","_startX","_finishX","_startY","_finishY","HashMap","map","put","theId","contains","keySet","HashSet","clear","isEmpty","addAllTo","addAll","Quicksort","A","compareFunction","_defaultCompareFunction","_quicksort","_partition","_get","_swap","get_object_at","set_object_at","_set","NeedlemanWunsch","sequence1","sequence2","match_score","mismatch_penalty","gap_penalty","iMax","jMax","tracebackGrid","_i","_j","alignments","score","computeGrids","_i2","_j2","maxOf","indices","arrayAllMaxIndexes","includes","inProcessAlignments","pos","seq1","seq2","indexes","array","getAllIndexes","apply","layoutBase","listeners","addListener","event","callback","removeListener","emit","data","__WEBPACK_EXTERNAL_MODULE_0__","require","CoSEConstants","DEFAULT_USE_MULTI_LEVEL_SCALING","DEFAULT_RADIAL_SEPARATION","DEFAULT_COMPONENT_SEPERATION","TILE","TILING_PADDING_VERTICAL","TILING_PADDING_HORIZONTAL","TREE_REDUCTION_ON_INCREMENTAL","CoSEEdge","CoSEGraph","graphMgr","CoSEGraphManager","CoSENode","propogateDisplacementToChildren","dX","dY","setPred1","pred1","getPred1","getPred2","pred2","setNext","getNext","setProcessed","processed","isProcessed","CoSELayout","toBeTiled","prunedNodesAll","growTreeIterations","afterGrowthIterations","isTreeGrowing","isGrowthFinished","coolingCycle","maxCoolingCycle","finalTemperature","coolingAdjuster","createBendpoints","level","classicLayout","nodesWithGravity","calculateNodesToApplyGravitationTo","reduceTrees","intersection","filter","forest","positionNodesRadially","runSpringEmbedder","tick","pow","log","initialAnimationPeriod","growTree","getPositionsData","pData","w","h","layoutEnded","multiEdge","currentStartingPoint","numberOfColumns","currentY","currentX","point","tree","radialLayout","startingPoint","radialSep","maxDiagonalInTree","branchRadialLayout","bounds","bottomRight","parentOfNode","startAngle","endAngle","radialSeparation","halfInterval","teta","x_","cos","y_","childCount","startIndex","branchCount","incEdgesCount","stepAngle","childStartAngle","maxDiagonal","diagonal","groupZeroDegreeMembers","tempMemberGroups","memberGroups","idToDummyNode","zeroDegree","getNodeDegreeWithChildren","getToBeTiled","p_id","dummyCompoundId","dummyCompound","paddingRight","paddingBottom","paddingTop","dummyParentGraph","parentGraph","clearCompounds","childGraphMap","idToNode","performDFSOnCompounds","compoundOrder","tileCompoundMembers","clearZeroDegreeMembers","tiledZeroDegreePack","compoundNode","tileNodes","repopulateCompounds","lCompoundNode","adjustLocations","tiledMemberPack","repopulateZeroDegreeMembers","tiledPack","children","theChild","getNodeDegree","fillCompexOrderByDFS","organization","compoundHorizontalMargin","compoundVerticalMargin","rows","row","maxHeight","lnode","horizontalPadding","verticalPadding","minWidth","rowWidth","rowHeight","sort","n1","n2","insertNodeToRow","canAddHorizontal","getShortestRowIndex","shiftToLastRow","rowIndex","minCompoundSize","extraHeight","Number","getLongestRowIndex","extraWidth","sri","add_to_row_ratio","add_new_row_ratio","hDiff","longest","last","diff","prevTotal","containsLeaf","prunedNodesInStepTemp","prunedNodesInStep","nodeData","findPlaceforPrunedNode","gridForPrunedNode","nodeToConnect","prunedNode","startGridX","finishGridX","startGridY","finishGridY","controlRegions","minCount","minIndex","random","coseBase","defaults","ready","stop","quality","nodeDimensionsIncludeLabels","refresh","fit","padding","randomize","nodeRepulsion","edgeElasticity","nestingFactor","gravity","numIter","tile","animationDuration","tilingPaddingVertical","tilingPaddingHorizontal","gravityRangeCompound","gravityCompound","gravityRange","initialEnergyOnIncremental","_CoSELayout","_options","options","extend","getUserOptions","run","frameId","idToLNode","stopped","trigger","eles","processChildrenList","getTopMostNodes","getPositions","ele","iterateAnimated","isDone","afterReposition","one","ticksPerFrame","positions","cancelAnimationFrame","animationData","isParent","pNode","position","requestAnimationFrame","not","layoutPositions","nodesMap","theNode","theNewGraph","children_of_children","dimensions","layoutDimensions","outerWidth","outerHeight","parseFloat","css","boundingBox","includeLabels","includeNodes","isNaN","register","cytoscape"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/layout-base/layout-base.js","./node_modules/cose-base/cose-base.js","./node_modules/cytoscape-cose-bilkent/cytoscape-cose-bilkent.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"layoutBase\"] = factory();\n\telse\n\t\troot[\"layoutBase\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 26);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LayoutConstants() {}\n\n/**\r\n * Layout Quality: 0:draft, 1:default, 2:proof\r\n */\nLayoutConstants.QUALITY = 1;\n\n/**\r\n * Default parameters\r\n */\nLayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED = false;\nLayoutConstants.DEFAULT_INCREMENTAL = false;\nLayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT = true;\nLayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT = false;\nLayoutConstants.DEFAULT_ANIMATION_PERIOD = 50;\nLayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES = false;\n\n// -----------------------------------------------------------------------------\n// Section: General other constants\n// -----------------------------------------------------------------------------\n/*\r\n * Margins of a graph to be applied on bouding rectangle of its contents. We\r\n * assume margins on all four sides to be uniform.\r\n */\nLayoutConstants.DEFAULT_GRAPH_MARGIN = 15;\n\n/*\r\n * Whether to consider labels in node dimensions or not\r\n */\nLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = false;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_SIZE = 40;\n\n/*\r\n * Default dimension of a non-compound node.\r\n */\nLayoutConstants.SIMPLE_NODE_HALF_SIZE = LayoutConstants.SIMPLE_NODE_SIZE / 2;\n\n/*\r\n * Empty compound node size. When a compound node is empty, its both\r\n * dimensions should be of this value.\r\n */\nLayoutConstants.EMPTY_COMPOUND_NODE_SIZE = 40;\n\n/*\r\n * Minimum length that an edge should take during layout\r\n */\nLayoutConstants.MIN_EDGE_LENGTH = 1;\n\n/*\r\n * World boundaries that layout operates on\r\n */\nLayoutConstants.WORLD_BOUNDARY = 1000000;\n\n/*\r\n * World boundaries that random positioning can be performed with\r\n */\nLayoutConstants.INITIAL_WORLD_BOUNDARY = LayoutConstants.WORLD_BOUNDARY / 1000;\n\n/*\r\n * Coordinates of the world center\r\n */\nLayoutConstants.WORLD_CENTER_X = 1200;\nLayoutConstants.WORLD_CENTER_Y = 900;\n\nmodule.exports = LayoutConstants;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction LEdge(source, target, vEdge) {\n  LGraphObject.call(this, vEdge);\n\n  this.isOverlapingSourceAndTarget = false;\n  this.vGraphObject = vEdge;\n  this.bendpoints = [];\n  this.source = source;\n  this.target = target;\n}\n\nLEdge.prototype = Object.create(LGraphObject.prototype);\n\nfor (var prop in LGraphObject) {\n  LEdge[prop] = LGraphObject[prop];\n}\n\nLEdge.prototype.getSource = function () {\n  return this.source;\n};\n\nLEdge.prototype.getTarget = function () {\n  return this.target;\n};\n\nLEdge.prototype.isInterGraph = function () {\n  return this.isInterGraph;\n};\n\nLEdge.prototype.getLength = function () {\n  return this.length;\n};\n\nLEdge.prototype.isOverlapingSourceAndTarget = function () {\n  return this.isOverlapingSourceAndTarget;\n};\n\nLEdge.prototype.getBendpoints = function () {\n  return this.bendpoints;\n};\n\nLEdge.prototype.getLca = function () {\n  return this.lca;\n};\n\nLEdge.prototype.getSourceInLca = function () {\n  return this.sourceInLca;\n};\n\nLEdge.prototype.getTargetInLca = function () {\n  return this.targetInLca;\n};\n\nLEdge.prototype.getOtherEnd = function (node) {\n  if (this.source === node) {\n    return this.target;\n  } else if (this.target === node) {\n    return this.source;\n  } else {\n    throw \"Node is not incident with this edge\";\n  }\n};\n\nLEdge.prototype.getOtherEndInGraph = function (node, graph) {\n  var otherEnd = this.getOtherEnd(node);\n  var root = graph.getGraphManager().getRoot();\n\n  while (true) {\n    if (otherEnd.getOwner() == graph) {\n      return otherEnd;\n    }\n\n    if (otherEnd.getOwner() == root) {\n      break;\n    }\n\n    otherEnd = otherEnd.getOwner().getParent();\n  }\n\n  return null;\n};\n\nLEdge.prototype.updateLength = function () {\n  var clipPointCoordinates = new Array(4);\n\n  this.isOverlapingSourceAndTarget = IGeometry.getIntersection(this.target.getRect(), this.source.getRect(), clipPointCoordinates);\n\n  if (!this.isOverlapingSourceAndTarget) {\n    this.lengthX = clipPointCoordinates[0] - clipPointCoordinates[2];\n    this.lengthY = clipPointCoordinates[1] - clipPointCoordinates[3];\n\n    if (Math.abs(this.lengthX) < 1.0) {\n      this.lengthX = IMath.sign(this.lengthX);\n    }\n\n    if (Math.abs(this.lengthY) < 1.0) {\n      this.lengthY = IMath.sign(this.lengthY);\n    }\n\n    this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n  }\n};\n\nLEdge.prototype.updateLengthSimple = function () {\n  this.lengthX = this.target.getCenterX() - this.source.getCenterX();\n  this.lengthY = this.target.getCenterY() - this.source.getCenterY();\n\n  if (Math.abs(this.lengthX) < 1.0) {\n    this.lengthX = IMath.sign(this.lengthX);\n  }\n\n  if (Math.abs(this.lengthY) < 1.0) {\n    this.lengthY = IMath.sign(this.lengthY);\n  }\n\n  this.length = Math.sqrt(this.lengthX * this.lengthX + this.lengthY * this.lengthY);\n};\n\nmodule.exports = LEdge;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction LGraphObject(vGraphObject) {\n  this.vGraphObject = vGraphObject;\n}\n\nmodule.exports = LGraphObject;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar RectangleD = __webpack_require__(13);\nvar LayoutConstants = __webpack_require__(0);\nvar RandomSeed = __webpack_require__(16);\nvar PointD = __webpack_require__(4);\n\nfunction LNode(gm, loc, size, vNode) {\n  //Alternative constructor 1 : LNode(LGraphManager gm, Point loc, Dimension size, Object vNode)\n  if (size == null && vNode == null) {\n    vNode = loc;\n  }\n\n  LGraphObject.call(this, vNode);\n\n  //Alternative constructor 2 : LNode(Layout layout, Object vNode)\n  if (gm.graphManager != null) gm = gm.graphManager;\n\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.inclusionTreeDepth = Integer.MAX_VALUE;\n  this.vGraphObject = vNode;\n  this.edges = [];\n  this.graphManager = gm;\n\n  if (size != null && loc != null) this.rect = new RectangleD(loc.x, loc.y, size.width, size.height);else this.rect = new RectangleD();\n}\n\nLNode.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LNode[prop] = LGraphObject[prop];\n}\n\nLNode.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLNode.prototype.getChild = function () {\n  return this.child;\n};\n\nLNode.prototype.getOwner = function () {\n  //  if (this.owner != null) {\n  //    if (!(this.owner == null || this.owner.getNodes().indexOf(this) > -1)) {\n  //      throw \"assert failed\";\n  //    }\n  //  }\n\n  return this.owner;\n};\n\nLNode.prototype.getWidth = function () {\n  return this.rect.width;\n};\n\nLNode.prototype.setWidth = function (width) {\n  this.rect.width = width;\n};\n\nLNode.prototype.getHeight = function () {\n  return this.rect.height;\n};\n\nLNode.prototype.setHeight = function (height) {\n  this.rect.height = height;\n};\n\nLNode.prototype.getCenterX = function () {\n  return this.rect.x + this.rect.width / 2;\n};\n\nLNode.prototype.getCenterY = function () {\n  return this.rect.y + this.rect.height / 2;\n};\n\nLNode.prototype.getCenter = function () {\n  return new PointD(this.rect.x + this.rect.width / 2, this.rect.y + this.rect.height / 2);\n};\n\nLNode.prototype.getLocation = function () {\n  return new PointD(this.rect.x, this.rect.y);\n};\n\nLNode.prototype.getRect = function () {\n  return this.rect;\n};\n\nLNode.prototype.getDiagonal = function () {\n  return Math.sqrt(this.rect.width * this.rect.width + this.rect.height * this.rect.height);\n};\n\n/**\n * This method returns half the diagonal length of this node.\n */\nLNode.prototype.getHalfTheDiagonal = function () {\n  return Math.sqrt(this.rect.height * this.rect.height + this.rect.width * this.rect.width) / 2;\n};\n\nLNode.prototype.setRect = function (upperLeft, dimension) {\n  this.rect.x = upperLeft.x;\n  this.rect.y = upperLeft.y;\n  this.rect.width = dimension.width;\n  this.rect.height = dimension.height;\n};\n\nLNode.prototype.setCenter = function (cx, cy) {\n  this.rect.x = cx - this.rect.width / 2;\n  this.rect.y = cy - this.rect.height / 2;\n};\n\nLNode.prototype.setLocation = function (x, y) {\n  this.rect.x = x;\n  this.rect.y = y;\n};\n\nLNode.prototype.moveBy = function (dx, dy) {\n  this.rect.x += dx;\n  this.rect.y += dy;\n};\n\nLNode.prototype.getEdgeListToNode = function (to) {\n  var edgeList = [];\n  var edge;\n  var self = this;\n\n  self.edges.forEach(function (edge) {\n\n    if (edge.target == to) {\n      if (edge.source != self) throw \"Incorrect edge source!\";\n\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getEdgesBetween = function (other) {\n  var edgeList = [];\n  var edge;\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (!(edge.source == self || edge.target == self)) throw \"Incorrect edge source and/or target\";\n\n    if (edge.target == other || edge.source == other) {\n      edgeList.push(edge);\n    }\n  });\n\n  return edgeList;\n};\n\nLNode.prototype.getNeighborsList = function () {\n  var neighbors = new Set();\n\n  var self = this;\n  self.edges.forEach(function (edge) {\n\n    if (edge.source == self) {\n      neighbors.add(edge.target);\n    } else {\n      if (edge.target != self) {\n        throw \"Incorrect incidency!\";\n      }\n\n      neighbors.add(edge.source);\n    }\n  });\n\n  return neighbors;\n};\n\nLNode.prototype.withChildren = function () {\n  var withNeighborsList = new Set();\n  var childNode;\n  var children;\n\n  withNeighborsList.add(this);\n\n  if (this.child != null) {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n      children = childNode.withChildren();\n      children.forEach(function (node) {\n        withNeighborsList.add(node);\n      });\n    }\n  }\n\n  return withNeighborsList;\n};\n\nLNode.prototype.getNoOfChildren = function () {\n  var noOfChildren = 0;\n  var childNode;\n\n  if (this.child == null) {\n    noOfChildren = 1;\n  } else {\n    var nodes = this.child.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      childNode = nodes[i];\n\n      noOfChildren += childNode.getNoOfChildren();\n    }\n  }\n\n  if (noOfChildren == 0) {\n    noOfChildren = 1;\n  }\n  return noOfChildren;\n};\n\nLNode.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLNode.prototype.calcEstimatedSize = function () {\n  if (this.child == null) {\n    return this.estimatedSize = (this.rect.width + this.rect.height) / 2;\n  } else {\n    this.estimatedSize = this.child.calcEstimatedSize();\n    this.rect.width = this.estimatedSize;\n    this.rect.height = this.estimatedSize;\n\n    return this.estimatedSize;\n  }\n};\n\nLNode.prototype.scatter = function () {\n  var randomCenterX;\n  var randomCenterY;\n\n  var minX = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxX = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterX = LayoutConstants.WORLD_CENTER_X + RandomSeed.nextDouble() * (maxX - minX) + minX;\n\n  var minY = -LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  var maxY = LayoutConstants.INITIAL_WORLD_BOUNDARY;\n  randomCenterY = LayoutConstants.WORLD_CENTER_Y + RandomSeed.nextDouble() * (maxY - minY) + minY;\n\n  this.rect.x = randomCenterX;\n  this.rect.y = randomCenterY;\n};\n\nLNode.prototype.updateBounds = function () {\n  if (this.getChild() == null) {\n    throw \"assert failed\";\n  }\n  if (this.getChild().getNodes().length != 0) {\n    // wrap the children nodes by re-arranging the boundaries\n    var childGraph = this.getChild();\n    childGraph.updateBounds(true);\n\n    this.rect.x = childGraph.getLeft();\n    this.rect.y = childGraph.getTop();\n\n    this.setWidth(childGraph.getRight() - childGraph.getLeft());\n    this.setHeight(childGraph.getBottom() - childGraph.getTop());\n\n    // Update compound bounds considering its label properties    \n    if (LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS) {\n\n      var width = childGraph.getRight() - childGraph.getLeft();\n      var height = childGraph.getBottom() - childGraph.getTop();\n\n      if (this.labelWidth > width) {\n        this.rect.x -= (this.labelWidth - width) / 2;\n        this.setWidth(this.labelWidth);\n      }\n\n      if (this.labelHeight > height) {\n        if (this.labelPos == \"center\") {\n          this.rect.y -= (this.labelHeight - height) / 2;\n        } else if (this.labelPos == \"top\") {\n          this.rect.y -= this.labelHeight - height;\n        }\n        this.setHeight(this.labelHeight);\n      }\n    }\n  }\n};\n\nLNode.prototype.getInclusionTreeDepth = function () {\n  if (this.inclusionTreeDepth == Integer.MAX_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.inclusionTreeDepth;\n};\n\nLNode.prototype.transform = function (trans) {\n  var left = this.rect.x;\n\n  if (left > LayoutConstants.WORLD_BOUNDARY) {\n    left = LayoutConstants.WORLD_BOUNDARY;\n  } else if (left < -LayoutConstants.WORLD_BOUNDARY) {\n    left = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var top = this.rect.y;\n\n  if (top > LayoutConstants.WORLD_BOUNDARY) {\n    top = LayoutConstants.WORLD_BOUNDARY;\n  } else if (top < -LayoutConstants.WORLD_BOUNDARY) {\n    top = -LayoutConstants.WORLD_BOUNDARY;\n  }\n\n  var leftTop = new PointD(left, top);\n  var vLeftTop = trans.inverseTransformPoint(leftTop);\n\n  this.setLocation(vLeftTop.x, vLeftTop.y);\n};\n\nLNode.prototype.getLeft = function () {\n  return this.rect.x;\n};\n\nLNode.prototype.getRight = function () {\n  return this.rect.x + this.rect.width;\n};\n\nLNode.prototype.getTop = function () {\n  return this.rect.y;\n};\n\nLNode.prototype.getBottom = function () {\n  return this.rect.y + this.rect.height;\n};\n\nLNode.prototype.getParent = function () {\n  if (this.owner == null) {\n    return null;\n  }\n\n  return this.owner.getParent();\n};\n\nmodule.exports = LNode;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction PointD(x, y) {\n  if (x == null && y == null) {\n    this.x = 0;\n    this.y = 0;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nPointD.prototype.getX = function () {\n  return this.x;\n};\n\nPointD.prototype.getY = function () {\n  return this.y;\n};\n\nPointD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nPointD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nPointD.prototype.getDifference = function (pt) {\n  return new DimensionD(this.x - pt.x, this.y - pt.y);\n};\n\nPointD.prototype.getCopy = function () {\n  return new PointD(this.x, this.y);\n};\n\nPointD.prototype.translate = function (dim) {\n  this.x += dim.width;\n  this.y += dim.height;\n  return this;\n};\n\nmodule.exports = PointD;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphObject = __webpack_require__(2);\nvar Integer = __webpack_require__(10);\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(6);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar RectangleD = __webpack_require__(13);\nvar Point = __webpack_require__(12);\nvar LinkedList = __webpack_require__(11);\n\nfunction LGraph(parent, obj2, vGraph) {\n  LGraphObject.call(this, vGraph);\n  this.estimatedSize = Integer.MIN_VALUE;\n  this.margin = LayoutConstants.DEFAULT_GRAPH_MARGIN;\n  this.edges = [];\n  this.nodes = [];\n  this.isConnected = false;\n  this.parent = parent;\n\n  if (obj2 != null && obj2 instanceof LGraphManager) {\n    this.graphManager = obj2;\n  } else if (obj2 != null && obj2 instanceof Layout) {\n    this.graphManager = obj2.graphManager;\n  }\n}\n\nLGraph.prototype = Object.create(LGraphObject.prototype);\nfor (var prop in LGraphObject) {\n  LGraph[prop] = LGraphObject[prop];\n}\n\nLGraph.prototype.getNodes = function () {\n  return this.nodes;\n};\n\nLGraph.prototype.getEdges = function () {\n  return this.edges;\n};\n\nLGraph.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLGraph.prototype.getParent = function () {\n  return this.parent;\n};\n\nLGraph.prototype.getLeft = function () {\n  return this.left;\n};\n\nLGraph.prototype.getRight = function () {\n  return this.right;\n};\n\nLGraph.prototype.getTop = function () {\n  return this.top;\n};\n\nLGraph.prototype.getBottom = function () {\n  return this.bottom;\n};\n\nLGraph.prototype.isConnected = function () {\n  return this.isConnected;\n};\n\nLGraph.prototype.add = function (obj1, sourceNode, targetNode) {\n  if (sourceNode == null && targetNode == null) {\n    var newNode = obj1;\n    if (this.graphManager == null) {\n      throw \"Graph has no graph mgr!\";\n    }\n    if (this.getNodes().indexOf(newNode) > -1) {\n      throw \"Node already in graph!\";\n    }\n    newNode.owner = this;\n    this.getNodes().push(newNode);\n\n    return newNode;\n  } else {\n    var newEdge = obj1;\n    if (!(this.getNodes().indexOf(sourceNode) > -1 && this.getNodes().indexOf(targetNode) > -1)) {\n      throw \"Source or target not in graph!\";\n    }\n\n    if (!(sourceNode.owner == targetNode.owner && sourceNode.owner == this)) {\n      throw \"Both owners must be this graph!\";\n    }\n\n    if (sourceNode.owner != targetNode.owner) {\n      return null;\n    }\n\n    // set source and target\n    newEdge.source = sourceNode;\n    newEdge.target = targetNode;\n\n    // set as intra-graph edge\n    newEdge.isInterGraph = false;\n\n    // add to graph edge list\n    this.getEdges().push(newEdge);\n\n    // add to incidency lists\n    sourceNode.edges.push(newEdge);\n\n    if (targetNode != sourceNode) {\n      targetNode.edges.push(newEdge);\n    }\n\n    return newEdge;\n  }\n};\n\nLGraph.prototype.remove = function (obj) {\n  var node = obj;\n  if (obj instanceof LNode) {\n    if (node == null) {\n      throw \"Node is null!\";\n    }\n    if (!(node.owner != null && node.owner == this)) {\n      throw \"Owner graph is invalid!\";\n    }\n    if (this.graphManager == null) {\n      throw \"Owner graph manager is invalid!\";\n    }\n    // remove incident edges first (make a copy to do it safely)\n    var edgesToBeRemoved = node.edges.slice();\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n\n      if (edge.isInterGraph) {\n        this.graphManager.remove(edge);\n      } else {\n        edge.source.owner.remove(edge);\n      }\n    }\n\n    // now the node itself\n    var index = this.nodes.indexOf(node);\n    if (index == -1) {\n      throw \"Node not in owner node list!\";\n    }\n\n    this.nodes.splice(index, 1);\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n    if (!(edge.source.owner != null && edge.target.owner != null && edge.source.owner == this && edge.target.owner == this)) {\n      throw \"Source and/or target owner is invalid!\";\n    }\n\n    var sourceIndex = edge.source.edges.indexOf(edge);\n    var targetIndex = edge.target.edges.indexOf(edge);\n    if (!(sourceIndex > -1 && targetIndex > -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    edge.source.edges.splice(sourceIndex, 1);\n\n    if (edge.target != edge.source) {\n      edge.target.edges.splice(targetIndex, 1);\n    }\n\n    var index = edge.source.owner.getEdges().indexOf(edge);\n    if (index == -1) {\n      throw \"Not in owner's edge list!\";\n    }\n\n    edge.source.owner.getEdges().splice(index, 1);\n  }\n};\n\nLGraph.prototype.updateLeftTop = function () {\n  var top = Integer.MAX_VALUE;\n  var left = Integer.MAX_VALUE;\n  var nodeTop;\n  var nodeLeft;\n  var margin;\n\n  var nodes = this.getNodes();\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeTop = lNode.getTop();\n    nodeLeft = lNode.getLeft();\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n  }\n\n  // Do we have any nodes in this graph?\n  if (top == Integer.MAX_VALUE) {\n    return null;\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = left - margin;\n  this.top = top - margin;\n\n  // Apply the margins and return the result\n  return new Point(this.left, this.top);\n};\n\nLGraph.prototype.updateBounds = function (recursive) {\n  // calculate bounds\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n  var margin;\n\n  var nodes = this.nodes;\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n\n    if (recursive && lNode.child != null) {\n      lNode.updateBounds();\n    }\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n  if (left == Integer.MAX_VALUE) {\n    this.left = this.parent.getLeft();\n    this.right = this.parent.getRight();\n    this.top = this.parent.getTop();\n    this.bottom = this.parent.getBottom();\n  }\n\n  if (nodes[0].getParent().paddingLeft != undefined) {\n    margin = nodes[0].getParent().paddingLeft;\n  } else {\n    margin = this.margin;\n  }\n\n  this.left = boundingRect.x - margin;\n  this.right = boundingRect.x + boundingRect.width + margin;\n  this.top = boundingRect.y - margin;\n  this.bottom = boundingRect.y + boundingRect.height + margin;\n};\n\nLGraph.calculateBounds = function (nodes) {\n  var left = Integer.MAX_VALUE;\n  var right = -Integer.MAX_VALUE;\n  var top = Integer.MAX_VALUE;\n  var bottom = -Integer.MAX_VALUE;\n  var nodeLeft;\n  var nodeRight;\n  var nodeTop;\n  var nodeBottom;\n\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    nodeLeft = lNode.getLeft();\n    nodeRight = lNode.getRight();\n    nodeTop = lNode.getTop();\n    nodeBottom = lNode.getBottom();\n\n    if (left > nodeLeft) {\n      left = nodeLeft;\n    }\n\n    if (right < nodeRight) {\n      right = nodeRight;\n    }\n\n    if (top > nodeTop) {\n      top = nodeTop;\n    }\n\n    if (bottom < nodeBottom) {\n      bottom = nodeBottom;\n    }\n  }\n\n  var boundingRect = new RectangleD(left, top, right - left, bottom - top);\n\n  return boundingRect;\n};\n\nLGraph.prototype.getInclusionTreeDepth = function () {\n  if (this == this.graphManager.getRoot()) {\n    return 1;\n  } else {\n    return this.parent.getInclusionTreeDepth();\n  }\n};\n\nLGraph.prototype.getEstimatedSize = function () {\n  if (this.estimatedSize == Integer.MIN_VALUE) {\n    throw \"assert failed\";\n  }\n  return this.estimatedSize;\n};\n\nLGraph.prototype.calcEstimatedSize = function () {\n  var size = 0;\n  var nodes = this.nodes;\n  var s = nodes.length;\n\n  for (var i = 0; i < s; i++) {\n    var lNode = nodes[i];\n    size += lNode.calcEstimatedSize();\n  }\n\n  if (size == 0) {\n    this.estimatedSize = LayoutConstants.EMPTY_COMPOUND_NODE_SIZE;\n  } else {\n    this.estimatedSize = size / Math.sqrt(this.nodes.length);\n  }\n\n  return this.estimatedSize;\n};\n\nLGraph.prototype.updateConnected = function () {\n  var self = this;\n  if (this.nodes.length == 0) {\n    this.isConnected = true;\n    return;\n  }\n\n  var queue = new LinkedList();\n  var visited = new Set();\n  var currentNode = this.nodes[0];\n  var neighborEdges;\n  var currentNeighbor;\n  var childrenOfNode = currentNode.withChildren();\n  childrenOfNode.forEach(function (node) {\n    queue.push(node);\n    visited.add(node);\n  });\n\n  while (queue.length !== 0) {\n    currentNode = queue.shift();\n\n    // Traverse all neighbors of this node\n    neighborEdges = currentNode.getEdges();\n    var size = neighborEdges.length;\n    for (var i = 0; i < size; i++) {\n      var neighborEdge = neighborEdges[i];\n      currentNeighbor = neighborEdge.getOtherEndInGraph(currentNode, this);\n\n      // Add unvisited neighbors to the list to visit\n      if (currentNeighbor != null && !visited.has(currentNeighbor)) {\n        var childrenOfNeighbor = currentNeighbor.withChildren();\n\n        childrenOfNeighbor.forEach(function (node) {\n          queue.push(node);\n          visited.add(node);\n        });\n      }\n    }\n  }\n\n  this.isConnected = false;\n\n  if (visited.size >= this.nodes.length) {\n    var noOfVisitedInThisGraph = 0;\n\n    visited.forEach(function (visitedNode) {\n      if (visitedNode.owner == self) {\n        noOfVisitedInThisGraph++;\n      }\n    });\n\n    if (noOfVisitedInThisGraph == this.nodes.length) {\n      this.isConnected = true;\n    }\n  }\n};\n\nmodule.exports = LGraph;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph;\nvar LEdge = __webpack_require__(1);\n\nfunction LGraphManager(layout) {\n  LGraph = __webpack_require__(5); // It may be better to initilize this out of this function but it gives an error (Right-hand side of 'instanceof' is not callable) now.\n  this.layout = layout;\n\n  this.graphs = [];\n  this.edges = [];\n}\n\nLGraphManager.prototype.addRoot = function () {\n  var ngraph = this.layout.newGraph();\n  var nnode = this.layout.newNode(null);\n  var root = this.add(ngraph, nnode);\n  this.setRootGraph(root);\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.add = function (newGraph, parentNode, newEdge, sourceNode, targetNode) {\n  //there are just 2 parameters are passed then it adds an LGraph else it adds an LEdge\n  if (newEdge == null && sourceNode == null && targetNode == null) {\n    if (newGraph == null) {\n      throw \"Graph is null!\";\n    }\n    if (parentNode == null) {\n      throw \"Parent node is null!\";\n    }\n    if (this.graphs.indexOf(newGraph) > -1) {\n      throw \"Graph already in this graph mgr!\";\n    }\n\n    this.graphs.push(newGraph);\n\n    if (newGraph.parent != null) {\n      throw \"Already has a parent!\";\n    }\n    if (parentNode.child != null) {\n      throw \"Already has a child!\";\n    }\n\n    newGraph.parent = parentNode;\n    parentNode.child = newGraph;\n\n    return newGraph;\n  } else {\n    //change the order of the parameters\n    targetNode = newEdge;\n    sourceNode = parentNode;\n    newEdge = newGraph;\n    var sourceGraph = sourceNode.getOwner();\n    var targetGraph = targetNode.getOwner();\n\n    if (!(sourceGraph != null && sourceGraph.getGraphManager() == this)) {\n      throw \"Source not in this graph mgr!\";\n    }\n    if (!(targetGraph != null && targetGraph.getGraphManager() == this)) {\n      throw \"Target not in this graph mgr!\";\n    }\n\n    if (sourceGraph == targetGraph) {\n      newEdge.isInterGraph = false;\n      return sourceGraph.add(newEdge, sourceNode, targetNode);\n    } else {\n      newEdge.isInterGraph = true;\n\n      // set source and target\n      newEdge.source = sourceNode;\n      newEdge.target = targetNode;\n\n      // add edge to inter-graph edge list\n      if (this.edges.indexOf(newEdge) > -1) {\n        throw \"Edge already in inter-graph edge list!\";\n      }\n\n      this.edges.push(newEdge);\n\n      // add edge to source and target incidency lists\n      if (!(newEdge.source != null && newEdge.target != null)) {\n        throw \"Edge source and/or target is null!\";\n      }\n\n      if (!(newEdge.source.edges.indexOf(newEdge) == -1 && newEdge.target.edges.indexOf(newEdge) == -1)) {\n        throw \"Edge already in source and/or target incidency list!\";\n      }\n\n      newEdge.source.edges.push(newEdge);\n      newEdge.target.edges.push(newEdge);\n\n      return newEdge;\n    }\n  }\n};\n\nLGraphManager.prototype.remove = function (lObj) {\n  if (lObj instanceof LGraph) {\n    var graph = lObj;\n    if (graph.getGraphManager() != this) {\n      throw \"Graph not in this graph mgr\";\n    }\n    if (!(graph == this.rootGraph || graph.parent != null && graph.parent.graphManager == this)) {\n      throw \"Invalid parent node!\";\n    }\n\n    // first the edges (make a copy to do it safely)\n    var edgesToBeRemoved = [];\n\n    edgesToBeRemoved = edgesToBeRemoved.concat(graph.getEdges());\n\n    var edge;\n    var s = edgesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      edge = edgesToBeRemoved[i];\n      graph.remove(edge);\n    }\n\n    // then the nodes (make a copy to do it safely)\n    var nodesToBeRemoved = [];\n\n    nodesToBeRemoved = nodesToBeRemoved.concat(graph.getNodes());\n\n    var node;\n    s = nodesToBeRemoved.length;\n    for (var i = 0; i < s; i++) {\n      node = nodesToBeRemoved[i];\n      graph.remove(node);\n    }\n\n    // check if graph is the root\n    if (graph == this.rootGraph) {\n      this.setRootGraph(null);\n    }\n\n    // now remove the graph itself\n    var index = this.graphs.indexOf(graph);\n    this.graphs.splice(index, 1);\n\n    // also reset the parent of the graph\n    graph.parent = null;\n  } else if (lObj instanceof LEdge) {\n    edge = lObj;\n    if (edge == null) {\n      throw \"Edge is null!\";\n    }\n    if (!edge.isInterGraph) {\n      throw \"Not an inter-graph edge!\";\n    }\n    if (!(edge.source != null && edge.target != null)) {\n      throw \"Source and/or target is null!\";\n    }\n\n    // remove edge from source and target nodes' incidency lists\n\n    if (!(edge.source.edges.indexOf(edge) != -1 && edge.target.edges.indexOf(edge) != -1)) {\n      throw \"Source and/or target doesn't know this edge!\";\n    }\n\n    var index = edge.source.edges.indexOf(edge);\n    edge.source.edges.splice(index, 1);\n    index = edge.target.edges.indexOf(edge);\n    edge.target.edges.splice(index, 1);\n\n    // remove edge from owner graph manager's inter-graph edge list\n\n    if (!(edge.source.owner != null && edge.source.owner.getGraphManager() != null)) {\n      throw \"Edge owner graph or owner graph manager is null!\";\n    }\n    if (edge.source.owner.getGraphManager().edges.indexOf(edge) == -1) {\n      throw \"Not in owner graph manager's edge list!\";\n    }\n\n    var index = edge.source.owner.getGraphManager().edges.indexOf(edge);\n    edge.source.owner.getGraphManager().edges.splice(index, 1);\n  }\n};\n\nLGraphManager.prototype.updateBounds = function () {\n  this.rootGraph.updateBounds(true);\n};\n\nLGraphManager.prototype.getGraphs = function () {\n  return this.graphs;\n};\n\nLGraphManager.prototype.getAllNodes = function () {\n  if (this.allNodes == null) {\n    var nodeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < s; i++) {\n      nodeList = nodeList.concat(graphs[i].getNodes());\n    }\n    this.allNodes = nodeList;\n  }\n  return this.allNodes;\n};\n\nLGraphManager.prototype.resetAllNodes = function () {\n  this.allNodes = null;\n};\n\nLGraphManager.prototype.resetAllEdges = function () {\n  this.allEdges = null;\n};\n\nLGraphManager.prototype.resetAllNodesToApplyGravitation = function () {\n  this.allNodesToApplyGravitation = null;\n};\n\nLGraphManager.prototype.getAllEdges = function () {\n  if (this.allEdges == null) {\n    var edgeList = [];\n    var graphs = this.getGraphs();\n    var s = graphs.length;\n    for (var i = 0; i < graphs.length; i++) {\n      edgeList = edgeList.concat(graphs[i].getEdges());\n    }\n\n    edgeList = edgeList.concat(this.edges);\n\n    this.allEdges = edgeList;\n  }\n  return this.allEdges;\n};\n\nLGraphManager.prototype.getAllNodesToApplyGravitation = function () {\n  return this.allNodesToApplyGravitation;\n};\n\nLGraphManager.prototype.setAllNodesToApplyGravitation = function (nodeList) {\n  if (this.allNodesToApplyGravitation != null) {\n    throw \"assert failed\";\n  }\n\n  this.allNodesToApplyGravitation = nodeList;\n};\n\nLGraphManager.prototype.getRoot = function () {\n  return this.rootGraph;\n};\n\nLGraphManager.prototype.setRootGraph = function (graph) {\n  if (graph.getGraphManager() != this) {\n    throw \"Root not in this graph mgr!\";\n  }\n\n  this.rootGraph = graph;\n  // root graph must have a root node associated with it for convenience\n  if (graph.parent == null) {\n    graph.parent = this.layout.newNode(\"Root node\");\n  }\n};\n\nLGraphManager.prototype.getLayout = function () {\n  return this.layout;\n};\n\nLGraphManager.prototype.isOneAncestorOfOther = function (firstNode, secondNode) {\n  if (!(firstNode != null && secondNode != null)) {\n    throw \"assert failed\";\n  }\n\n  if (firstNode == secondNode) {\n    return true;\n  }\n  // Is second node an ancestor of the first one?\n  var ownerGraph = firstNode.getOwner();\n  var parentNode;\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == secondNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n  // Is first node an ancestor of the second one?\n  ownerGraph = secondNode.getOwner();\n\n  do {\n    parentNode = ownerGraph.getParent();\n\n    if (parentNode == null) {\n      break;\n    }\n\n    if (parentNode == firstNode) {\n      return true;\n    }\n\n    ownerGraph = parentNode.getOwner();\n    if (ownerGraph == null) {\n      break;\n    }\n  } while (true);\n\n  return false;\n};\n\nLGraphManager.prototype.calcLowestCommonAncestors = function () {\n  var edge;\n  var sourceNode;\n  var targetNode;\n  var sourceAncestorGraph;\n  var targetAncestorGraph;\n\n  var edges = this.getAllEdges();\n  var s = edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = edges[i];\n\n    sourceNode = edge.source;\n    targetNode = edge.target;\n    edge.lca = null;\n    edge.sourceInLca = sourceNode;\n    edge.targetInLca = targetNode;\n\n    if (sourceNode == targetNode) {\n      edge.lca = sourceNode.getOwner();\n      continue;\n    }\n\n    sourceAncestorGraph = sourceNode.getOwner();\n\n    while (edge.lca == null) {\n      edge.targetInLca = targetNode;\n      targetAncestorGraph = targetNode.getOwner();\n\n      while (edge.lca == null) {\n        if (targetAncestorGraph == sourceAncestorGraph) {\n          edge.lca = targetAncestorGraph;\n          break;\n        }\n\n        if (targetAncestorGraph == this.rootGraph) {\n          break;\n        }\n\n        if (edge.lca != null) {\n          throw \"assert failed\";\n        }\n        edge.targetInLca = targetAncestorGraph.getParent();\n        targetAncestorGraph = edge.targetInLca.getOwner();\n      }\n\n      if (sourceAncestorGraph == this.rootGraph) {\n        break;\n      }\n\n      if (edge.lca == null) {\n        edge.sourceInLca = sourceAncestorGraph.getParent();\n        sourceAncestorGraph = edge.sourceInLca.getOwner();\n      }\n    }\n\n    if (edge.lca == null) {\n      throw \"assert failed\";\n    }\n  }\n};\n\nLGraphManager.prototype.calcLowestCommonAncestor = function (firstNode, secondNode) {\n  if (firstNode == secondNode) {\n    return firstNode.getOwner();\n  }\n  var firstOwnerGraph = firstNode.getOwner();\n\n  do {\n    if (firstOwnerGraph == null) {\n      break;\n    }\n    var secondOwnerGraph = secondNode.getOwner();\n\n    do {\n      if (secondOwnerGraph == null) {\n        break;\n      }\n\n      if (secondOwnerGraph == firstOwnerGraph) {\n        return secondOwnerGraph;\n      }\n      secondOwnerGraph = secondOwnerGraph.getParent().getOwner();\n    } while (true);\n\n    firstOwnerGraph = firstOwnerGraph.getParent().getOwner();\n  } while (true);\n\n  return firstOwnerGraph;\n};\n\nLGraphManager.prototype.calcInclusionTreeDepths = function (graph, depth) {\n  if (graph == null && depth == null) {\n    graph = this.rootGraph;\n    depth = 1;\n  }\n  var node;\n\n  var nodes = graph.getNodes();\n  var s = nodes.length;\n  for (var i = 0; i < s; i++) {\n    node = nodes[i];\n    node.inclusionTreeDepth = depth;\n\n    if (node.child != null) {\n      this.calcInclusionTreeDepths(node.child, depth + 1);\n    }\n  }\n};\n\nLGraphManager.prototype.includesInvalidEdge = function () {\n  var edge;\n\n  var s = this.edges.length;\n  for (var i = 0; i < s; i++) {\n    edge = this.edges[i];\n\n    if (this.isOneAncestorOfOther(edge.source, edge.target)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = LGraphManager;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0);\n\nfunction FDLayoutConstants() {}\n\n//FDLayoutConstants inherits static props in LayoutConstants\nfor (var prop in LayoutConstants) {\n  FDLayoutConstants[prop] = LayoutConstants[prop];\n}\n\nFDLayoutConstants.MAX_ITERATIONS = 2500;\n\nFDLayoutConstants.DEFAULT_EDGE_LENGTH = 50;\nFDLayoutConstants.DEFAULT_SPRING_STRENGTH = 0.45;\nFDLayoutConstants.DEFAULT_REPULSION_STRENGTH = 4500.0;\nFDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = 0.4;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = 1.0;\nFDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = 3.8;\nFDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = 1.5;\nFDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION = true;\nFDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION = true;\nFDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = 0.3;\nFDLayoutConstants.COOLING_ADAPTATION_FACTOR = 0.33;\nFDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT = 1000;\nFDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT = 5000;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL = 100.0;\nFDLayoutConstants.MAX_NODE_DISPLACEMENT = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL * 3;\nFDLayoutConstants.MIN_REPULSION_DIST = FDLayoutConstants.DEFAULT_EDGE_LENGTH / 10.0;\nFDLayoutConstants.CONVERGENCE_CHECK_PERIOD = 100;\nFDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = 0.1;\nFDLayoutConstants.MIN_EDGE_LENGTH = 1;\nFDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD = 10;\n\nmodule.exports = FDLayoutConstants;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * This class maintains a list of static geometry related utility methods.\n *\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar Point = __webpack_require__(12);\n\nfunction IGeometry() {}\n\n/**\n * This method calculates *half* the amount in x and y directions of the two\n * input rectangles needed to separate them keeping their respective\n * positioning, and returns the result in the input array. An input\n * separation buffer added to the amount in both directions. We assume that\n * the two rectangles do intersect.\n */\nIGeometry.calcSeparationAmount = function (rectA, rectB, overlapAmount, separationBuffer) {\n  if (!rectA.intersects(rectB)) {\n    throw \"assert failed\";\n  }\n\n  var directions = new Array(2);\n\n  this.decideDirectionsForOverlappingNodes(rectA, rectB, directions);\n\n  overlapAmount[0] = Math.min(rectA.getRight(), rectB.getRight()) - Math.max(rectA.x, rectB.x);\n  overlapAmount[1] = Math.min(rectA.getBottom(), rectB.getBottom()) - Math.max(rectA.y, rectB.y);\n\n  // update the overlapping amounts for the following cases:\n  if (rectA.getX() <= rectB.getX() && rectA.getRight() >= rectB.getRight()) {\n    /* Case x.1:\n    *\n    * rectA\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectB\n    */\n    overlapAmount[0] += Math.min(rectB.getX() - rectA.getX(), rectA.getRight() - rectB.getRight());\n  } else if (rectB.getX() <= rectA.getX() && rectB.getRight() >= rectA.getRight()) {\n    /* Case x.2:\n    *\n    * rectB\n    * \t|                       |\n    * \t|        _________      |\n    * \t|        |       |      |\n    * \t|________|_______|______|\n    * \t\t\t |       |\n    *           |       |\n    *        rectA\n    */\n    overlapAmount[0] += Math.min(rectA.getX() - rectB.getX(), rectB.getRight() - rectA.getRight());\n  }\n  if (rectA.getY() <= rectB.getY() && rectA.getBottom() >= rectB.getBottom()) {\n    /* Case y.1:\n     *          ________ rectA\n     *         |\n     *         |\n     *   ______|____  rectB\n     *         |    |\n     *         |    |\n     *   ______|____|\n     *         |\n     *         |\n     *         |________\n     *\n     */\n    overlapAmount[1] += Math.min(rectB.getY() - rectA.getY(), rectA.getBottom() - rectB.getBottom());\n  } else if (rectB.getY() <= rectA.getY() && rectB.getBottom() >= rectA.getBottom()) {\n    /* Case y.2:\n    *          ________ rectB\n    *         |\n    *         |\n    *   ______|____  rectA\n    *         |    |\n    *         |    |\n    *   ______|____|\n    *         |\n    *         |\n    *         |________\n    *\n    */\n    overlapAmount[1] += Math.min(rectA.getY() - rectB.getY(), rectB.getBottom() - rectA.getBottom());\n  }\n\n  // find slope of the line passes two centers\n  var slope = Math.abs((rectB.getCenterY() - rectA.getCenterY()) / (rectB.getCenterX() - rectA.getCenterX()));\n  // if centers are overlapped\n  if (rectB.getCenterY() === rectA.getCenterY() && rectB.getCenterX() === rectA.getCenterX()) {\n    // assume the slope is 1 (45 degree)\n    slope = 1.0;\n  }\n\n  var moveByY = slope * overlapAmount[0];\n  var moveByX = overlapAmount[1] / slope;\n  if (overlapAmount[0] < moveByX) {\n    moveByX = overlapAmount[0];\n  } else {\n    moveByY = overlapAmount[1];\n  }\n  // return half the amount so that if each rectangle is moved by these\n  // amounts in opposite directions, overlap will be resolved\n  overlapAmount[0] = -1 * directions[0] * (moveByX / 2 + separationBuffer);\n  overlapAmount[1] = -1 * directions[1] * (moveByY / 2 + separationBuffer);\n};\n\n/**\n * This method decides the separation direction of overlapping nodes\n *\n * if directions[0] = -1, then rectA goes left\n * if directions[0] = 1,  then rectA goes right\n * if directions[1] = -1, then rectA goes up\n * if directions[1] = 1,  then rectA goes down\n */\nIGeometry.decideDirectionsForOverlappingNodes = function (rectA, rectB, directions) {\n  if (rectA.getCenterX() < rectB.getCenterX()) {\n    directions[0] = -1;\n  } else {\n    directions[0] = 1;\n  }\n\n  if (rectA.getCenterY() < rectB.getCenterY()) {\n    directions[1] = -1;\n  } else {\n    directions[1] = 1;\n  }\n};\n\n/**\n * This method calculates the intersection (clipping) points of the two\n * input rectangles with line segment defined by the centers of these two\n * rectangles. The clipping points are saved in the input double array and\n * whether or not the two rectangles overlap is returned.\n */\nIGeometry.getIntersection2 = function (rectA, rectB, result) {\n  //result[0-1] will contain clipPoint of rectA, result[2-3] will contain clipPoint of rectB\n  var p1x = rectA.getCenterX();\n  var p1y = rectA.getCenterY();\n  var p2x = rectB.getCenterX();\n  var p2y = rectB.getCenterY();\n\n  //if two rectangles intersect, then clipping points are centers\n  if (rectA.intersects(rectB)) {\n    result[0] = p1x;\n    result[1] = p1y;\n    result[2] = p2x;\n    result[3] = p2y;\n    return true;\n  }\n  //variables for rectA\n  var topLeftAx = rectA.getX();\n  var topLeftAy = rectA.getY();\n  var topRightAx = rectA.getRight();\n  var bottomLeftAx = rectA.getX();\n  var bottomLeftAy = rectA.getBottom();\n  var bottomRightAx = rectA.getRight();\n  var halfWidthA = rectA.getWidthHalf();\n  var halfHeightA = rectA.getHeightHalf();\n  //variables for rectB\n  var topLeftBx = rectB.getX();\n  var topLeftBy = rectB.getY();\n  var topRightBx = rectB.getRight();\n  var bottomLeftBx = rectB.getX();\n  var bottomLeftBy = rectB.getBottom();\n  var bottomRightBx = rectB.getRight();\n  var halfWidthB = rectB.getWidthHalf();\n  var halfHeightB = rectB.getHeightHalf();\n\n  //flag whether clipping points are found\n  var clipPointAFound = false;\n  var clipPointBFound = false;\n\n  // line is vertical\n  if (p1x === p2x) {\n    if (p1y > p2y) {\n      result[0] = p1x;\n      result[1] = topLeftAy;\n      result[2] = p2x;\n      result[3] = bottomLeftBy;\n      return false;\n    } else if (p1y < p2y) {\n      result[0] = p1x;\n      result[1] = bottomLeftAy;\n      result[2] = p2x;\n      result[3] = topLeftBy;\n      return false;\n    } else {\n      //not line, return null;\n    }\n  }\n  // line is horizontal\n  else if (p1y === p2y) {\n      if (p1x > p2x) {\n        result[0] = topLeftAx;\n        result[1] = p1y;\n        result[2] = topRightBx;\n        result[3] = p2y;\n        return false;\n      } else if (p1x < p2x) {\n        result[0] = topRightAx;\n        result[1] = p1y;\n        result[2] = topLeftBx;\n        result[3] = p2y;\n        return false;\n      } else {\n        //not valid line, return null;\n      }\n    } else {\n      //slopes of rectA's and rectB's diagonals\n      var slopeA = rectA.height / rectA.width;\n      var slopeB = rectB.height / rectB.width;\n\n      //slope of line between center of rectA and center of rectB\n      var slopePrime = (p2y - p1y) / (p2x - p1x);\n      var cardinalDirectionA = void 0;\n      var cardinalDirectionB = void 0;\n      var tempPointAx = void 0;\n      var tempPointAy = void 0;\n      var tempPointBx = void 0;\n      var tempPointBy = void 0;\n\n      //determine whether clipping point is the corner of nodeA\n      if (-slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = bottomLeftAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = topRightAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        }\n      } else if (slopeA === slopePrime) {\n        if (p1x > p2x) {\n          result[0] = topLeftAx;\n          result[1] = topLeftAy;\n          clipPointAFound = true;\n        } else {\n          result[0] = bottomRightAx;\n          result[1] = bottomLeftAy;\n          clipPointAFound = true;\n        }\n      }\n\n      //determine whether clipping point is the corner of nodeB\n      if (-slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = bottomLeftBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = topRightBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        }\n      } else if (slopeB === slopePrime) {\n        if (p2x > p1x) {\n          result[2] = topLeftBx;\n          result[3] = topLeftBy;\n          clipPointBFound = true;\n        } else {\n          result[2] = bottomRightBx;\n          result[3] = bottomLeftBy;\n          clipPointBFound = true;\n        }\n      }\n\n      //if both clipping points are corners\n      if (clipPointAFound && clipPointBFound) {\n        return false;\n      }\n\n      //determine Cardinal Direction of rectangles\n      if (p1x > p2x) {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 4);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 2);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 3);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 1);\n        }\n      } else {\n        if (p1y > p2y) {\n          cardinalDirectionA = this.getCardinalDirection(-slopeA, slopePrime, 1);\n          cardinalDirectionB = this.getCardinalDirection(-slopeB, slopePrime, 3);\n        } else {\n          cardinalDirectionA = this.getCardinalDirection(slopeA, slopePrime, 2);\n          cardinalDirectionB = this.getCardinalDirection(slopeB, slopePrime, 4);\n        }\n      }\n      //calculate clipping Point if it is not found before\n      if (!clipPointAFound) {\n        switch (cardinalDirectionA) {\n          case 1:\n            tempPointAy = topLeftAy;\n            tempPointAx = p1x + -halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 2:\n            tempPointAx = bottomRightAx;\n            tempPointAy = p1y + halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 3:\n            tempPointAy = bottomLeftAy;\n            tempPointAx = p1x + halfHeightA / slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n          case 4:\n            tempPointAx = bottomLeftAx;\n            tempPointAy = p1y + -halfWidthA * slopePrime;\n            result[0] = tempPointAx;\n            result[1] = tempPointAy;\n            break;\n        }\n      }\n      if (!clipPointBFound) {\n        switch (cardinalDirectionB) {\n          case 1:\n            tempPointBy = topLeftBy;\n            tempPointBx = p2x + -halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 2:\n            tempPointBx = bottomRightBx;\n            tempPointBy = p2y + halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 3:\n            tempPointBy = bottomLeftBy;\n            tempPointBx = p2x + halfHeightB / slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n          case 4:\n            tempPointBx = bottomLeftBx;\n            tempPointBy = p2y + -halfWidthB * slopePrime;\n            result[2] = tempPointBx;\n            result[3] = tempPointBy;\n            break;\n        }\n      }\n    }\n  return false;\n};\n\n/**\n * This method returns in which cardinal direction does input point stays\n * 1: North\n * 2: East\n * 3: South\n * 4: West\n */\nIGeometry.getCardinalDirection = function (slope, slopePrime, line) {\n  if (slope > slopePrime) {\n    return line;\n  } else {\n    return 1 + line % 4;\n  }\n};\n\n/**\n * This method calculates the intersection of the two lines defined by\n * point pairs (s1,s2) and (f1,f2).\n */\nIGeometry.getIntersection = function (s1, s2, f1, f2) {\n  if (f2 == null) {\n    return this.getIntersection2(s1, s2, f1);\n  }\n\n  var x1 = s1.x;\n  var y1 = s1.y;\n  var x2 = s2.x;\n  var y2 = s2.y;\n  var x3 = f1.x;\n  var y3 = f1.y;\n  var x4 = f2.x;\n  var y4 = f2.y;\n  var x = void 0,\n      y = void 0; // intersection point\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0; // coefficients of line eqns.\n  var denom = void 0;\n\n  a1 = y2 - y1;\n  b1 = x1 - x2;\n  c1 = x2 * y1 - x1 * y2; // { a1*x + b1*y + c1 = 0 is line 1 }\n\n  a2 = y4 - y3;\n  b2 = x3 - x4;\n  c2 = x4 * y3 - x3 * y4; // { a2*x + b2*y + c2 = 0 is line 2 }\n\n  denom = a1 * b2 - a2 * b1;\n\n  if (denom === 0) {\n    return null;\n  }\n\n  x = (b1 * c2 - b2 * c1) / denom;\n  y = (a2 * c1 - a1 * c2) / denom;\n\n  return new Point(x, y);\n};\n\n/**\n * This method finds and returns the angle of the vector from the + x-axis\n * in clockwise direction (compatible w/ Java coordinate system!).\n */\nIGeometry.angleOfVector = function (Cx, Cy, Nx, Ny) {\n  var C_angle = void 0;\n\n  if (Cx !== Nx) {\n    C_angle = Math.atan((Ny - Cy) / (Nx - Cx));\n\n    if (Nx < Cx) {\n      C_angle += Math.PI;\n    } else if (Ny < Cy) {\n      C_angle += this.TWO_PI;\n    }\n  } else if (Ny < Cy) {\n    C_angle = this.ONE_AND_HALF_PI; // 270 degrees\n  } else {\n    C_angle = this.HALF_PI; // 90 degrees\n  }\n\n  return C_angle;\n};\n\n/**\n * This method checks whether the given two line segments (one with point\n * p1 and p2, the other with point p3 and p4) intersect at a point other\n * than these points.\n */\nIGeometry.doIntersect = function (p1, p2, p3, p4) {\n  var a = p1.x;\n  var b = p1.y;\n  var c = p2.x;\n  var d = p2.y;\n  var p = p3.x;\n  var q = p3.y;\n  var r = p4.x;\n  var s = p4.y;\n  var det = (c - a) * (s - q) - (r - p) * (d - b);\n\n  if (det === 0) {\n    return false;\n  } else {\n    var lambda = ((s - q) * (r - a) + (p - r) * (s - b)) / det;\n    var gamma = ((b - d) * (r - a) + (c - a) * (s - b)) / det;\n    return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Class Constants\n// -----------------------------------------------------------------------------\n/**\n * Some useful pre-calculated constants\n */\nIGeometry.HALF_PI = 0.5 * Math.PI;\nIGeometry.ONE_AND_HALF_PI = 1.5 * Math.PI;\nIGeometry.TWO_PI = 2.0 * Math.PI;\nIGeometry.THREE_PI = 3.0 * Math.PI;\n\nmodule.exports = IGeometry;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction IMath() {}\n\n/**\n * This method returns the sign of the input value.\n */\nIMath.sign = function (value) {\n  if (value > 0) {\n    return 1;\n  } else if (value < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n\nIMath.floor = function (value) {\n  return value < 0 ? Math.ceil(value) : Math.floor(value);\n};\n\nIMath.ceil = function (value) {\n  return value < 0 ? Math.floor(value) : Math.ceil(value);\n};\n\nmodule.exports = IMath;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Integer() {}\n\nInteger.MAX_VALUE = 2147483647;\nInteger.MIN_VALUE = -2147483648;\n\nmodule.exports = Integer;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar nodeFrom = function nodeFrom(value) {\n  return { value: value, next: null, prev: null };\n};\n\nvar add = function add(prev, node, next, list) {\n  if (prev !== null) {\n    prev.next = node;\n  } else {\n    list.head = node;\n  }\n\n  if (next !== null) {\n    next.prev = node;\n  } else {\n    list.tail = node;\n  }\n\n  node.prev = prev;\n  node.next = next;\n\n  list.length++;\n\n  return node;\n};\n\nvar _remove = function _remove(node, list) {\n  var prev = node.prev,\n      next = node.next;\n\n\n  if (prev !== null) {\n    prev.next = next;\n  } else {\n    list.head = next;\n  }\n\n  if (next !== null) {\n    next.prev = prev;\n  } else {\n    list.tail = prev;\n  }\n\n  node.prev = node.next = null;\n\n  list.length--;\n\n  return node;\n};\n\nvar LinkedList = function () {\n  function LinkedList(vals) {\n    var _this = this;\n\n    _classCallCheck(this, LinkedList);\n\n    this.length = 0;\n    this.head = null;\n    this.tail = null;\n\n    if (vals != null) {\n      vals.forEach(function (v) {\n        return _this.push(v);\n      });\n    }\n  }\n\n  _createClass(LinkedList, [{\n    key: \"size\",\n    value: function size() {\n      return this.length;\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(val, otherNode) {\n      return add(otherNode.prev, nodeFrom(val), otherNode, this);\n    }\n  }, {\n    key: \"insertAfter\",\n    value: function insertAfter(val, otherNode) {\n      return add(otherNode, nodeFrom(val), otherNode.next, this);\n    }\n  }, {\n    key: \"insertNodeBefore\",\n    value: function insertNodeBefore(newNode, otherNode) {\n      return add(otherNode.prev, newNode, otherNode, this);\n    }\n  }, {\n    key: \"insertNodeAfter\",\n    value: function insertNodeAfter(newNode, otherNode) {\n      return add(otherNode, newNode, otherNode.next, this);\n    }\n  }, {\n    key: \"push\",\n    value: function push(val) {\n      return add(this.tail, nodeFrom(val), null, this);\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(val) {\n      return add(null, nodeFrom(val), this.head, this);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      return _remove(node, this);\n    }\n  }, {\n    key: \"pop\",\n    value: function pop() {\n      return _remove(this.tail, this).value;\n    }\n  }, {\n    key: \"popNode\",\n    value: function popNode() {\n      return _remove(this.tail, this);\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      return _remove(this.head, this).value;\n    }\n  }, {\n    key: \"shiftNode\",\n    value: function shiftNode() {\n      return _remove(this.head, this);\n    }\n  }, {\n    key: \"get_object_at\",\n    value: function get_object_at(index) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        return current.value;\n      }\n    }\n  }, {\n    key: \"set_object_at\",\n    value: function set_object_at(index, value) {\n      if (index <= this.length()) {\n        var i = 1;\n        var current = this.head;\n        while (i < index) {\n          current = current.next;\n          i++;\n        }\n        current.value = value;\n      }\n    }\n  }]);\n\n  return LinkedList;\n}();\n\nmodule.exports = LinkedList;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/*\r\n *This class is the javascript implementation of the Point.java class in jdk\r\n */\nfunction Point(x, y, p) {\n  this.x = null;\n  this.y = null;\n  if (x == null && y == null && p == null) {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    this.x = x;\n    this.y = y;\n  } else if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.x = p.x;\n    this.y = p.y;\n  }\n}\n\nPoint.prototype.getX = function () {\n  return this.x;\n};\n\nPoint.prototype.getY = function () {\n  return this.y;\n};\n\nPoint.prototype.getLocation = function () {\n  return new Point(this.x, this.y);\n};\n\nPoint.prototype.setLocation = function (x, y, p) {\n  if (x.constructor.name == 'Point' && y == null && p == null) {\n    p = x;\n    this.setLocation(p.x, p.y);\n  } else if (typeof x == 'number' && typeof y == 'number' && p == null) {\n    //if both parameters are integer just move (x,y) location\n    if (parseInt(x) == x && parseInt(y) == y) {\n      this.move(x, y);\n    } else {\n      this.x = Math.floor(x + 0.5);\n      this.y = Math.floor(y + 0.5);\n    }\n  }\n};\n\nPoint.prototype.move = function (x, y) {\n  this.x = x;\n  this.y = y;\n};\n\nPoint.prototype.translate = function (dx, dy) {\n  this.x += dx;\n  this.y += dy;\n};\n\nPoint.prototype.equals = function (obj) {\n  if (obj.constructor.name == \"Point\") {\n    var pt = obj;\n    return this.x == pt.x && this.y == pt.y;\n  }\n  return this == obj;\n};\n\nPoint.prototype.toString = function () {\n  return new Point().constructor.name + \"[x=\" + this.x + \",y=\" + this.y + \"]\";\n};\n\nmodule.exports = Point;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RectangleD(x, y, width, height) {\n  this.x = 0;\n  this.y = 0;\n  this.width = 0;\n  this.height = 0;\n\n  if (x != null && y != null && width != null && height != null) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n}\n\nRectangleD.prototype.getX = function () {\n  return this.x;\n};\n\nRectangleD.prototype.setX = function (x) {\n  this.x = x;\n};\n\nRectangleD.prototype.getY = function () {\n  return this.y;\n};\n\nRectangleD.prototype.setY = function (y) {\n  this.y = y;\n};\n\nRectangleD.prototype.getWidth = function () {\n  return this.width;\n};\n\nRectangleD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nRectangleD.prototype.getHeight = function () {\n  return this.height;\n};\n\nRectangleD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nRectangleD.prototype.getRight = function () {\n  return this.x + this.width;\n};\n\nRectangleD.prototype.getBottom = function () {\n  return this.y + this.height;\n};\n\nRectangleD.prototype.intersects = function (a) {\n  if (this.getRight() < a.x) {\n    return false;\n  }\n\n  if (this.getBottom() < a.y) {\n    return false;\n  }\n\n  if (a.getRight() < this.x) {\n    return false;\n  }\n\n  if (a.getBottom() < this.y) {\n    return false;\n  }\n\n  return true;\n};\n\nRectangleD.prototype.getCenterX = function () {\n  return this.x + this.width / 2;\n};\n\nRectangleD.prototype.getMinX = function () {\n  return this.getX();\n};\n\nRectangleD.prototype.getMaxX = function () {\n  return this.getX() + this.width;\n};\n\nRectangleD.prototype.getCenterY = function () {\n  return this.y + this.height / 2;\n};\n\nRectangleD.prototype.getMinY = function () {\n  return this.getY();\n};\n\nRectangleD.prototype.getMaxY = function () {\n  return this.getY() + this.height;\n};\n\nRectangleD.prototype.getWidthHalf = function () {\n  return this.width / 2;\n};\n\nRectangleD.prototype.getHeightHalf = function () {\n  return this.height / 2;\n};\n\nmodule.exports = RectangleD;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction UniqueIDGeneretor() {}\n\nUniqueIDGeneretor.lastID = 0;\n\nUniqueIDGeneretor.createID = function (obj) {\n  if (UniqueIDGeneretor.isPrimitive(obj)) {\n    return obj;\n  }\n  if (obj.uniqueID != null) {\n    return obj.uniqueID;\n  }\n  obj.uniqueID = UniqueIDGeneretor.getString();\n  UniqueIDGeneretor.lastID++;\n  return obj.uniqueID;\n};\n\nUniqueIDGeneretor.getString = function (id) {\n  if (id == null) id = UniqueIDGeneretor.lastID;\n  return \"Object#\" + id + \"\";\n};\n\nUniqueIDGeneretor.isPrimitive = function (arg) {\n  var type = typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg);\n  return arg == null || type != \"object\" && type != \"function\";\n};\n\nmodule.exports = UniqueIDGeneretor;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar LayoutConstants = __webpack_require__(0);\nvar LGraphManager = __webpack_require__(6);\nvar LNode = __webpack_require__(3);\nvar LEdge = __webpack_require__(1);\nvar LGraph = __webpack_require__(5);\nvar PointD = __webpack_require__(4);\nvar Transform = __webpack_require__(17);\nvar Emitter = __webpack_require__(27);\n\nfunction Layout(isRemoteUse) {\n  Emitter.call(this);\n\n  //Layout Quality: 0:draft, 1:default, 2:proof\n  this.layoutQuality = LayoutConstants.QUALITY;\n  //Whether layout should create bendpoints as needed or not\n  this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  //Whether layout should be incremental or not\n  this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n  //Whether we animate from before to after layout node positions\n  this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n  //Whether we animate the layout process or not\n  this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n  //Number iterations that should be done between two successive animations\n  this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n  /**\r\n   * Whether or not leaf nodes (non-compound nodes) are of uniform sizes. When\r\n   * they are, both spring and repulsion forces between two leaf nodes can be\r\n   * calculated without the expensive clipping point calculations, resulting\r\n   * in major speed-up.\r\n   */\n  this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  /**\r\n   * This is used for creation of bendpoints by using dummy nodes and edges.\r\n   * Maps an LEdge to its dummy bendpoint path.\r\n   */\n  this.edgeToDummyNodes = new Map();\n  this.graphManager = new LGraphManager(this);\n  this.isLayoutFinished = false;\n  this.isSubLayout = false;\n  this.isRemoteUse = false;\n\n  if (isRemoteUse != null) {\n    this.isRemoteUse = isRemoteUse;\n  }\n}\n\nLayout.RANDOM_SEED = 1;\n\nLayout.prototype = Object.create(Emitter.prototype);\n\nLayout.prototype.getGraphManager = function () {\n  return this.graphManager;\n};\n\nLayout.prototype.getAllNodes = function () {\n  return this.graphManager.getAllNodes();\n};\n\nLayout.prototype.getAllEdges = function () {\n  return this.graphManager.getAllEdges();\n};\n\nLayout.prototype.getAllNodesToApplyGravitation = function () {\n  return this.graphManager.getAllNodesToApplyGravitation();\n};\n\nLayout.prototype.newGraphManager = function () {\n  var gm = new LGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nLayout.prototype.newGraph = function (vGraph) {\n  return new LGraph(null, this.graphManager, vGraph);\n};\n\nLayout.prototype.newNode = function (vNode) {\n  return new LNode(this.graphManager, vNode);\n};\n\nLayout.prototype.newEdge = function (vEdge) {\n  return new LEdge(null, null, vEdge);\n};\n\nLayout.prototype.checkLayoutSuccess = function () {\n  return this.graphManager.getRoot() == null || this.graphManager.getRoot().getNodes().length == 0 || this.graphManager.includesInvalidEdge();\n};\n\nLayout.prototype.runLayout = function () {\n  this.isLayoutFinished = false;\n\n  if (this.tilingPreLayout) {\n    this.tilingPreLayout();\n  }\n\n  this.initParameters();\n  var isLayoutSuccessfull;\n\n  if (this.checkLayoutSuccess()) {\n    isLayoutSuccessfull = false;\n  } else {\n    isLayoutSuccessfull = this.layout();\n  }\n\n  if (LayoutConstants.ANIMATE === 'during') {\n    // If this is a 'during' layout animation. Layout is not finished yet. \n    // We need to perform these in index.js when layout is really finished.\n    return false;\n  }\n\n  if (isLayoutSuccessfull) {\n    if (!this.isSubLayout) {\n      this.doPostLayout();\n    }\n  }\n\n  if (this.tilingPostLayout) {\n    this.tilingPostLayout();\n  }\n\n  this.isLayoutFinished = true;\n\n  return isLayoutSuccessfull;\n};\n\n/**\r\n * This method performs the operations required after layout.\r\n */\nLayout.prototype.doPostLayout = function () {\n  //assert !isSubLayout : \"Should not be called on sub-layout!\";\n  // Propagate geometric changes to v-level objects\n  if (!this.incremental) {\n    this.transform();\n  }\n  this.update();\n};\n\n/**\r\n * This method updates the geometry of the target graph according to\r\n * calculated layout.\r\n */\nLayout.prototype.update2 = function () {\n  // update bend points\n  if (this.createBendsAsNeeded) {\n    this.createBendpointsFromDummyNodes();\n\n    // reset all edges, since the topology has changed\n    this.graphManager.resetAllEdges();\n  }\n\n  // perform edge, node and root updates if layout is not called\n  // remotely\n  if (!this.isRemoteUse) {\n    // update all edges\n    var edge;\n    var allEdges = this.graphManager.getAllEdges();\n    for (var i = 0; i < allEdges.length; i++) {\n      edge = allEdges[i];\n      //      this.update(edge);\n    }\n\n    // recursively update nodes\n    var node;\n    var nodes = this.graphManager.getRoot().getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      node = nodes[i];\n      //      this.update(node);\n    }\n\n    // update root graph\n    this.update(this.graphManager.getRoot());\n  }\n};\n\nLayout.prototype.update = function (obj) {\n  if (obj == null) {\n    this.update2();\n  } else if (obj instanceof LNode) {\n    var node = obj;\n    if (node.getChild() != null) {\n      // since node is compound, recursively update child nodes\n      var nodes = node.getChild().getNodes();\n      for (var i = 0; i < nodes.length; i++) {\n        update(nodes[i]);\n      }\n    }\n\n    // if the l-level node is associated with a v-level graph object,\n    // then it is assumed that the v-level node implements the\n    // interface Updatable.\n    if (node.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vNode = node.vGraphObject;\n\n      // call the update method of the interface\n      vNode.update(node);\n    }\n  } else if (obj instanceof LEdge) {\n    var edge = obj;\n    // if the l-level edge is associated with a v-level graph object,\n    // then it is assumed that the v-level edge implements the\n    // interface Updatable.\n\n    if (edge.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vEdge = edge.vGraphObject;\n\n      // call the update method of the interface\n      vEdge.update(edge);\n    }\n  } else if (obj instanceof LGraph) {\n    var graph = obj;\n    // if the l-level graph is associated with a v-level graph object,\n    // then it is assumed that the v-level object implements the\n    // interface Updatable.\n\n    if (graph.vGraphObject != null) {\n      // cast to Updatable without any type check\n      var vGraph = graph.vGraphObject;\n\n      // call the update method of the interface\n      vGraph.update(graph);\n    }\n  }\n};\n\n/**\r\n * This method is used to set all layout parameters to default values\r\n * determined at compile time.\r\n */\nLayout.prototype.initParameters = function () {\n  if (!this.isSubLayout) {\n    this.layoutQuality = LayoutConstants.QUALITY;\n    this.animationDuringLayout = LayoutConstants.DEFAULT_ANIMATION_DURING_LAYOUT;\n    this.animationPeriod = LayoutConstants.DEFAULT_ANIMATION_PERIOD;\n    this.animationOnLayout = LayoutConstants.DEFAULT_ANIMATION_ON_LAYOUT;\n    this.incremental = LayoutConstants.DEFAULT_INCREMENTAL;\n    this.createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n    this.uniformLeafNodeSizes = LayoutConstants.DEFAULT_UNIFORM_LEAF_NODE_SIZES;\n  }\n\n  if (this.animationDuringLayout) {\n    this.animationOnLayout = false;\n  }\n};\n\nLayout.prototype.transform = function (newLeftTop) {\n  if (newLeftTop == undefined) {\n    this.transform(new PointD(0, 0));\n  } else {\n    // create a transformation object (from Eclipse to layout). When an\n    // inverse transform is applied, we get upper-left coordinate of the\n    // drawing or the root graph at given input coordinate (some margins\n    // already included in calculation of left-top).\n\n    var trans = new Transform();\n    var leftTop = this.graphManager.getRoot().updateLeftTop();\n\n    if (leftTop != null) {\n      trans.setWorldOrgX(newLeftTop.x);\n      trans.setWorldOrgY(newLeftTop.y);\n\n      trans.setDeviceOrgX(leftTop.x);\n      trans.setDeviceOrgY(leftTop.y);\n\n      var nodes = this.getAllNodes();\n      var node;\n\n      for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        node.transform(trans);\n      }\n    }\n  }\n};\n\nLayout.prototype.positionNodesRandomly = function (graph) {\n\n  if (graph == undefined) {\n    //assert !this.incremental;\n    this.positionNodesRandomly(this.getGraphManager().getRoot());\n    this.getGraphManager().getRoot().updateBounds(true);\n  } else {\n    var lNode;\n    var childGraph;\n\n    var nodes = graph.getNodes();\n    for (var i = 0; i < nodes.length; i++) {\n      lNode = nodes[i];\n      childGraph = lNode.getChild();\n\n      if (childGraph == null) {\n        lNode.scatter();\n      } else if (childGraph.getNodes().length == 0) {\n        lNode.scatter();\n      } else {\n        this.positionNodesRandomly(childGraph);\n        lNode.updateBounds();\n      }\n    }\n  }\n};\n\n/**\r\n * This method returns a list of trees where each tree is represented as a\r\n * list of l-nodes. The method returns a list of size 0 when:\r\n * - The graph is not flat or\r\n * - One of the component(s) of the graph is not a tree.\r\n */\nLayout.prototype.getFlatForest = function () {\n  var flatForest = [];\n  var isForest = true;\n\n  // Quick reference for all nodes in the graph manager associated with\n  // this layout. The list should not be changed.\n  var allNodes = this.graphManager.getRoot().getNodes();\n\n  // First be sure that the graph is flat\n  var isFlat = true;\n\n  for (var i = 0; i < allNodes.length; i++) {\n    if (allNodes[i].getChild() != null) {\n      isFlat = false;\n    }\n  }\n\n  // Return empty forest if the graph is not flat.\n  if (!isFlat) {\n    return flatForest;\n  }\n\n  // Run BFS for each component of the graph.\n\n  var visited = new Set();\n  var toBeVisited = [];\n  var parents = new Map();\n  var unProcessedNodes = [];\n\n  unProcessedNodes = unProcessedNodes.concat(allNodes);\n\n  // Each iteration of this loop finds a component of the graph and\n  // decides whether it is a tree or not. If it is a tree, adds it to the\n  // forest and continued with the next component.\n\n  while (unProcessedNodes.length > 0 && isForest) {\n    toBeVisited.push(unProcessedNodes[0]);\n\n    // Start the BFS. Each iteration of this loop visits a node in a\n    // BFS manner.\n    while (toBeVisited.length > 0 && isForest) {\n      //pool operation\n      var currentNode = toBeVisited[0];\n      toBeVisited.splice(0, 1);\n      visited.add(currentNode);\n\n      // Traverse all neighbors of this node\n      var neighborEdges = currentNode.getEdges();\n\n      for (var i = 0; i < neighborEdges.length; i++) {\n        var currentNeighbor = neighborEdges[i].getOtherEnd(currentNode);\n\n        // If BFS is not growing from this neighbor.\n        if (parents.get(currentNode) != currentNeighbor) {\n          // We haven't previously visited this neighbor.\n          if (!visited.has(currentNeighbor)) {\n            toBeVisited.push(currentNeighbor);\n            parents.set(currentNeighbor, currentNode);\n          }\n          // Since we have previously visited this neighbor and\n          // this neighbor is not parent of currentNode, given\n          // graph contains a component that is not tree, hence\n          // it is not a forest.\n          else {\n              isForest = false;\n              break;\n            }\n        }\n      }\n    }\n\n    // The graph contains a component that is not a tree. Empty\n    // previously found trees. The method will end.\n    if (!isForest) {\n      flatForest = [];\n    }\n    // Save currently visited nodes as a tree in our forest. Reset\n    // visited and parents lists. Continue with the next component of\n    // the graph, if any.\n    else {\n        var temp = [].concat(_toConsumableArray(visited));\n        flatForest.push(temp);\n        //flatForest = flatForest.concat(temp);\n        //unProcessedNodes.removeAll(visited);\n        for (var i = 0; i < temp.length; i++) {\n          var value = temp[i];\n          var index = unProcessedNodes.indexOf(value);\n          if (index > -1) {\n            unProcessedNodes.splice(index, 1);\n          }\n        }\n        visited = new Set();\n        parents = new Map();\n      }\n  }\n\n  return flatForest;\n};\n\n/**\r\n * This method creates dummy nodes (an l-level node with minimal dimensions)\r\n * for the given edge (one per bendpoint). The existing l-level structure\r\n * is updated accordingly.\r\n */\nLayout.prototype.createDummyNodesForBendpoints = function (edge) {\n  var dummyNodes = [];\n  var prev = edge.source;\n\n  var graph = this.graphManager.calcLowestCommonAncestor(edge.source, edge.target);\n\n  for (var i = 0; i < edge.bendpoints.length; i++) {\n    // create new dummy node\n    var dummyNode = this.newNode(null);\n    dummyNode.setRect(new Point(0, 0), new Dimension(1, 1));\n\n    graph.add(dummyNode);\n\n    // create new dummy edge between prev and dummy node\n    var dummyEdge = this.newEdge(null);\n    this.graphManager.add(dummyEdge, prev, dummyNode);\n\n    dummyNodes.add(dummyNode);\n    prev = dummyNode;\n  }\n\n  var dummyEdge = this.newEdge(null);\n  this.graphManager.add(dummyEdge, prev, edge.target);\n\n  this.edgeToDummyNodes.set(edge, dummyNodes);\n\n  // remove real edge from graph manager if it is inter-graph\n  if (edge.isInterGraph()) {\n    this.graphManager.remove(edge);\n  }\n  // else, remove the edge from the current graph\n  else {\n      graph.remove(edge);\n    }\n\n  return dummyNodes;\n};\n\n/**\r\n * This method creates bendpoints for edges from the dummy nodes\r\n * at l-level.\r\n */\nLayout.prototype.createBendpointsFromDummyNodes = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  edges = [].concat(_toConsumableArray(this.edgeToDummyNodes.keys())).concat(edges);\n\n  for (var k = 0; k < edges.length; k++) {\n    var lEdge = edges[k];\n\n    if (lEdge.bendpoints.length > 0) {\n      var path = this.edgeToDummyNodes.get(lEdge);\n\n      for (var i = 0; i < path.length; i++) {\n        var dummyNode = path[i];\n        var p = new PointD(dummyNode.getCenterX(), dummyNode.getCenterY());\n\n        // update bendpoint's location according to dummy node\n        var ebp = lEdge.bendpoints.get(i);\n        ebp.x = p.x;\n        ebp.y = p.y;\n\n        // remove the dummy node, dummy edges incident with this\n        // dummy node is also removed (within the remove method)\n        dummyNode.getOwner().remove(dummyNode);\n      }\n\n      // add the real edge to graph\n      this.graphManager.add(lEdge, lEdge.source, lEdge.target);\n    }\n  }\n};\n\nLayout.transform = function (sliderValue, defaultValue, minDiv, maxMul) {\n  if (minDiv != undefined && maxMul != undefined) {\n    var value = defaultValue;\n\n    if (sliderValue <= 50) {\n      var minValue = defaultValue / minDiv;\n      value -= (defaultValue - minValue) / 50 * (50 - sliderValue);\n    } else {\n      var maxValue = defaultValue * maxMul;\n      value += (maxValue - defaultValue) / 50 * (sliderValue - 50);\n    }\n\n    return value;\n  } else {\n    var a, b;\n\n    if (sliderValue <= 50) {\n      a = 9.0 * defaultValue / 500.0;\n      b = defaultValue / 10.0;\n    } else {\n      a = 9.0 * defaultValue / 50.0;\n      b = -8 * defaultValue;\n    }\n\n    return a * sliderValue + b;\n  }\n};\n\n/**\r\n * This method finds and returns the center of the given nodes, assuming\r\n * that the given nodes form a tree in themselves.\r\n */\nLayout.findCenterOfTree = function (nodes) {\n  var list = [];\n  list = list.concat(nodes);\n\n  var removedNodes = [];\n  var remainingDegrees = new Map();\n  var foundCenter = false;\n  var centerNode = null;\n\n  if (list.length == 1 || list.length == 2) {\n    foundCenter = true;\n    centerNode = list[0];\n  }\n\n  for (var i = 0; i < list.length; i++) {\n    var node = list[i];\n    var degree = node.getNeighborsList().size;\n    remainingDegrees.set(node, node.getNeighborsList().size);\n\n    if (degree == 1) {\n      removedNodes.push(node);\n    }\n  }\n\n  var tempList = [];\n  tempList = tempList.concat(removedNodes);\n\n  while (!foundCenter) {\n    var tempList2 = [];\n    tempList2 = tempList2.concat(tempList);\n    tempList = [];\n\n    for (var i = 0; i < list.length; i++) {\n      var node = list[i];\n\n      var index = list.indexOf(node);\n      if (index >= 0) {\n        list.splice(index, 1);\n      }\n\n      var neighbours = node.getNeighborsList();\n\n      neighbours.forEach(function (neighbour) {\n        if (removedNodes.indexOf(neighbour) < 0) {\n          var otherDegree = remainingDegrees.get(neighbour);\n          var newDegree = otherDegree - 1;\n\n          if (newDegree == 1) {\n            tempList.push(neighbour);\n          }\n\n          remainingDegrees.set(neighbour, newDegree);\n        }\n      });\n    }\n\n    removedNodes = removedNodes.concat(tempList);\n\n    if (list.length == 1 || list.length == 2) {\n      foundCenter = true;\n      centerNode = list[0];\n    }\n  }\n\n  return centerNode;\n};\n\n/**\r\n * During the coarsening process, this layout may be referenced by two graph managers\r\n * this setter function grants access to change the currently being used graph manager\r\n */\nLayout.prototype.setGraphManager = function (gm) {\n  this.graphManager = gm;\n};\n\nmodule.exports = Layout;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction RandomSeed() {}\n// adapted from: https://stackoverflow.com/a/19303725\nRandomSeed.seed = 1;\nRandomSeed.x = 0;\n\nRandomSeed.nextDouble = function () {\n  RandomSeed.x = Math.sin(RandomSeed.seed++) * 10000;\n  return RandomSeed.x - Math.floor(RandomSeed.x);\n};\n\nmodule.exports = RandomSeed;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar PointD = __webpack_require__(4);\n\nfunction Transform(x, y) {\n  this.lworldOrgX = 0.0;\n  this.lworldOrgY = 0.0;\n  this.ldeviceOrgX = 0.0;\n  this.ldeviceOrgY = 0.0;\n  this.lworldExtX = 1.0;\n  this.lworldExtY = 1.0;\n  this.ldeviceExtX = 1.0;\n  this.ldeviceExtY = 1.0;\n}\n\nTransform.prototype.getWorldOrgX = function () {\n  return this.lworldOrgX;\n};\n\nTransform.prototype.setWorldOrgX = function (wox) {\n  this.lworldOrgX = wox;\n};\n\nTransform.prototype.getWorldOrgY = function () {\n  return this.lworldOrgY;\n};\n\nTransform.prototype.setWorldOrgY = function (woy) {\n  this.lworldOrgY = woy;\n};\n\nTransform.prototype.getWorldExtX = function () {\n  return this.lworldExtX;\n};\n\nTransform.prototype.setWorldExtX = function (wex) {\n  this.lworldExtX = wex;\n};\n\nTransform.prototype.getWorldExtY = function () {\n  return this.lworldExtY;\n};\n\nTransform.prototype.setWorldExtY = function (wey) {\n  this.lworldExtY = wey;\n};\n\n/* Device related */\n\nTransform.prototype.getDeviceOrgX = function () {\n  return this.ldeviceOrgX;\n};\n\nTransform.prototype.setDeviceOrgX = function (dox) {\n  this.ldeviceOrgX = dox;\n};\n\nTransform.prototype.getDeviceOrgY = function () {\n  return this.ldeviceOrgY;\n};\n\nTransform.prototype.setDeviceOrgY = function (doy) {\n  this.ldeviceOrgY = doy;\n};\n\nTransform.prototype.getDeviceExtX = function () {\n  return this.ldeviceExtX;\n};\n\nTransform.prototype.setDeviceExtX = function (dex) {\n  this.ldeviceExtX = dex;\n};\n\nTransform.prototype.getDeviceExtY = function () {\n  return this.ldeviceExtY;\n};\n\nTransform.prototype.setDeviceExtY = function (dey) {\n  this.ldeviceExtY = dey;\n};\n\nTransform.prototype.transformX = function (x) {\n  var xDevice = 0.0;\n  var worldExtX = this.lworldExtX;\n  if (worldExtX != 0.0) {\n    xDevice = this.ldeviceOrgX + (x - this.lworldOrgX) * this.ldeviceExtX / worldExtX;\n  }\n\n  return xDevice;\n};\n\nTransform.prototype.transformY = function (y) {\n  var yDevice = 0.0;\n  var worldExtY = this.lworldExtY;\n  if (worldExtY != 0.0) {\n    yDevice = this.ldeviceOrgY + (y - this.lworldOrgY) * this.ldeviceExtY / worldExtY;\n  }\n\n  return yDevice;\n};\n\nTransform.prototype.inverseTransformX = function (x) {\n  var xWorld = 0.0;\n  var deviceExtX = this.ldeviceExtX;\n  if (deviceExtX != 0.0) {\n    xWorld = this.lworldOrgX + (x - this.ldeviceOrgX) * this.lworldExtX / deviceExtX;\n  }\n\n  return xWorld;\n};\n\nTransform.prototype.inverseTransformY = function (y) {\n  var yWorld = 0.0;\n  var deviceExtY = this.ldeviceExtY;\n  if (deviceExtY != 0.0) {\n    yWorld = this.lworldOrgY + (y - this.ldeviceOrgY) * this.lworldExtY / deviceExtY;\n  }\n  return yWorld;\n};\n\nTransform.prototype.inverseTransformPoint = function (inPoint) {\n  var outPoint = new PointD(this.inverseTransformX(inPoint.x), this.inverseTransformY(inPoint.y));\n  return outPoint;\n};\n\nmodule.exports = Transform;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar Layout = __webpack_require__(15);\nvar FDLayoutConstants = __webpack_require__(7);\nvar LayoutConstants = __webpack_require__(0);\nvar IGeometry = __webpack_require__(8);\nvar IMath = __webpack_require__(9);\n\nfunction FDLayout() {\n  Layout.call(this);\n\n  this.useSmartIdealEdgeLengthCalculation = FDLayoutConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n  this.idealEdgeLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n  this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n  this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n  this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n  this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n  this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n  this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n  this.displacementThresholdPerNode = 3.0 * FDLayoutConstants.DEFAULT_EDGE_LENGTH / 100;\n  this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.initialCoolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n  this.totalDisplacement = 0.0;\n  this.oldTotalDisplacement = 0.0;\n  this.maxIterations = FDLayoutConstants.MAX_ITERATIONS;\n}\n\nFDLayout.prototype = Object.create(Layout.prototype);\n\nfor (var prop in Layout) {\n  FDLayout[prop] = Layout[prop];\n}\n\nFDLayout.prototype.initParameters = function () {\n  Layout.prototype.initParameters.call(this, arguments);\n\n  this.totalIterations = 0;\n  this.notAnimatedIterations = 0;\n\n  this.useFRGridVariant = FDLayoutConstants.DEFAULT_USE_SMART_REPULSION_RANGE_CALCULATION;\n\n  this.grid = [];\n};\n\nFDLayout.prototype.calcIdealEdgeLengths = function () {\n  var edge;\n  var lcaDepth;\n  var source;\n  var target;\n  var sizeOfSourceInLca;\n  var sizeOfTargetInLca;\n\n  var allEdges = this.getGraphManager().getAllEdges();\n  for (var i = 0; i < allEdges.length; i++) {\n    edge = allEdges[i];\n\n    edge.idealLength = this.idealEdgeLength;\n\n    if (edge.isInterGraph) {\n      source = edge.getSource();\n      target = edge.getTarget();\n\n      sizeOfSourceInLca = edge.getSourceInLca().getEstimatedSize();\n      sizeOfTargetInLca = edge.getTargetInLca().getEstimatedSize();\n\n      if (this.useSmartIdealEdgeLengthCalculation) {\n        edge.idealLength += sizeOfSourceInLca + sizeOfTargetInLca - 2 * LayoutConstants.SIMPLE_NODE_SIZE;\n      }\n\n      lcaDepth = edge.getLca().getInclusionTreeDepth();\n\n      edge.idealLength += FDLayoutConstants.DEFAULT_EDGE_LENGTH * FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR * (source.getInclusionTreeDepth() + target.getInclusionTreeDepth() - 2 * lcaDepth);\n    }\n  }\n};\n\nFDLayout.prototype.initSpringEmbedder = function () {\n\n  var s = this.getAllNodes().length;\n  if (this.incremental) {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(this.coolingFactor * FDLayoutConstants.COOLING_ADAPTATION_FACTOR, this.coolingFactor - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * this.coolingFactor * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    }\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT_INCREMENTAL;\n  } else {\n    if (s > FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) {\n      this.coolingFactor = Math.max(FDLayoutConstants.COOLING_ADAPTATION_FACTOR, 1.0 - (s - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) / (FDLayoutConstants.ADAPTATION_UPPER_NODE_LIMIT - FDLayoutConstants.ADAPTATION_LOWER_NODE_LIMIT) * (1 - FDLayoutConstants.COOLING_ADAPTATION_FACTOR));\n    } else {\n      this.coolingFactor = 1.0;\n    }\n    this.initialCoolingFactor = this.coolingFactor;\n    this.maxNodeDisplacement = FDLayoutConstants.MAX_NODE_DISPLACEMENT;\n  }\n\n  this.maxIterations = Math.max(this.getAllNodes().length * 5, this.maxIterations);\n\n  this.totalDisplacementThreshold = this.displacementThresholdPerNode * this.getAllNodes().length;\n\n  this.repulsionRange = this.calcRepulsionRange();\n};\n\nFDLayout.prototype.calcSpringForces = function () {\n  var lEdges = this.getAllEdges();\n  var edge;\n\n  for (var i = 0; i < lEdges.length; i++) {\n    edge = lEdges[i];\n\n    this.calcSpringForce(edge, edge.idealLength);\n  }\n};\n\nFDLayout.prototype.calcRepulsionForces = function () {\n  var gridUpdateAllowed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var forceToNodeSurroundingUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var i, j;\n  var nodeA, nodeB;\n  var lNodes = this.getAllNodes();\n  var processedNodeSet;\n\n  if (this.useFRGridVariant) {\n    if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed) {\n      this.updateGrid();\n    }\n\n    processedNodeSet = new Set();\n\n    // calculate repulsion forces between each nodes and its surrounding\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n      this.calculateRepulsionForceOfANode(nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate);\n      processedNodeSet.add(nodeA);\n    }\n  } else {\n    for (i = 0; i < lNodes.length; i++) {\n      nodeA = lNodes[i];\n\n      for (j = i + 1; j < lNodes.length; j++) {\n        nodeB = lNodes[j];\n\n        // If both nodes are not members of the same graph, skip.\n        if (nodeA.getOwner() != nodeB.getOwner()) {\n          continue;\n        }\n\n        this.calcRepulsionForce(nodeA, nodeB);\n      }\n    }\n  }\n};\n\nFDLayout.prototype.calcGravitationalForces = function () {\n  var node;\n  var lNodes = this.getAllNodesToApplyGravitation();\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    this.calcGravitationalForce(node);\n  }\n};\n\nFDLayout.prototype.moveNodes = function () {\n  var lNodes = this.getAllNodes();\n  var node;\n\n  for (var i = 0; i < lNodes.length; i++) {\n    node = lNodes[i];\n    node.move();\n  }\n};\n\nFDLayout.prototype.calcSpringForce = function (edge, idealLength) {\n  var sourceNode = edge.getSource();\n  var targetNode = edge.getTarget();\n\n  var length;\n  var springForce;\n  var springForceX;\n  var springForceY;\n\n  // Update edge length\n  if (this.uniformLeafNodeSizes && sourceNode.getChild() == null && targetNode.getChild() == null) {\n    edge.updateLengthSimple();\n  } else {\n    edge.updateLength();\n\n    if (edge.isOverlapingSourceAndTarget) {\n      return;\n    }\n  }\n\n  length = edge.getLength();\n\n  if (length == 0) return;\n\n  // Calculate spring forces\n  springForce = this.springConstant * (length - idealLength);\n\n  // Project force onto x and y axes\n  springForceX = springForce * (edge.lengthX / length);\n  springForceY = springForce * (edge.lengthY / length);\n\n  // Apply forces on the end nodes\n  sourceNode.springForceX += springForceX;\n  sourceNode.springForceY += springForceY;\n  targetNode.springForceX -= springForceX;\n  targetNode.springForceY -= springForceY;\n};\n\nFDLayout.prototype.calcRepulsionForce = function (nodeA, nodeB) {\n  var rectA = nodeA.getRect();\n  var rectB = nodeB.getRect();\n  var overlapAmount = new Array(2);\n  var clipPoints = new Array(4);\n  var distanceX;\n  var distanceY;\n  var distanceSquared;\n  var distance;\n  var repulsionForce;\n  var repulsionForceX;\n  var repulsionForceY;\n\n  if (rectA.intersects(rectB)) // two nodes overlap\n    {\n      // calculate separation amount in x and y directions\n      IGeometry.calcSeparationAmount(rectA, rectB, overlapAmount, FDLayoutConstants.DEFAULT_EDGE_LENGTH / 2.0);\n\n      repulsionForceX = 2 * overlapAmount[0];\n      repulsionForceY = 2 * overlapAmount[1];\n\n      var childrenConstant = nodeA.noOfChildren * nodeB.noOfChildren / (nodeA.noOfChildren + nodeB.noOfChildren);\n\n      // Apply forces on the two nodes\n      nodeA.repulsionForceX -= childrenConstant * repulsionForceX;\n      nodeA.repulsionForceY -= childrenConstant * repulsionForceY;\n      nodeB.repulsionForceX += childrenConstant * repulsionForceX;\n      nodeB.repulsionForceY += childrenConstant * repulsionForceY;\n    } else // no overlap\n    {\n      // calculate distance\n\n      if (this.uniformLeafNodeSizes && nodeA.getChild() == null && nodeB.getChild() == null) // simply base repulsion on distance of node centers\n        {\n          distanceX = rectB.getCenterX() - rectA.getCenterX();\n          distanceY = rectB.getCenterY() - rectA.getCenterY();\n        } else // use clipping points\n        {\n          IGeometry.getIntersection(rectA, rectB, clipPoints);\n\n          distanceX = clipPoints[2] - clipPoints[0];\n          distanceY = clipPoints[3] - clipPoints[1];\n        }\n\n      // No repulsion range. FR grid variant should take care of this.\n      if (Math.abs(distanceX) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceX = IMath.sign(distanceX) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      if (Math.abs(distanceY) < FDLayoutConstants.MIN_REPULSION_DIST) {\n        distanceY = IMath.sign(distanceY) * FDLayoutConstants.MIN_REPULSION_DIST;\n      }\n\n      distanceSquared = distanceX * distanceX + distanceY * distanceY;\n      distance = Math.sqrt(distanceSquared);\n\n      repulsionForce = this.repulsionConstant * nodeA.noOfChildren * nodeB.noOfChildren / distanceSquared;\n\n      // Project force onto x and y axes\n      repulsionForceX = repulsionForce * distanceX / distance;\n      repulsionForceY = repulsionForce * distanceY / distance;\n\n      // Apply forces on the two nodes    \n      nodeA.repulsionForceX -= repulsionForceX;\n      nodeA.repulsionForceY -= repulsionForceY;\n      nodeB.repulsionForceX += repulsionForceX;\n      nodeB.repulsionForceY += repulsionForceY;\n    }\n};\n\nFDLayout.prototype.calcGravitationalForce = function (node) {\n  var ownerGraph;\n  var ownerCenterX;\n  var ownerCenterY;\n  var distanceX;\n  var distanceY;\n  var absDistanceX;\n  var absDistanceY;\n  var estimatedSize;\n  ownerGraph = node.getOwner();\n\n  ownerCenterX = (ownerGraph.getRight() + ownerGraph.getLeft()) / 2;\n  ownerCenterY = (ownerGraph.getTop() + ownerGraph.getBottom()) / 2;\n  distanceX = node.getCenterX() - ownerCenterX;\n  distanceY = node.getCenterY() - ownerCenterY;\n  absDistanceX = Math.abs(distanceX) + node.getWidth() / 2;\n  absDistanceY = Math.abs(distanceY) + node.getHeight() / 2;\n\n  if (node.getOwner() == this.graphManager.getRoot()) // in the root graph\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.gravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX;\n        node.gravitationForceY = -this.gravityConstant * distanceY;\n      }\n    } else // inside a compound\n    {\n      estimatedSize = ownerGraph.getEstimatedSize() * this.compoundGravityRangeFactor;\n\n      if (absDistanceX > estimatedSize || absDistanceY > estimatedSize) {\n        node.gravitationForceX = -this.gravityConstant * distanceX * this.compoundGravityConstant;\n        node.gravitationForceY = -this.gravityConstant * distanceY * this.compoundGravityConstant;\n      }\n    }\n};\n\nFDLayout.prototype.isConverged = function () {\n  var converged;\n  var oscilating = false;\n\n  if (this.totalIterations > this.maxIterations / 3) {\n    oscilating = Math.abs(this.totalDisplacement - this.oldTotalDisplacement) < 2;\n  }\n\n  converged = this.totalDisplacement < this.totalDisplacementThreshold;\n\n  this.oldTotalDisplacement = this.totalDisplacement;\n\n  return converged || oscilating;\n};\n\nFDLayout.prototype.animate = function () {\n  if (this.animationDuringLayout && !this.isSubLayout) {\n    if (this.notAnimatedIterations == this.animationPeriod) {\n      this.update();\n      this.notAnimatedIterations = 0;\n    } else {\n      this.notAnimatedIterations++;\n    }\n  }\n};\n\n//This method calculates the number of children (weight) for all nodes\nFDLayout.prototype.calcNoOfChildrenForAllNodes = function () {\n  var node;\n  var allNodes = this.graphManager.getAllNodes();\n\n  for (var i = 0; i < allNodes.length; i++) {\n    node = allNodes[i];\n    node.noOfChildren = node.getNoOfChildren();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: FR-Grid Variant Repulsion Force Calculation\n// -----------------------------------------------------------------------------\n\nFDLayout.prototype.calcGrid = function (graph) {\n\n  var sizeX = 0;\n  var sizeY = 0;\n\n  sizeX = parseInt(Math.ceil((graph.getRight() - graph.getLeft()) / this.repulsionRange));\n  sizeY = parseInt(Math.ceil((graph.getBottom() - graph.getTop()) / this.repulsionRange));\n\n  var grid = new Array(sizeX);\n\n  for (var i = 0; i < sizeX; i++) {\n    grid[i] = new Array(sizeY);\n  }\n\n  for (var i = 0; i < sizeX; i++) {\n    for (var j = 0; j < sizeY; j++) {\n      grid[i][j] = new Array();\n    }\n  }\n\n  return grid;\n};\n\nFDLayout.prototype.addNodeToGrid = function (v, left, top) {\n\n  var startX = 0;\n  var finishX = 0;\n  var startY = 0;\n  var finishY = 0;\n\n  startX = parseInt(Math.floor((v.getRect().x - left) / this.repulsionRange));\n  finishX = parseInt(Math.floor((v.getRect().width + v.getRect().x - left) / this.repulsionRange));\n  startY = parseInt(Math.floor((v.getRect().y - top) / this.repulsionRange));\n  finishY = parseInt(Math.floor((v.getRect().height + v.getRect().y - top) / this.repulsionRange));\n\n  for (var i = startX; i <= finishX; i++) {\n    for (var j = startY; j <= finishY; j++) {\n      this.grid[i][j].push(v);\n      v.setGridCoordinates(startX, finishX, startY, finishY);\n    }\n  }\n};\n\nFDLayout.prototype.updateGrid = function () {\n  var i;\n  var nodeA;\n  var lNodes = this.getAllNodes();\n\n  this.grid = this.calcGrid(this.graphManager.getRoot());\n\n  // put all nodes to proper grid cells\n  for (i = 0; i < lNodes.length; i++) {\n    nodeA = lNodes[i];\n    this.addNodeToGrid(nodeA, this.graphManager.getRoot().getLeft(), this.graphManager.getRoot().getTop());\n  }\n};\n\nFDLayout.prototype.calculateRepulsionForceOfANode = function (nodeA, processedNodeSet, gridUpdateAllowed, forceToNodeSurroundingUpdate) {\n\n  if (this.totalIterations % FDLayoutConstants.GRID_CALCULATION_CHECK_PERIOD == 1 && gridUpdateAllowed || forceToNodeSurroundingUpdate) {\n    var surrounding = new Set();\n    nodeA.surrounding = new Array();\n    var nodeB;\n    var grid = this.grid;\n\n    for (var i = nodeA.startX - 1; i < nodeA.finishX + 2; i++) {\n      for (var j = nodeA.startY - 1; j < nodeA.finishY + 2; j++) {\n        if (!(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length)) {\n          for (var k = 0; k < grid[i][j].length; k++) {\n            nodeB = grid[i][j][k];\n\n            // If both nodes are not members of the same graph, \n            // or both nodes are the same, skip.\n            if (nodeA.getOwner() != nodeB.getOwner() || nodeA == nodeB) {\n              continue;\n            }\n\n            // check if the repulsion force between\n            // nodeA and nodeB has already been calculated\n            if (!processedNodeSet.has(nodeB) && !surrounding.has(nodeB)) {\n              var distanceX = Math.abs(nodeA.getCenterX() - nodeB.getCenterX()) - (nodeA.getWidth() / 2 + nodeB.getWidth() / 2);\n              var distanceY = Math.abs(nodeA.getCenterY() - nodeB.getCenterY()) - (nodeA.getHeight() / 2 + nodeB.getHeight() / 2);\n\n              // if the distance between nodeA and nodeB \n              // is less then calculation range\n              if (distanceX <= this.repulsionRange && distanceY <= this.repulsionRange) {\n                //then add nodeB to surrounding of nodeA\n                surrounding.add(nodeB);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    nodeA.surrounding = [].concat(_toConsumableArray(surrounding));\n  }\n  for (i = 0; i < nodeA.surrounding.length; i++) {\n    this.calcRepulsionForce(nodeA, nodeA.surrounding[i]);\n  }\n};\n\nFDLayout.prototype.calcRepulsionRange = function () {\n  return 0.0;\n};\n\nmodule.exports = FDLayout;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LEdge = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(7);\n\nfunction FDLayoutEdge(source, target, vEdge) {\n  LEdge.call(this, source, target, vEdge);\n  this.idealLength = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\n}\n\nFDLayoutEdge.prototype = Object.create(LEdge.prototype);\n\nfor (var prop in LEdge) {\n  FDLayoutEdge[prop] = LEdge[prop];\n}\n\nmodule.exports = FDLayoutEdge;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LNode = __webpack_require__(3);\n\nfunction FDLayoutNode(gm, loc, size, vNode) {\n  // alternative constructor is handled inside LNode\n  LNode.call(this, gm, loc, size, vNode);\n  //Spring, repulsion and gravitational forces acting on this node\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  //Amount by which this node is to be moved in this iteration\n  this.displacementX = 0;\n  this.displacementY = 0;\n\n  //Start and finish grid coordinates that this node is fallen into\n  this.startX = 0;\n  this.finishX = 0;\n  this.startY = 0;\n  this.finishY = 0;\n\n  //Geometric neighbors of this node\n  this.surrounding = [];\n}\n\nFDLayoutNode.prototype = Object.create(LNode.prototype);\n\nfor (var prop in LNode) {\n  FDLayoutNode[prop] = LNode[prop];\n}\n\nFDLayoutNode.prototype.setGridCoordinates = function (_startX, _finishX, _startY, _finishY) {\n  this.startX = _startX;\n  this.finishX = _finishX;\n  this.startY = _startY;\n  this.finishY = _finishY;\n};\n\nmodule.exports = FDLayoutNode;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction DimensionD(width, height) {\n  this.width = 0;\n  this.height = 0;\n  if (width !== null && height !== null) {\n    this.height = height;\n    this.width = width;\n  }\n}\n\nDimensionD.prototype.getWidth = function () {\n  return this.width;\n};\n\nDimensionD.prototype.setWidth = function (width) {\n  this.width = width;\n};\n\nDimensionD.prototype.getHeight = function () {\n  return this.height;\n};\n\nDimensionD.prototype.setHeight = function (height) {\n  this.height = height;\n};\n\nmodule.exports = DimensionD;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashMap() {\n  this.map = {};\n  this.keys = [];\n}\n\nHashMap.prototype.put = function (key, value) {\n  var theId = UniqueIDGeneretor.createID(key);\n  if (!this.contains(theId)) {\n    this.map[theId] = value;\n    this.keys.push(key);\n  }\n};\n\nHashMap.prototype.contains = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[key] != null;\n};\n\nHashMap.prototype.get = function (key) {\n  var theId = UniqueIDGeneretor.createID(key);\n  return this.map[theId];\n};\n\nHashMap.prototype.keySet = function () {\n  return this.keys;\n};\n\nmodule.exports = HashMap;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar UniqueIDGeneretor = __webpack_require__(14);\n\nfunction HashSet() {\n  this.set = {};\n}\n;\n\nHashSet.prototype.add = function (obj) {\n  var theId = UniqueIDGeneretor.createID(obj);\n  if (!this.contains(theId)) this.set[theId] = obj;\n};\n\nHashSet.prototype.remove = function (obj) {\n  delete this.set[UniqueIDGeneretor.createID(obj)];\n};\n\nHashSet.prototype.clear = function () {\n  this.set = {};\n};\n\nHashSet.prototype.contains = function (obj) {\n  return this.set[UniqueIDGeneretor.createID(obj)] == obj;\n};\n\nHashSet.prototype.isEmpty = function () {\n  return this.size() === 0;\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\n//concats this.set to the given list\nHashSet.prototype.addAllTo = function (list) {\n  var keys = Object.keys(this.set);\n  var length = keys.length;\n  for (var i = 0; i < length; i++) {\n    list.push(this.set[keys[i]]);\n  }\n};\n\nHashSet.prototype.size = function () {\n  return Object.keys(this.set).length;\n};\n\nHashSet.prototype.addAll = function (list) {\n  var s = list.length;\n  for (var i = 0; i < s; i++) {\n    var v = list[i];\n    this.add(v);\n  }\n};\n\nmodule.exports = HashSet;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A classic Quicksort algorithm with Hoare's partition\n * - Works also on LinkedList objects\n *\n * Copyright: i-Vis Research Group, Bilkent University, 2007 - present\n */\n\nvar LinkedList = __webpack_require__(11);\n\nvar Quicksort = function () {\n    function Quicksort(A, compareFunction) {\n        _classCallCheck(this, Quicksort);\n\n        if (compareFunction !== null || compareFunction !== undefined) this.compareFunction = this._defaultCompareFunction;\n\n        var length = void 0;\n        if (A instanceof LinkedList) length = A.size();else length = A.length;\n\n        this._quicksort(A, 0, length - 1);\n    }\n\n    _createClass(Quicksort, [{\n        key: '_quicksort',\n        value: function _quicksort(A, p, r) {\n            if (p < r) {\n                var q = this._partition(A, p, r);\n                this._quicksort(A, p, q);\n                this._quicksort(A, q + 1, r);\n            }\n        }\n    }, {\n        key: '_partition',\n        value: function _partition(A, p, r) {\n            var x = this._get(A, p);\n            var i = p;\n            var j = r;\n            while (true) {\n                while (this.compareFunction(x, this._get(A, j))) {\n                    j--;\n                }while (this.compareFunction(this._get(A, i), x)) {\n                    i++;\n                }if (i < j) {\n                    this._swap(A, i, j);\n                    i++;\n                    j--;\n                } else return j;\n            }\n        }\n    }, {\n        key: '_get',\n        value: function _get(object, index) {\n            if (object instanceof LinkedList) return object.get_object_at(index);else return object[index];\n        }\n    }, {\n        key: '_set',\n        value: function _set(object, index, value) {\n            if (object instanceof LinkedList) object.set_object_at(index, value);else object[index] = value;\n        }\n    }, {\n        key: '_swap',\n        value: function _swap(A, i, j) {\n            var temp = this._get(A, i);\n            this._set(A, i, this._get(A, j));\n            this._set(A, j, temp);\n        }\n    }, {\n        key: '_defaultCompareFunction',\n        value: function _defaultCompareFunction(a, b) {\n            return b > a;\n        }\n    }]);\n\n    return Quicksort;\n}();\n\nmodule.exports = Quicksort;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *   Needleman-Wunsch algorithm is an procedure to compute the optimal global alignment of two string\n *   sequences by S.B.Needleman and C.D.Wunsch (1970).\n *\n *   Aside from the inputs, you can assign the scores for,\n *   - Match: The two characters at the current index are same.\n *   - Mismatch: The two characters at the current index are different.\n *   - Insertion/Deletion(gaps): The best alignment involves one letter aligning to a gap in the other string.\n */\n\nvar NeedlemanWunsch = function () {\n    function NeedlemanWunsch(sequence1, sequence2) {\n        var match_score = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var mismatch_penalty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n        var gap_penalty = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n\n        _classCallCheck(this, NeedlemanWunsch);\n\n        this.sequence1 = sequence1;\n        this.sequence2 = sequence2;\n        this.match_score = match_score;\n        this.mismatch_penalty = mismatch_penalty;\n        this.gap_penalty = gap_penalty;\n\n        // Just the remove redundancy\n        this.iMax = sequence1.length + 1;\n        this.jMax = sequence2.length + 1;\n\n        // Grid matrix of scores\n        this.grid = new Array(this.iMax);\n        for (var i = 0; i < this.iMax; i++) {\n            this.grid[i] = new Array(this.jMax);\n\n            for (var j = 0; j < this.jMax; j++) {\n                this.grid[i][j] = 0;\n            }\n        }\n\n        // Traceback matrix (2D array, each cell is an array of boolean values for [`Diag`, `Up`, `Left`] positions)\n        this.tracebackGrid = new Array(this.iMax);\n        for (var _i = 0; _i < this.iMax; _i++) {\n            this.tracebackGrid[_i] = new Array(this.jMax);\n\n            for (var _j = 0; _j < this.jMax; _j++) {\n                this.tracebackGrid[_i][_j] = [null, null, null];\n            }\n        }\n\n        // The aligned sequences (return multiple possibilities)\n        this.alignments = [];\n\n        // Final alignment score\n        this.score = -1;\n\n        // Calculate scores and tracebacks\n        this.computeGrids();\n    }\n\n    _createClass(NeedlemanWunsch, [{\n        key: \"getScore\",\n        value: function getScore() {\n            return this.score;\n        }\n    }, {\n        key: \"getAlignments\",\n        value: function getAlignments() {\n            return this.alignments;\n        }\n\n        // Main dynamic programming procedure\n\n    }, {\n        key: \"computeGrids\",\n        value: function computeGrids() {\n            // Fill in the first row\n            for (var j = 1; j < this.jMax; j++) {\n                this.grid[0][j] = this.grid[0][j - 1] + this.gap_penalty;\n                this.tracebackGrid[0][j] = [false, false, true];\n            }\n\n            // Fill in the first column\n            for (var i = 1; i < this.iMax; i++) {\n                this.grid[i][0] = this.grid[i - 1][0] + this.gap_penalty;\n                this.tracebackGrid[i][0] = [false, true, false];\n            }\n\n            // Fill the rest of the grid\n            for (var _i2 = 1; _i2 < this.iMax; _i2++) {\n                for (var _j2 = 1; _j2 < this.jMax; _j2++) {\n                    // Find the max score(s) among [`Diag`, `Up`, `Left`]\n                    var diag = void 0;\n                    if (this.sequence1[_i2 - 1] === this.sequence2[_j2 - 1]) diag = this.grid[_i2 - 1][_j2 - 1] + this.match_score;else diag = this.grid[_i2 - 1][_j2 - 1] + this.mismatch_penalty;\n\n                    var up = this.grid[_i2 - 1][_j2] + this.gap_penalty;\n                    var left = this.grid[_i2][_j2 - 1] + this.gap_penalty;\n\n                    // If there exists multiple max values, capture them for multiple paths\n                    var maxOf = [diag, up, left];\n                    var indices = this.arrayAllMaxIndexes(maxOf);\n\n                    // Update Grids\n                    this.grid[_i2][_j2] = maxOf[indices[0]];\n                    this.tracebackGrid[_i2][_j2] = [indices.includes(0), indices.includes(1), indices.includes(2)];\n                }\n            }\n\n            // Update alignment score\n            this.score = this.grid[this.iMax - 1][this.jMax - 1];\n        }\n\n        // Gets all possible valid sequence combinations\n\n    }, {\n        key: \"alignmentTraceback\",\n        value: function alignmentTraceback() {\n            var inProcessAlignments = [];\n\n            inProcessAlignments.push({ pos: [this.sequence1.length, this.sequence2.length],\n                seq1: \"\",\n                seq2: \"\"\n            });\n\n            while (inProcessAlignments[0]) {\n                var current = inProcessAlignments[0];\n                var directions = this.tracebackGrid[current.pos[0]][current.pos[1]];\n\n                if (directions[0]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1] - 1],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n                if (directions[1]) {\n                    inProcessAlignments.push({ pos: [current.pos[0] - 1, current.pos[1]],\n                        seq1: this.sequence1[current.pos[0] - 1] + current.seq1,\n                        seq2: '-' + current.seq2\n                    });\n                }\n                if (directions[2]) {\n                    inProcessAlignments.push({ pos: [current.pos[0], current.pos[1] - 1],\n                        seq1: '-' + current.seq1,\n                        seq2: this.sequence2[current.pos[1] - 1] + current.seq2\n                    });\n                }\n\n                if (current.pos[0] === 0 && current.pos[1] === 0) this.alignments.push({ sequence1: current.seq1,\n                    sequence2: current.seq2\n                });\n\n                inProcessAlignments.shift();\n            }\n\n            return this.alignments;\n        }\n\n        // Helper Functions\n\n    }, {\n        key: \"getAllIndexes\",\n        value: function getAllIndexes(arr, val) {\n            var indexes = [],\n                i = -1;\n            while ((i = arr.indexOf(val, i + 1)) !== -1) {\n                indexes.push(i);\n            }\n            return indexes;\n        }\n    }, {\n        key: \"arrayAllMaxIndexes\",\n        value: function arrayAllMaxIndexes(array) {\n            return this.getAllIndexes(array, Math.max.apply(null, array));\n        }\n    }]);\n\n    return NeedlemanWunsch;\n}();\n\nmodule.exports = NeedlemanWunsch;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar layoutBase = function layoutBase() {\n  return;\n};\n\nlayoutBase.FDLayout = __webpack_require__(18);\nlayoutBase.FDLayoutConstants = __webpack_require__(7);\nlayoutBase.FDLayoutEdge = __webpack_require__(19);\nlayoutBase.FDLayoutNode = __webpack_require__(20);\nlayoutBase.DimensionD = __webpack_require__(21);\nlayoutBase.HashMap = __webpack_require__(22);\nlayoutBase.HashSet = __webpack_require__(23);\nlayoutBase.IGeometry = __webpack_require__(8);\nlayoutBase.IMath = __webpack_require__(9);\nlayoutBase.Integer = __webpack_require__(10);\nlayoutBase.Point = __webpack_require__(12);\nlayoutBase.PointD = __webpack_require__(4);\nlayoutBase.RandomSeed = __webpack_require__(16);\nlayoutBase.RectangleD = __webpack_require__(13);\nlayoutBase.Transform = __webpack_require__(17);\nlayoutBase.UniqueIDGeneretor = __webpack_require__(14);\nlayoutBase.Quicksort = __webpack_require__(24);\nlayoutBase.LinkedList = __webpack_require__(11);\nlayoutBase.LGraphObject = __webpack_require__(2);\nlayoutBase.LGraph = __webpack_require__(5);\nlayoutBase.LEdge = __webpack_require__(1);\nlayoutBase.LGraphManager = __webpack_require__(6);\nlayoutBase.LNode = __webpack_require__(3);\nlayoutBase.Layout = __webpack_require__(15);\nlayoutBase.LayoutConstants = __webpack_require__(0);\nlayoutBase.NeedlemanWunsch = __webpack_require__(25);\n\nmodule.exports = layoutBase;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction Emitter() {\n  this.listeners = [];\n}\n\nvar p = Emitter.prototype;\n\np.addListener = function (event, callback) {\n  this.listeners.push({\n    event: event,\n    callback: callback\n  });\n};\n\np.removeListener = function (event, callback) {\n  for (var i = this.listeners.length; i >= 0; i--) {\n    var l = this.listeners[i];\n\n    if (l.event === event && l.callback === callback) {\n      this.listeners.splice(i, 1);\n    }\n  }\n};\n\np.emit = function (event, data) {\n  for (var i = 0; i < this.listeners.length; i++) {\n    var l = this.listeners[i];\n\n    if (event === l.event) {\n      l.callback(data);\n    }\n  }\n};\n\nmodule.exports = Emitter;\n\n/***/ })\n/******/ ]);\n});","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"layout-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"layout-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"coseBase\"] = factory(require(\"layout-base\"));\n\telse\n\t\troot[\"coseBase\"] = factory(root[\"layoutBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\n\nfunction CoSEConstants() {}\n\n//CoSEConstants inherits static props in FDLayoutConstants\nfor (var prop in FDLayoutConstants) {\n  CoSEConstants[prop] = FDLayoutConstants[prop];\n}\n\nCoSEConstants.DEFAULT_USE_MULTI_LEVEL_SCALING = false;\nCoSEConstants.DEFAULT_RADIAL_SEPARATION = FDLayoutConstants.DEFAULT_EDGE_LENGTH;\nCoSEConstants.DEFAULT_COMPONENT_SEPERATION = 60;\nCoSEConstants.TILE = true;\nCoSEConstants.TILING_PADDING_VERTICAL = 10;\nCoSEConstants.TILING_PADDING_HORIZONTAL = 10;\nCoSEConstants.TREE_REDUCTION_ON_INCREMENTAL = false; // make this true when cose is used incrementally as a part of other non-incremental layout\n\nmodule.exports = CoSEConstants;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutEdge = __webpack_require__(0).FDLayoutEdge;\n\nfunction CoSEEdge(source, target, vEdge) {\n  FDLayoutEdge.call(this, source, target, vEdge);\n}\n\nCoSEEdge.prototype = Object.create(FDLayoutEdge.prototype);\nfor (var prop in FDLayoutEdge) {\n  CoSEEdge[prop] = FDLayoutEdge[prop];\n}\n\nmodule.exports = CoSEEdge;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraph = __webpack_require__(0).LGraph;\n\nfunction CoSEGraph(parent, graphMgr, vGraph) {\n  LGraph.call(this, parent, graphMgr, vGraph);\n}\n\nCoSEGraph.prototype = Object.create(LGraph.prototype);\nfor (var prop in LGraph) {\n  CoSEGraph[prop] = LGraph[prop];\n}\n\nmodule.exports = CoSEGraph;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LGraphManager = __webpack_require__(0).LGraphManager;\n\nfunction CoSEGraphManager(layout) {\n  LGraphManager.call(this, layout);\n}\n\nCoSEGraphManager.prototype = Object.create(LGraphManager.prototype);\nfor (var prop in LGraphManager) {\n  CoSEGraphManager[prop] = LGraphManager[prop];\n}\n\nmodule.exports = CoSEGraphManager;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayoutNode = __webpack_require__(0).FDLayoutNode;\nvar IMath = __webpack_require__(0).IMath;\n\nfunction CoSENode(gm, loc, size, vNode) {\n  FDLayoutNode.call(this, gm, loc, size, vNode);\n}\n\nCoSENode.prototype = Object.create(FDLayoutNode.prototype);\nfor (var prop in FDLayoutNode) {\n  CoSENode[prop] = FDLayoutNode[prop];\n}\n\nCoSENode.prototype.move = function () {\n  var layout = this.graphManager.getLayout();\n  this.displacementX = layout.coolingFactor * (this.springForceX + this.repulsionForceX + this.gravitationForceX) / this.noOfChildren;\n  this.displacementY = layout.coolingFactor * (this.springForceY + this.repulsionForceY + this.gravitationForceY) / this.noOfChildren;\n\n  if (Math.abs(this.displacementX) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementX = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementX);\n  }\n\n  if (Math.abs(this.displacementY) > layout.coolingFactor * layout.maxNodeDisplacement) {\n    this.displacementY = layout.coolingFactor * layout.maxNodeDisplacement * IMath.sign(this.displacementY);\n  }\n\n  // a simple node, just move it\n  if (this.child == null) {\n    this.moveBy(this.displacementX, this.displacementY);\n  }\n  // an empty compound node, again just move it\n  else if (this.child.getNodes().length == 0) {\n      this.moveBy(this.displacementX, this.displacementY);\n    }\n    // non-empty compound node, propogate movement to children as well\n    else {\n        this.propogateDisplacementToChildren(this.displacementX, this.displacementY);\n      }\n\n  layout.totalDisplacement += Math.abs(this.displacementX) + Math.abs(this.displacementY);\n\n  this.springForceX = 0;\n  this.springForceY = 0;\n  this.repulsionForceX = 0;\n  this.repulsionForceY = 0;\n  this.gravitationForceX = 0;\n  this.gravitationForceY = 0;\n  this.displacementX = 0;\n  this.displacementY = 0;\n};\n\nCoSENode.prototype.propogateDisplacementToChildren = function (dX, dY) {\n  var nodes = this.getChild().getNodes();\n  var node;\n  for (var i = 0; i < nodes.length; i++) {\n    node = nodes[i];\n    if (node.getChild() == null) {\n      node.moveBy(dX, dY);\n      node.displacementX += dX;\n      node.displacementY += dY;\n    } else {\n      node.propogateDisplacementToChildren(dX, dY);\n    }\n  }\n};\n\nCoSENode.prototype.setPred1 = function (pred1) {\n  this.pred1 = pred1;\n};\n\nCoSENode.prototype.getPred1 = function () {\n  return pred1;\n};\n\nCoSENode.prototype.getPred2 = function () {\n  return pred2;\n};\n\nCoSENode.prototype.setNext = function (next) {\n  this.next = next;\n};\n\nCoSENode.prototype.getNext = function () {\n  return next;\n};\n\nCoSENode.prototype.setProcessed = function (processed) {\n  this.processed = processed;\n};\n\nCoSENode.prototype.isProcessed = function () {\n  return processed;\n};\n\nmodule.exports = CoSENode;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar FDLayout = __webpack_require__(0).FDLayout;\nvar CoSEGraphManager = __webpack_require__(4);\nvar CoSEGraph = __webpack_require__(3);\nvar CoSENode = __webpack_require__(5);\nvar CoSEEdge = __webpack_require__(2);\nvar CoSEConstants = __webpack_require__(1);\nvar FDLayoutConstants = __webpack_require__(0).FDLayoutConstants;\nvar LayoutConstants = __webpack_require__(0).LayoutConstants;\nvar Point = __webpack_require__(0).Point;\nvar PointD = __webpack_require__(0).PointD;\nvar Layout = __webpack_require__(0).Layout;\nvar Integer = __webpack_require__(0).Integer;\nvar IGeometry = __webpack_require__(0).IGeometry;\nvar LGraph = __webpack_require__(0).LGraph;\nvar Transform = __webpack_require__(0).Transform;\n\nfunction CoSELayout() {\n  FDLayout.call(this);\n\n  this.toBeTiled = {}; // Memorize if a node is to be tiled or is tiled\n}\n\nCoSELayout.prototype = Object.create(FDLayout.prototype);\n\nfor (var prop in FDLayout) {\n  CoSELayout[prop] = FDLayout[prop];\n}\n\nCoSELayout.prototype.newGraphManager = function () {\n  var gm = new CoSEGraphManager(this);\n  this.graphManager = gm;\n  return gm;\n};\n\nCoSELayout.prototype.newGraph = function (vGraph) {\n  return new CoSEGraph(null, this.graphManager, vGraph);\n};\n\nCoSELayout.prototype.newNode = function (vNode) {\n  return new CoSENode(this.graphManager, vNode);\n};\n\nCoSELayout.prototype.newEdge = function (vEdge) {\n  return new CoSEEdge(null, null, vEdge);\n};\n\nCoSELayout.prototype.initParameters = function () {\n  FDLayout.prototype.initParameters.call(this, arguments);\n  if (!this.isSubLayout) {\n    if (CoSEConstants.DEFAULT_EDGE_LENGTH < 10) {\n      this.idealEdgeLength = 10;\n    } else {\n      this.idealEdgeLength = CoSEConstants.DEFAULT_EDGE_LENGTH;\n    }\n\n    this.useSmartIdealEdgeLengthCalculation = CoSEConstants.DEFAULT_USE_SMART_IDEAL_EDGE_LENGTH_CALCULATION;\n    this.springConstant = FDLayoutConstants.DEFAULT_SPRING_STRENGTH;\n    this.repulsionConstant = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH;\n    this.gravityConstant = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH;\n    this.compoundGravityConstant = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH;\n    this.gravityRangeFactor = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR;\n    this.compoundGravityRangeFactor = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR;\n\n    // variables for tree reduction support\n    this.prunedNodesAll = [];\n    this.growTreeIterations = 0;\n    this.afterGrowthIterations = 0;\n    this.isTreeGrowing = false;\n    this.isGrowthFinished = false;\n\n    // variables for cooling\n    this.coolingCycle = 0;\n    this.maxCoolingCycle = this.maxIterations / FDLayoutConstants.CONVERGENCE_CHECK_PERIOD;\n    this.finalTemperature = FDLayoutConstants.CONVERGENCE_CHECK_PERIOD / this.maxIterations;\n    this.coolingAdjuster = 1;\n  }\n};\n\nCoSELayout.prototype.layout = function () {\n  var createBendsAsNeeded = LayoutConstants.DEFAULT_CREATE_BENDS_AS_NEEDED;\n  if (createBendsAsNeeded) {\n    this.createBendpoints();\n    this.graphManager.resetAllEdges();\n  }\n\n  this.level = 0;\n  return this.classicLayout();\n};\n\nCoSELayout.prototype.classicLayout = function () {\n  this.nodesWithGravity = this.calculateNodesToApplyGravitationTo();\n  this.graphManager.setAllNodesToApplyGravitation(this.nodesWithGravity);\n  this.calcNoOfChildrenForAllNodes();\n  this.graphManager.calcLowestCommonAncestors();\n  this.graphManager.calcInclusionTreeDepths();\n  this.graphManager.getRoot().calcEstimatedSize();\n  this.calcIdealEdgeLengths();\n\n  if (!this.incremental) {\n    var forest = this.getFlatForest();\n\n    // The graph associated with this layout is flat and a forest\n    if (forest.length > 0) {\n      this.positionNodesRadially(forest);\n    }\n    // The graph associated with this layout is not flat or a forest\n    else {\n        // Reduce the trees when incremental mode is not enabled and graph is not a forest \n        this.reduceTrees();\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.positionNodesRandomly();\n      }\n  } else {\n    if (CoSEConstants.TREE_REDUCTION_ON_INCREMENTAL) {\n      // Reduce the trees in incremental mode if only this constant is set to true \n      this.reduceTrees();\n      // Update nodes that gravity will be applied\n      this.graphManager.resetAllNodesToApplyGravitation();\n      var allNodes = new Set(this.getAllNodes());\n      var intersection = this.nodesWithGravity.filter(function (x) {\n        return allNodes.has(x);\n      });\n      this.graphManager.setAllNodesToApplyGravitation(intersection);\n    }\n  }\n\n  this.initSpringEmbedder();\n  this.runSpringEmbedder();\n\n  return true;\n};\n\nCoSELayout.prototype.tick = function () {\n  this.totalIterations++;\n\n  if (this.totalIterations === this.maxIterations && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.prunedNodesAll.length > 0) {\n      this.isTreeGrowing = true;\n    } else {\n      return true;\n    }\n  }\n\n  if (this.totalIterations % FDLayoutConstants.CONVERGENCE_CHECK_PERIOD == 0 && !this.isTreeGrowing && !this.isGrowthFinished) {\n    if (this.isConverged()) {\n      if (this.prunedNodesAll.length > 0) {\n        this.isTreeGrowing = true;\n      } else {\n        return true;\n      }\n    }\n\n    this.coolingCycle++;\n\n    if (this.layoutQuality == 0) {\n      // quality - \"draft\"\n      this.coolingAdjuster = this.coolingCycle;\n    } else if (this.layoutQuality == 1) {\n      // quality - \"default\"\n      this.coolingAdjuster = this.coolingCycle / 3;\n    }\n\n    // cooling schedule is based on http://www.btluke.com/simanf1.html -> cooling schedule 3\n    this.coolingFactor = Math.max(this.initialCoolingFactor - Math.pow(this.coolingCycle, Math.log(100 * (this.initialCoolingFactor - this.finalTemperature)) / Math.log(this.maxCoolingCycle)) / 100 * this.coolingAdjuster, this.finalTemperature);\n    this.animationPeriod = Math.ceil(this.initialAnimationPeriod * Math.sqrt(this.coolingFactor));\n  }\n  // Operations while tree is growing again \n  if (this.isTreeGrowing) {\n    if (this.growTreeIterations % 10 == 0) {\n      if (this.prunedNodesAll.length > 0) {\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.growTree(this.prunedNodesAll);\n        // Update nodes that gravity will be applied\n        this.graphManager.resetAllNodesToApplyGravitation();\n        var allNodes = new Set(this.getAllNodes());\n        var intersection = this.nodesWithGravity.filter(function (x) {\n          return allNodes.has(x);\n        });\n        this.graphManager.setAllNodesToApplyGravitation(intersection);\n\n        this.graphManager.updateBounds();\n        this.updateGrid();\n        this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL;\n      } else {\n        this.isTreeGrowing = false;\n        this.isGrowthFinished = true;\n      }\n    }\n    this.growTreeIterations++;\n  }\n  // Operations after growth is finished\n  if (this.isGrowthFinished) {\n    if (this.isConverged()) {\n      return true;\n    }\n    if (this.afterGrowthIterations % 10 == 0) {\n      this.graphManager.updateBounds();\n      this.updateGrid();\n    }\n    this.coolingFactor = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL * ((100 - this.afterGrowthIterations) / 100);\n    this.afterGrowthIterations++;\n  }\n\n  var gridUpdateAllowed = !this.isTreeGrowing && !this.isGrowthFinished;\n  var forceToNodeSurroundingUpdate = this.growTreeIterations % 10 == 1 && this.isTreeGrowing || this.afterGrowthIterations % 10 == 1 && this.isGrowthFinished;\n\n  this.totalDisplacement = 0;\n  this.graphManager.updateBounds();\n  this.calcSpringForces();\n  this.calcRepulsionForces(gridUpdateAllowed, forceToNodeSurroundingUpdate);\n  this.calcGravitationalForces();\n  this.moveNodes();\n  this.animate();\n\n  return false; // Layout is not ended yet return false\n};\n\nCoSELayout.prototype.getPositionsData = function () {\n  var allNodes = this.graphManager.getAllNodes();\n  var pData = {};\n  for (var i = 0; i < allNodes.length; i++) {\n    var rect = allNodes[i].rect;\n    var id = allNodes[i].id;\n    pData[id] = {\n      id: id,\n      x: rect.getCenterX(),\n      y: rect.getCenterY(),\n      w: rect.width,\n      h: rect.height\n    };\n  }\n\n  return pData;\n};\n\nCoSELayout.prototype.runSpringEmbedder = function () {\n  this.initialAnimationPeriod = 25;\n  this.animationPeriod = this.initialAnimationPeriod;\n  var layoutEnded = false;\n\n  // If aminate option is 'during' signal that layout is supposed to start iterating\n  if (FDLayoutConstants.ANIMATE === 'during') {\n    this.emit('layoutstarted');\n  } else {\n    // If aminate option is 'during' tick() function will be called on index.js\n    while (!layoutEnded) {\n      layoutEnded = this.tick();\n    }\n\n    this.graphManager.updateBounds();\n  }\n};\n\nCoSELayout.prototype.calculateNodesToApplyGravitationTo = function () {\n  var nodeList = [];\n  var graph;\n\n  var graphs = this.graphManager.getGraphs();\n  var size = graphs.length;\n  var i;\n  for (i = 0; i < size; i++) {\n    graph = graphs[i];\n\n    graph.updateConnected();\n\n    if (!graph.isConnected) {\n      nodeList = nodeList.concat(graph.getNodes());\n    }\n  }\n\n  return nodeList;\n};\n\nCoSELayout.prototype.createBendpoints = function () {\n  var edges = [];\n  edges = edges.concat(this.graphManager.getAllEdges());\n  var visited = new Set();\n  var i;\n  for (i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n\n    if (!visited.has(edge)) {\n      var source = edge.getSource();\n      var target = edge.getTarget();\n\n      if (source == target) {\n        edge.getBendpoints().push(new PointD());\n        edge.getBendpoints().push(new PointD());\n        this.createDummyNodesForBendpoints(edge);\n        visited.add(edge);\n      } else {\n        var edgeList = [];\n\n        edgeList = edgeList.concat(source.getEdgeListToNode(target));\n        edgeList = edgeList.concat(target.getEdgeListToNode(source));\n\n        if (!visited.has(edgeList[0])) {\n          if (edgeList.length > 1) {\n            var k;\n            for (k = 0; k < edgeList.length; k++) {\n              var multiEdge = edgeList[k];\n              multiEdge.getBendpoints().push(new PointD());\n              this.createDummyNodesForBendpoints(multiEdge);\n            }\n          }\n          edgeList.forEach(function (edge) {\n            visited.add(edge);\n          });\n        }\n      }\n    }\n\n    if (visited.size == edges.length) {\n      break;\n    }\n  }\n};\n\nCoSELayout.prototype.positionNodesRadially = function (forest) {\n  // We tile the trees to a grid row by row; first tree starts at (0,0)\n  var currentStartingPoint = new Point(0, 0);\n  var numberOfColumns = Math.ceil(Math.sqrt(forest.length));\n  var height = 0;\n  var currentY = 0;\n  var currentX = 0;\n  var point = new PointD(0, 0);\n\n  for (var i = 0; i < forest.length; i++) {\n    if (i % numberOfColumns == 0) {\n      // Start of a new row, make the x coordinate 0, increment the\n      // y coordinate with the max height of the previous row\n      currentX = 0;\n      currentY = height;\n\n      if (i != 0) {\n        currentY += CoSEConstants.DEFAULT_COMPONENT_SEPERATION;\n      }\n\n      height = 0;\n    }\n\n    var tree = forest[i];\n\n    // Find the center of the tree\n    var centerNode = Layout.findCenterOfTree(tree);\n\n    // Set the staring point of the next tree\n    currentStartingPoint.x = currentX;\n    currentStartingPoint.y = currentY;\n\n    // Do a radial layout starting with the center\n    point = CoSELayout.radialLayout(tree, centerNode, currentStartingPoint);\n\n    if (point.y > height) {\n      height = Math.floor(point.y);\n    }\n\n    currentX = Math.floor(point.x + CoSEConstants.DEFAULT_COMPONENT_SEPERATION);\n  }\n\n  this.transform(new PointD(LayoutConstants.WORLD_CENTER_X - point.x / 2, LayoutConstants.WORLD_CENTER_Y - point.y / 2));\n};\n\nCoSELayout.radialLayout = function (tree, centerNode, startingPoint) {\n  var radialSep = Math.max(this.maxDiagonalInTree(tree), CoSEConstants.DEFAULT_RADIAL_SEPARATION);\n  CoSELayout.branchRadialLayout(centerNode, null, 0, 359, 0, radialSep);\n  var bounds = LGraph.calculateBounds(tree);\n\n  var transform = new Transform();\n  transform.setDeviceOrgX(bounds.getMinX());\n  transform.setDeviceOrgY(bounds.getMinY());\n  transform.setWorldOrgX(startingPoint.x);\n  transform.setWorldOrgY(startingPoint.y);\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    node.transform(transform);\n  }\n\n  var bottomRight = new PointD(bounds.getMaxX(), bounds.getMaxY());\n\n  return transform.inverseTransformPoint(bottomRight);\n};\n\nCoSELayout.branchRadialLayout = function (node, parentOfNode, startAngle, endAngle, distance, radialSeparation) {\n  // First, position this node by finding its angle.\n  var halfInterval = (endAngle - startAngle + 1) / 2;\n\n  if (halfInterval < 0) {\n    halfInterval += 180;\n  }\n\n  var nodeAngle = (halfInterval + startAngle) % 360;\n  var teta = nodeAngle * IGeometry.TWO_PI / 360;\n\n  // Make polar to java cordinate conversion.\n  var cos_teta = Math.cos(teta);\n  var x_ = distance * Math.cos(teta);\n  var y_ = distance * Math.sin(teta);\n\n  node.setCenter(x_, y_);\n\n  // Traverse all neighbors of this node and recursively call this\n  // function.\n  var neighborEdges = [];\n  neighborEdges = neighborEdges.concat(node.getEdges());\n  var childCount = neighborEdges.length;\n\n  if (parentOfNode != null) {\n    childCount--;\n  }\n\n  var branchCount = 0;\n\n  var incEdgesCount = neighborEdges.length;\n  var startIndex;\n\n  var edges = node.getEdgesBetween(parentOfNode);\n\n  // If there are multiple edges, prune them until there remains only one\n  // edge.\n  while (edges.length > 1) {\n    //neighborEdges.remove(edges.remove(0));\n    var temp = edges[0];\n    edges.splice(0, 1);\n    var index = neighborEdges.indexOf(temp);\n    if (index >= 0) {\n      neighborEdges.splice(index, 1);\n    }\n    incEdgesCount--;\n    childCount--;\n  }\n\n  if (parentOfNode != null) {\n    //assert edges.length == 1;\n    startIndex = (neighborEdges.indexOf(edges[0]) + 1) % incEdgesCount;\n  } else {\n    startIndex = 0;\n  }\n\n  var stepAngle = Math.abs(endAngle - startAngle) / childCount;\n\n  for (var i = startIndex; branchCount != childCount; i = ++i % incEdgesCount) {\n    var currentNeighbor = neighborEdges[i].getOtherEnd(node);\n\n    // Don't back traverse to root node in current tree.\n    if (currentNeighbor == parentOfNode) {\n      continue;\n    }\n\n    var childStartAngle = (startAngle + branchCount * stepAngle) % 360;\n    var childEndAngle = (childStartAngle + stepAngle) % 360;\n\n    CoSELayout.branchRadialLayout(currentNeighbor, node, childStartAngle, childEndAngle, distance + radialSeparation, radialSeparation);\n\n    branchCount++;\n  }\n};\n\nCoSELayout.maxDiagonalInTree = function (tree) {\n  var maxDiagonal = Integer.MIN_VALUE;\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n    var diagonal = node.getDiagonal();\n\n    if (diagonal > maxDiagonal) {\n      maxDiagonal = diagonal;\n    }\n  }\n\n  return maxDiagonal;\n};\n\nCoSELayout.prototype.calcRepulsionRange = function () {\n  // formula is 2 x (level + 1) x idealEdgeLength\n  return 2 * (this.level + 1) * this.idealEdgeLength;\n};\n\n// Tiling methods\n\n// Group zero degree members whose parents are not to be tiled, create dummy parents where needed and fill memberGroups by their dummp parent id's\nCoSELayout.prototype.groupZeroDegreeMembers = function () {\n  var self = this;\n  // array of [parent_id x oneDegreeNode_id]\n  var tempMemberGroups = {}; // A temporary map of parent node and its zero degree members\n  this.memberGroups = {}; // A map of dummy parent node and its zero degree members whose parents are not to be tiled\n  this.idToDummyNode = {}; // A map of id to dummy node \n\n  var zeroDegree = []; // List of zero degree nodes whose parents are not to be tiled\n  var allNodes = this.graphManager.getAllNodes();\n\n  // Fill zero degree list\n  for (var i = 0; i < allNodes.length; i++) {\n    var node = allNodes[i];\n    var parent = node.getParent();\n    // If a node has zero degree and its parent is not to be tiled if exists add that node to zeroDegres list\n    if (this.getNodeDegreeWithChildren(node) === 0 && (parent.id == undefined || !this.getToBeTiled(parent))) {\n      zeroDegree.push(node);\n    }\n  }\n\n  // Create a map of parent node and its zero degree members\n  for (var i = 0; i < zeroDegree.length; i++) {\n    var node = zeroDegree[i]; // Zero degree node itself\n    var p_id = node.getParent().id; // Parent id\n\n    if (typeof tempMemberGroups[p_id] === \"undefined\") tempMemberGroups[p_id] = [];\n\n    tempMemberGroups[p_id] = tempMemberGroups[p_id].concat(node); // Push node to the list belongs to its parent in tempMemberGroups\n  }\n\n  // If there are at least two nodes at a level, create a dummy compound for them\n  Object.keys(tempMemberGroups).forEach(function (p_id) {\n    if (tempMemberGroups[p_id].length > 1) {\n      var dummyCompoundId = \"DummyCompound_\" + p_id; // The id of dummy compound which will be created soon\n      self.memberGroups[dummyCompoundId] = tempMemberGroups[p_id]; // Add dummy compound to memberGroups\n\n      var parent = tempMemberGroups[p_id][0].getParent(); // The parent of zero degree nodes will be the parent of new dummy compound\n\n      // Create a dummy compound with calculated id\n      var dummyCompound = new CoSENode(self.graphManager);\n      dummyCompound.id = dummyCompoundId;\n      dummyCompound.paddingLeft = parent.paddingLeft || 0;\n      dummyCompound.paddingRight = parent.paddingRight || 0;\n      dummyCompound.paddingBottom = parent.paddingBottom || 0;\n      dummyCompound.paddingTop = parent.paddingTop || 0;\n\n      self.idToDummyNode[dummyCompoundId] = dummyCompound;\n\n      var dummyParentGraph = self.getGraphManager().add(self.newGraph(), dummyCompound);\n      var parentGraph = parent.getChild();\n\n      // Add dummy compound to parent the graph\n      parentGraph.add(dummyCompound);\n\n      // For each zero degree node in this level remove it from its parent graph and add it to the graph of dummy parent\n      for (var i = 0; i < tempMemberGroups[p_id].length; i++) {\n        var node = tempMemberGroups[p_id][i];\n\n        parentGraph.remove(node);\n        dummyParentGraph.add(node);\n      }\n    }\n  });\n};\n\nCoSELayout.prototype.clearCompounds = function () {\n  var childGraphMap = {};\n  var idToNode = {};\n\n  // Get compound ordering by finding the inner one first\n  this.performDFSOnCompounds();\n\n  for (var i = 0; i < this.compoundOrder.length; i++) {\n\n    idToNode[this.compoundOrder[i].id] = this.compoundOrder[i];\n    childGraphMap[this.compoundOrder[i].id] = [].concat(this.compoundOrder[i].getChild().getNodes());\n\n    // Remove children of compounds\n    this.graphManager.remove(this.compoundOrder[i].getChild());\n    this.compoundOrder[i].child = null;\n  }\n\n  this.graphManager.resetAllNodes();\n\n  // Tile the removed children\n  this.tileCompoundMembers(childGraphMap, idToNode);\n};\n\nCoSELayout.prototype.clearZeroDegreeMembers = function () {\n  var self = this;\n  var tiledZeroDegreePack = this.tiledZeroDegreePack = [];\n\n  Object.keys(this.memberGroups).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound\n\n    tiledZeroDegreePack[id] = self.tileNodes(self.memberGroups[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    // Set the width and height of the dummy compound as calculated\n    compoundNode.rect.width = tiledZeroDegreePack[id].width;\n    compoundNode.rect.height = tiledZeroDegreePack[id].height;\n  });\n};\n\nCoSELayout.prototype.repopulateCompounds = function () {\n  for (var i = this.compoundOrder.length - 1; i >= 0; i--) {\n    var lCompoundNode = this.compoundOrder[i];\n    var id = lCompoundNode.id;\n    var horizontalMargin = lCompoundNode.paddingLeft;\n    var verticalMargin = lCompoundNode.paddingTop;\n\n    this.adjustLocations(this.tiledMemberPack[id], lCompoundNode.rect.x, lCompoundNode.rect.y, horizontalMargin, verticalMargin);\n  }\n};\n\nCoSELayout.prototype.repopulateZeroDegreeMembers = function () {\n  var self = this;\n  var tiledPack = this.tiledZeroDegreePack;\n\n  Object.keys(tiledPack).forEach(function (id) {\n    var compoundNode = self.idToDummyNode[id]; // Get the dummy compound by its id\n    var horizontalMargin = compoundNode.paddingLeft;\n    var verticalMargin = compoundNode.paddingTop;\n\n    // Adjust the positions of nodes wrt its compound\n    self.adjustLocations(tiledPack[id], compoundNode.rect.x, compoundNode.rect.y, horizontalMargin, verticalMargin);\n  });\n};\n\nCoSELayout.prototype.getToBeTiled = function (node) {\n  var id = node.id;\n  //firstly check the previous results\n  if (this.toBeTiled[id] != null) {\n    return this.toBeTiled[id];\n  }\n\n  //only compound nodes are to be tiled\n  var childGraph = node.getChild();\n  if (childGraph == null) {\n    this.toBeTiled[id] = false;\n    return false;\n  }\n\n  var children = childGraph.getNodes(); // Get the children nodes\n\n  //a compound node is not to be tiled if all of its compound children are not to be tiled\n  for (var i = 0; i < children.length; i++) {\n    var theChild = children[i];\n\n    if (this.getNodeDegree(theChild) > 0) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n\n    //pass the children not having the compound structure\n    if (theChild.getChild() == null) {\n      this.toBeTiled[theChild.id] = false;\n      continue;\n    }\n\n    if (!this.getToBeTiled(theChild)) {\n      this.toBeTiled[id] = false;\n      return false;\n    }\n  }\n  this.toBeTiled[id] = true;\n  return true;\n};\n\n// Get degree of a node depending of its edges and independent of its children\nCoSELayout.prototype.getNodeDegree = function (node) {\n  var id = node.id;\n  var edges = node.getEdges();\n  var degree = 0;\n\n  // For the edges connected\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    if (edge.getSource().id !== edge.getTarget().id) {\n      degree = degree + 1;\n    }\n  }\n  return degree;\n};\n\n// Get degree of a node with its children\nCoSELayout.prototype.getNodeDegreeWithChildren = function (node) {\n  var degree = this.getNodeDegree(node);\n  if (node.getChild() == null) {\n    return degree;\n  }\n  var children = node.getChild().getNodes();\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    degree += this.getNodeDegreeWithChildren(child);\n  }\n  return degree;\n};\n\nCoSELayout.prototype.performDFSOnCompounds = function () {\n  this.compoundOrder = [];\n  this.fillCompexOrderByDFS(this.graphManager.getRoot().getNodes());\n};\n\nCoSELayout.prototype.fillCompexOrderByDFS = function (children) {\n  for (var i = 0; i < children.length; i++) {\n    var child = children[i];\n    if (child.getChild() != null) {\n      this.fillCompexOrderByDFS(child.getChild().getNodes());\n    }\n    if (this.getToBeTiled(child)) {\n      this.compoundOrder.push(child);\n    }\n  }\n};\n\n/**\n* This method places each zero degree member wrt given (x,y) coordinates (top left).\n*/\nCoSELayout.prototype.adjustLocations = function (organization, x, y, compoundHorizontalMargin, compoundVerticalMargin) {\n  x += compoundHorizontalMargin;\n  y += compoundVerticalMargin;\n\n  var left = x;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    var row = organization.rows[i];\n    x = left;\n    var maxHeight = 0;\n\n    for (var j = 0; j < row.length; j++) {\n      var lnode = row[j];\n\n      lnode.rect.x = x; // + lnode.rect.width / 2;\n      lnode.rect.y = y; // + lnode.rect.height / 2;\n\n      x += lnode.rect.width + organization.horizontalPadding;\n\n      if (lnode.rect.height > maxHeight) maxHeight = lnode.rect.height;\n    }\n\n    y += maxHeight + organization.verticalPadding;\n  }\n};\n\nCoSELayout.prototype.tileCompoundMembers = function (childGraphMap, idToNode) {\n  var self = this;\n  this.tiledMemberPack = [];\n\n  Object.keys(childGraphMap).forEach(function (id) {\n    // Get the compound node\n    var compoundNode = idToNode[id];\n\n    self.tiledMemberPack[id] = self.tileNodes(childGraphMap[id], compoundNode.paddingLeft + compoundNode.paddingRight);\n\n    compoundNode.rect.width = self.tiledMemberPack[id].width;\n    compoundNode.rect.height = self.tiledMemberPack[id].height;\n  });\n};\n\nCoSELayout.prototype.tileNodes = function (nodes, minWidth) {\n  var verticalPadding = CoSEConstants.TILING_PADDING_VERTICAL;\n  var horizontalPadding = CoSEConstants.TILING_PADDING_HORIZONTAL;\n  var organization = {\n    rows: [],\n    rowWidth: [],\n    rowHeight: [],\n    width: 0,\n    height: minWidth, // assume minHeight equals to minWidth\n    verticalPadding: verticalPadding,\n    horizontalPadding: horizontalPadding\n  };\n\n  // Sort the nodes in ascending order of their areas\n  nodes.sort(function (n1, n2) {\n    if (n1.rect.width * n1.rect.height > n2.rect.width * n2.rect.height) return -1;\n    if (n1.rect.width * n1.rect.height < n2.rect.width * n2.rect.height) return 1;\n    return 0;\n  });\n\n  // Create the organization -> tile members\n  for (var i = 0; i < nodes.length; i++) {\n    var lNode = nodes[i];\n\n    if (organization.rows.length == 0) {\n      this.insertNodeToRow(organization, lNode, 0, minWidth);\n    } else if (this.canAddHorizontal(organization, lNode.rect.width, lNode.rect.height)) {\n      this.insertNodeToRow(organization, lNode, this.getShortestRowIndex(organization), minWidth);\n    } else {\n      this.insertNodeToRow(organization, lNode, organization.rows.length, minWidth);\n    }\n\n    this.shiftToLastRow(organization);\n  }\n\n  return organization;\n};\n\nCoSELayout.prototype.insertNodeToRow = function (organization, node, rowIndex, minWidth) {\n  var minCompoundSize = minWidth;\n\n  // Add new row if needed\n  if (rowIndex == organization.rows.length) {\n    var secondDimension = [];\n\n    organization.rows.push(secondDimension);\n    organization.rowWidth.push(minCompoundSize);\n    organization.rowHeight.push(0);\n  }\n\n  // Update row width\n  var w = organization.rowWidth[rowIndex] + node.rect.width;\n\n  if (organization.rows[rowIndex].length > 0) {\n    w += organization.horizontalPadding;\n  }\n\n  organization.rowWidth[rowIndex] = w;\n  // Update compound width\n  if (organization.width < w) {\n    organization.width = w;\n  }\n\n  // Update height\n  var h = node.rect.height;\n  if (rowIndex > 0) h += organization.verticalPadding;\n\n  var extraHeight = 0;\n  if (h > organization.rowHeight[rowIndex]) {\n    extraHeight = organization.rowHeight[rowIndex];\n    organization.rowHeight[rowIndex] = h;\n    extraHeight = organization.rowHeight[rowIndex] - extraHeight;\n  }\n\n  organization.height += extraHeight;\n\n  // Insert node\n  organization.rows[rowIndex].push(node);\n};\n\n//Scans the rows of an organization and returns the one with the min width\nCoSELayout.prototype.getShortestRowIndex = function (organization) {\n  var r = -1;\n  var min = Number.MAX_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n    if (organization.rowWidth[i] < min) {\n      r = i;\n      min = organization.rowWidth[i];\n    }\n  }\n  return r;\n};\n\n//Scans the rows of an organization and returns the one with the max width\nCoSELayout.prototype.getLongestRowIndex = function (organization) {\n  var r = -1;\n  var max = Number.MIN_VALUE;\n\n  for (var i = 0; i < organization.rows.length; i++) {\n\n    if (organization.rowWidth[i] > max) {\n      r = i;\n      max = organization.rowWidth[i];\n    }\n  }\n\n  return r;\n};\n\n/**\n* This method checks whether adding extra width to the organization violates\n* the aspect ratio(1) or not.\n*/\nCoSELayout.prototype.canAddHorizontal = function (organization, extraWidth, extraHeight) {\n\n  var sri = this.getShortestRowIndex(organization);\n\n  if (sri < 0) {\n    return true;\n  }\n\n  var min = organization.rowWidth[sri];\n\n  if (min + organization.horizontalPadding + extraWidth <= organization.width) return true;\n\n  var hDiff = 0;\n\n  // Adding to an existing row\n  if (organization.rowHeight[sri] < extraHeight) {\n    if (sri > 0) hDiff = extraHeight + organization.verticalPadding - organization.rowHeight[sri];\n  }\n\n  var add_to_row_ratio;\n  if (organization.width - min >= extraWidth + organization.horizontalPadding) {\n    add_to_row_ratio = (organization.height + hDiff) / (min + extraWidth + organization.horizontalPadding);\n  } else {\n    add_to_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  // Adding a new row for this node\n  hDiff = extraHeight + organization.verticalPadding;\n  var add_new_row_ratio;\n  if (organization.width < extraWidth) {\n    add_new_row_ratio = (organization.height + hDiff) / extraWidth;\n  } else {\n    add_new_row_ratio = (organization.height + hDiff) / organization.width;\n  }\n\n  if (add_new_row_ratio < 1) add_new_row_ratio = 1 / add_new_row_ratio;\n\n  if (add_to_row_ratio < 1) add_to_row_ratio = 1 / add_to_row_ratio;\n\n  return add_to_row_ratio < add_new_row_ratio;\n};\n\n//If moving the last node from the longest row and adding it to the last\n//row makes the bounding box smaller, do it.\nCoSELayout.prototype.shiftToLastRow = function (organization) {\n  var longest = this.getLongestRowIndex(organization);\n  var last = organization.rowWidth.length - 1;\n  var row = organization.rows[longest];\n  var node = row[row.length - 1];\n\n  var diff = node.width + organization.horizontalPadding;\n\n  // Check if there is enough space on the last row\n  if (organization.width - organization.rowWidth[last] > diff && longest != last) {\n    // Remove the last element of the longest row\n    row.splice(-1, 1);\n\n    // Push it to the last row\n    organization.rows[last].push(node);\n\n    organization.rowWidth[longest] = organization.rowWidth[longest] - diff;\n    organization.rowWidth[last] = organization.rowWidth[last] + diff;\n    organization.width = organization.rowWidth[instance.getLongestRowIndex(organization)];\n\n    // Update heights of the organization\n    var maxHeight = Number.MIN_VALUE;\n    for (var i = 0; i < row.length; i++) {\n      if (row[i].height > maxHeight) maxHeight = row[i].height;\n    }\n    if (longest > 0) maxHeight += organization.verticalPadding;\n\n    var prevTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n\n    organization.rowHeight[longest] = maxHeight;\n    if (organization.rowHeight[last] < node.height + organization.verticalPadding) organization.rowHeight[last] = node.height + organization.verticalPadding;\n\n    var finalTotal = organization.rowHeight[longest] + organization.rowHeight[last];\n    organization.height += finalTotal - prevTotal;\n\n    this.shiftToLastRow(organization);\n  }\n};\n\nCoSELayout.prototype.tilingPreLayout = function () {\n  if (CoSEConstants.TILE) {\n    // Find zero degree nodes and create a compound for each level\n    this.groupZeroDegreeMembers();\n    // Tile and clear children of each compound\n    this.clearCompounds();\n    // Separately tile and clear zero degree nodes for each level\n    this.clearZeroDegreeMembers();\n  }\n};\n\nCoSELayout.prototype.tilingPostLayout = function () {\n  if (CoSEConstants.TILE) {\n    this.repopulateZeroDegreeMembers();\n    this.repopulateCompounds();\n  }\n};\n\n// -----------------------------------------------------------------------------\n// Section: Tree Reduction methods\n// -----------------------------------------------------------------------------\n// Reduce trees \nCoSELayout.prototype.reduceTrees = function () {\n  var prunedNodesAll = [];\n  var containsLeaf = true;\n  var node;\n\n  while (containsLeaf) {\n    var allNodes = this.graphManager.getAllNodes();\n    var prunedNodesInStepTemp = [];\n    containsLeaf = false;\n\n    for (var i = 0; i < allNodes.length; i++) {\n      node = allNodes[i];\n      if (node.getEdges().length == 1 && !node.getEdges()[0].isInterGraph && node.getChild() == null) {\n        prunedNodesInStepTemp.push([node, node.getEdges()[0], node.getOwner()]);\n        containsLeaf = true;\n      }\n    }\n    if (containsLeaf == true) {\n      var prunedNodesInStep = [];\n      for (var j = 0; j < prunedNodesInStepTemp.length; j++) {\n        if (prunedNodesInStepTemp[j][0].getEdges().length == 1) {\n          prunedNodesInStep.push(prunedNodesInStepTemp[j]);\n          prunedNodesInStepTemp[j][0].getOwner().remove(prunedNodesInStepTemp[j][0]);\n        }\n      }\n      prunedNodesAll.push(prunedNodesInStep);\n      this.graphManager.resetAllNodes();\n      this.graphManager.resetAllEdges();\n    }\n  }\n  this.prunedNodesAll = prunedNodesAll;\n};\n\n// Grow tree one step \nCoSELayout.prototype.growTree = function (prunedNodesAll) {\n  var lengthOfPrunedNodesInStep = prunedNodesAll.length;\n  var prunedNodesInStep = prunedNodesAll[lengthOfPrunedNodesInStep - 1];\n\n  var nodeData;\n  for (var i = 0; i < prunedNodesInStep.length; i++) {\n    nodeData = prunedNodesInStep[i];\n\n    this.findPlaceforPrunedNode(nodeData);\n\n    nodeData[2].add(nodeData[0]);\n    nodeData[2].add(nodeData[1], nodeData[1].source, nodeData[1].target);\n  }\n\n  prunedNodesAll.splice(prunedNodesAll.length - 1, 1);\n  this.graphManager.resetAllNodes();\n  this.graphManager.resetAllEdges();\n};\n\n// Find an appropriate position to replace pruned node, this method can be improved\nCoSELayout.prototype.findPlaceforPrunedNode = function (nodeData) {\n\n  var gridForPrunedNode;\n  var nodeToConnect;\n  var prunedNode = nodeData[0];\n  if (prunedNode == nodeData[1].source) {\n    nodeToConnect = nodeData[1].target;\n  } else {\n    nodeToConnect = nodeData[1].source;\n  }\n  var startGridX = nodeToConnect.startX;\n  var finishGridX = nodeToConnect.finishX;\n  var startGridY = nodeToConnect.startY;\n  var finishGridY = nodeToConnect.finishY;\n\n  var upNodeCount = 0;\n  var downNodeCount = 0;\n  var rightNodeCount = 0;\n  var leftNodeCount = 0;\n  var controlRegions = [upNodeCount, rightNodeCount, downNodeCount, leftNodeCount];\n\n  if (startGridY > 0) {\n    for (var i = startGridX; i <= finishGridX; i++) {\n      controlRegions[0] += this.grid[i][startGridY - 1].length + this.grid[i][startGridY].length - 1;\n    }\n  }\n  if (finishGridX < this.grid.length - 1) {\n    for (var i = startGridY; i <= finishGridY; i++) {\n      controlRegions[1] += this.grid[finishGridX + 1][i].length + this.grid[finishGridX][i].length - 1;\n    }\n  }\n  if (finishGridY < this.grid[0].length - 1) {\n    for (var i = startGridX; i <= finishGridX; i++) {\n      controlRegions[2] += this.grid[i][finishGridY + 1].length + this.grid[i][finishGridY].length - 1;\n    }\n  }\n  if (startGridX > 0) {\n    for (var i = startGridY; i <= finishGridY; i++) {\n      controlRegions[3] += this.grid[startGridX - 1][i].length + this.grid[startGridX][i].length - 1;\n    }\n  }\n  var min = Integer.MAX_VALUE;\n  var minCount;\n  var minIndex;\n  for (var j = 0; j < controlRegions.length; j++) {\n    if (controlRegions[j] < min) {\n      min = controlRegions[j];\n      minCount = 1;\n      minIndex = j;\n    } else if (controlRegions[j] == min) {\n      minCount++;\n    }\n  }\n\n  if (minCount == 3 && min == 0) {\n    if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[2] == 0) {\n      gridForPrunedNode = 1;\n    } else if (controlRegions[0] == 0 && controlRegions[1] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 0;\n    } else if (controlRegions[0] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 3;\n    } else if (controlRegions[1] == 0 && controlRegions[2] == 0 && controlRegions[3] == 0) {\n      gridForPrunedNode = 2;\n    }\n  } else if (minCount == 2 && min == 0) {\n    var random = Math.floor(Math.random() * 2);\n    if (controlRegions[0] == 0 && controlRegions[1] == 0) {\n      ;\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 1;\n      }\n    } else if (controlRegions[0] == 0 && controlRegions[2] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 2;\n      }\n    } else if (controlRegions[0] == 0 && controlRegions[3] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 0;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    } else if (controlRegions[1] == 0 && controlRegions[2] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 1;\n      } else {\n        gridForPrunedNode = 2;\n      }\n    } else if (controlRegions[1] == 0 && controlRegions[3] == 0) {\n      if (random == 0) {\n        gridForPrunedNode = 1;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    } else {\n      if (random == 0) {\n        gridForPrunedNode = 2;\n      } else {\n        gridForPrunedNode = 3;\n      }\n    }\n  } else if (minCount == 4 && min == 0) {\n    var random = Math.floor(Math.random() * 4);\n    gridForPrunedNode = random;\n  } else {\n    gridForPrunedNode = minIndex;\n  }\n\n  if (gridForPrunedNode == 0) {\n    prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() - nodeToConnect.getHeight() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getHeight() / 2);\n  } else if (gridForPrunedNode == 1) {\n    prunedNode.setCenter(nodeToConnect.getCenterX() + nodeToConnect.getWidth() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n  } else if (gridForPrunedNode == 2) {\n    prunedNode.setCenter(nodeToConnect.getCenterX(), nodeToConnect.getCenterY() + nodeToConnect.getHeight() / 2 + FDLayoutConstants.DEFAULT_EDGE_LENGTH + prunedNode.getHeight() / 2);\n  } else {\n    prunedNode.setCenter(nodeToConnect.getCenterX() - nodeToConnect.getWidth() / 2 - FDLayoutConstants.DEFAULT_EDGE_LENGTH - prunedNode.getWidth() / 2, nodeToConnect.getCenterY());\n  }\n};\n\nmodule.exports = CoSELayout;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar coseBase = {};\n\ncoseBase.layoutBase = __webpack_require__(0);\ncoseBase.CoSEConstants = __webpack_require__(1);\ncoseBase.CoSEEdge = __webpack_require__(2);\ncoseBase.CoSEGraph = __webpack_require__(3);\ncoseBase.CoSEGraphManager = __webpack_require__(4);\ncoseBase.CoSELayout = __webpack_require__(6);\ncoseBase.CoSENode = __webpack_require__(5);\n\nmodule.exports = coseBase;\n\n/***/ })\n/******/ ]);\n});","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"cose-base\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"cose-base\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeCoseBilkent\"] = factory(require(\"cose-base\"));\n\telse\n\t\troot[\"cytoscapeCoseBilkent\"] = factory(root[\"coseBase\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar LayoutConstants = __webpack_require__(0).layoutBase.LayoutConstants;\nvar FDLayoutConstants = __webpack_require__(0).layoutBase.FDLayoutConstants;\nvar CoSEConstants = __webpack_require__(0).CoSEConstants;\nvar CoSELayout = __webpack_require__(0).CoSELayout;\nvar CoSENode = __webpack_require__(0).CoSENode;\nvar PointD = __webpack_require__(0).layoutBase.PointD;\nvar DimensionD = __webpack_require__(0).layoutBase.DimensionD;\n\nvar defaults = {\n  // Called on `layoutready`\n  ready: function ready() {},\n  // Called on `layoutstop`\n  stop: function stop() {},\n  // 'draft', 'default' or 'proof\" \n  // - 'draft' fast cooling rate \n  // - 'default' moderate cooling rate \n  // - \"proof\" slow cooling rate\n  quality: 'default',\n  // include labels in node dimensions\n  nodeDimensionsIncludeLabels: false,\n  // number of ticks per frame; higher is faster but more jerky\n  refresh: 30,\n  // Whether to fit the network view after when done\n  fit: true,\n  // Padding on fit\n  padding: 10,\n  // Whether to enable incremental mode\n  randomize: true,\n  // Node repulsion (non overlapping) multiplier\n  nodeRepulsion: 4500,\n  // Ideal edge (non nested) length\n  idealEdgeLength: 50,\n  // Divisor to compute edge forces\n  edgeElasticity: 0.45,\n  // Nesting factor (multiplier) to compute ideal edge length for nested edges\n  nestingFactor: 0.1,\n  // Gravity force (constant)\n  gravity: 0.25,\n  // Maximum number of iterations to perform\n  numIter: 2500,\n  // For enabling tiling\n  tile: true,\n  // Type of layout animation. The option set is {'during', 'end', false}\n  animate: 'end',\n  // Duration for animate:end\n  animationDuration: 500,\n  // Represents the amount of the vertical space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingVertical: 10,\n  // Represents the amount of the horizontal space to put between the zero degree members during the tiling operation(can also be a function)\n  tilingPaddingHorizontal: 10,\n  // Gravity range (constant) for compounds\n  gravityRangeCompound: 1.5,\n  // Gravity force (constant) for compounds\n  gravityCompound: 1.0,\n  // Gravity range (constant)\n  gravityRange: 3.8,\n  // Initial cooling factor for incremental layout\n  initialEnergyOnIncremental: 0.5\n};\n\nfunction extend(defaults, options) {\n  var obj = {};\n\n  for (var i in defaults) {\n    obj[i] = defaults[i];\n  }\n\n  for (var i in options) {\n    obj[i] = options[i];\n  }\n\n  return obj;\n};\n\nfunction _CoSELayout(_options) {\n  this.options = extend(defaults, _options);\n  getUserOptions(this.options);\n}\n\nvar getUserOptions = function getUserOptions(options) {\n  if (options.nodeRepulsion != null) CoSEConstants.DEFAULT_REPULSION_STRENGTH = FDLayoutConstants.DEFAULT_REPULSION_STRENGTH = options.nodeRepulsion;\n  if (options.idealEdgeLength != null) CoSEConstants.DEFAULT_EDGE_LENGTH = FDLayoutConstants.DEFAULT_EDGE_LENGTH = options.idealEdgeLength;\n  if (options.edgeElasticity != null) CoSEConstants.DEFAULT_SPRING_STRENGTH = FDLayoutConstants.DEFAULT_SPRING_STRENGTH = options.edgeElasticity;\n  if (options.nestingFactor != null) CoSEConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = FDLayoutConstants.PER_LEVEL_IDEAL_EDGE_LENGTH_FACTOR = options.nestingFactor;\n  if (options.gravity != null) CoSEConstants.DEFAULT_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_GRAVITY_STRENGTH = options.gravity;\n  if (options.numIter != null) CoSEConstants.MAX_ITERATIONS = FDLayoutConstants.MAX_ITERATIONS = options.numIter;\n  if (options.gravityRange != null) CoSEConstants.DEFAULT_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_GRAVITY_RANGE_FACTOR = options.gravityRange;\n  if (options.gravityCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_STRENGTH = options.gravityCompound;\n  if (options.gravityRangeCompound != null) CoSEConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = FDLayoutConstants.DEFAULT_COMPOUND_GRAVITY_RANGE_FACTOR = options.gravityRangeCompound;\n  if (options.initialEnergyOnIncremental != null) CoSEConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = FDLayoutConstants.DEFAULT_COOLING_FACTOR_INCREMENTAL = options.initialEnergyOnIncremental;\n\n  if (options.quality == 'draft') LayoutConstants.QUALITY = 0;else if (options.quality == 'proof') LayoutConstants.QUALITY = 2;else LayoutConstants.QUALITY = 1;\n\n  CoSEConstants.NODE_DIMENSIONS_INCLUDE_LABELS = FDLayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = LayoutConstants.NODE_DIMENSIONS_INCLUDE_LABELS = options.nodeDimensionsIncludeLabels;\n  CoSEConstants.DEFAULT_INCREMENTAL = FDLayoutConstants.DEFAULT_INCREMENTAL = LayoutConstants.DEFAULT_INCREMENTAL = !options.randomize;\n  CoSEConstants.ANIMATE = FDLayoutConstants.ANIMATE = LayoutConstants.ANIMATE = options.animate;\n  CoSEConstants.TILE = options.tile;\n  CoSEConstants.TILING_PADDING_VERTICAL = typeof options.tilingPaddingVertical === 'function' ? options.tilingPaddingVertical.call() : options.tilingPaddingVertical;\n  CoSEConstants.TILING_PADDING_HORIZONTAL = typeof options.tilingPaddingHorizontal === 'function' ? options.tilingPaddingHorizontal.call() : options.tilingPaddingHorizontal;\n};\n\n_CoSELayout.prototype.run = function () {\n  var ready;\n  var frameId;\n  var options = this.options;\n  var idToLNode = this.idToLNode = {};\n  var layout = this.layout = new CoSELayout();\n  var self = this;\n\n  self.stopped = false;\n\n  this.cy = this.options.cy;\n\n  this.cy.trigger({ type: 'layoutstart', layout: this });\n\n  var gm = layout.newGraphManager();\n  this.gm = gm;\n\n  var nodes = this.options.eles.nodes();\n  var edges = this.options.eles.edges();\n\n  this.root = gm.addRoot();\n  this.processChildrenList(this.root, this.getTopMostNodes(nodes), layout);\n\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    var sourceNode = this.idToLNode[edge.data(\"source\")];\n    var targetNode = this.idToLNode[edge.data(\"target\")];\n    if (sourceNode !== targetNode && sourceNode.getEdgesBetween(targetNode).length == 0) {\n      var e1 = gm.add(layout.newEdge(), sourceNode, targetNode);\n      e1.id = edge.id();\n    }\n  }\n\n  var getPositions = function getPositions(ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var theId = ele.data('id');\n    var lNode = self.idToLNode[theId];\n\n    return {\n      x: lNode.getRect().getCenterX(),\n      y: lNode.getRect().getCenterY()\n    };\n  };\n\n  /*\n   * Reposition nodes in iterations animatedly\n   */\n  var iterateAnimated = function iterateAnimated() {\n    // Thigs to perform after nodes are repositioned on screen\n    var afterReposition = function afterReposition() {\n      if (options.fit) {\n        options.cy.fit(options.eles, options.padding);\n      }\n\n      if (!ready) {\n        ready = true;\n        self.cy.one('layoutready', options.ready);\n        self.cy.trigger({ type: 'layoutready', layout: self });\n      }\n    };\n\n    var ticksPerFrame = self.options.refresh;\n    var isDone;\n\n    for (var i = 0; i < ticksPerFrame && !isDone; i++) {\n      isDone = self.stopped || self.layout.tick();\n    }\n\n    // If layout is done\n    if (isDone) {\n      // If the layout is not a sublayout and it is successful perform post layout.\n      if (layout.checkLayoutSuccess() && !layout.isSubLayout) {\n        layout.doPostLayout();\n      }\n\n      // If layout has a tilingPostLayout function property call it.\n      if (layout.tilingPostLayout) {\n        layout.tilingPostLayout();\n      }\n\n      layout.isLayoutFinished = true;\n\n      self.options.eles.nodes().positions(getPositions);\n\n      afterReposition();\n\n      // trigger layoutstop when the layout stops (e.g. finishes)\n      self.cy.one('layoutstop', self.options.stop);\n      self.cy.trigger({ type: 'layoutstop', layout: self });\n\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n\n      ready = false;\n      return;\n    }\n\n    var animationData = self.layout.getPositionsData(); // Get positions of layout nodes note that all nodes may not be layout nodes because of tiling\n\n    // Position nodes, for the nodes whose id does not included in data (because they are removed from their parents and included in dummy compounds)\n    // use position of their ancestors or dummy ancestors\n    options.eles.nodes().positions(function (ele, i) {\n      if (typeof ele === \"number\") {\n        ele = i;\n      }\n      // If ele is a compound node, then its position will be defined by its children\n      if (!ele.isParent()) {\n        var theId = ele.id();\n        var pNode = animationData[theId];\n        var temp = ele;\n        // If pNode is undefined search until finding position data of its first ancestor (It may be dummy as well)\n        while (pNode == null) {\n          pNode = animationData[temp.data('parent')] || animationData['DummyCompound_' + temp.data('parent')];\n          animationData[theId] = pNode;\n          temp = temp.parent()[0];\n          if (temp == undefined) {\n            break;\n          }\n        }\n        if (pNode != null) {\n          return {\n            x: pNode.x,\n            y: pNode.y\n          };\n        } else {\n          return {\n            x: ele.position('x'),\n            y: ele.position('y')\n          };\n        }\n      }\n    });\n\n    afterReposition();\n\n    frameId = requestAnimationFrame(iterateAnimated);\n  };\n\n  /*\n  * Listen 'layoutstarted' event and start animated iteration if animate option is 'during'\n  */\n  layout.addListener('layoutstarted', function () {\n    if (self.options.animate === 'during') {\n      frameId = requestAnimationFrame(iterateAnimated);\n    }\n  });\n\n  layout.runLayout(); // Run cose layout\n\n  /*\n   * If animate option is not 'during' ('end' or false) perform these here (If it is 'during' similar things are already performed)\n   */\n  if (this.options.animate !== \"during\") {\n    self.options.eles.nodes().not(\":parent\").layoutPositions(self, self.options, getPositions); // Use layout positions to reposition the nodes it considers the options parameter\n    ready = false;\n  }\n\n  return this; // chaining\n};\n\n//Get the top most ones of a list of nodes\n_CoSELayout.prototype.getTopMostNodes = function (nodes) {\n  var nodesMap = {};\n  for (var i = 0; i < nodes.length; i++) {\n    nodesMap[nodes[i].id()] = true;\n  }\n  var roots = nodes.filter(function (ele, i) {\n    if (typeof ele === \"number\") {\n      ele = i;\n    }\n    var parent = ele.parent()[0];\n    while (parent != null) {\n      if (nodesMap[parent.id()]) {\n        return false;\n      }\n      parent = parent.parent()[0];\n    }\n    return true;\n  });\n\n  return roots;\n};\n\n_CoSELayout.prototype.processChildrenList = function (parent, children, layout) {\n  var size = children.length;\n  for (var i = 0; i < size; i++) {\n    var theChild = children[i];\n    var children_of_children = theChild.children();\n    var theNode;\n\n    var dimensions = theChild.layoutDimensions({\n      nodeDimensionsIncludeLabels: this.options.nodeDimensionsIncludeLabels\n    });\n\n    if (theChild.outerWidth() != null && theChild.outerHeight() != null) {\n      theNode = parent.add(new CoSENode(layout.graphManager, new PointD(theChild.position('x') - dimensions.w / 2, theChild.position('y') - dimensions.h / 2), new DimensionD(parseFloat(dimensions.w), parseFloat(dimensions.h))));\n    } else {\n      theNode = parent.add(new CoSENode(this.graphManager));\n    }\n    // Attach id to the layout node\n    theNode.id = theChild.data(\"id\");\n    // Attach the paddings of cy node to layout node\n    theNode.paddingLeft = parseInt(theChild.css('padding'));\n    theNode.paddingTop = parseInt(theChild.css('padding'));\n    theNode.paddingRight = parseInt(theChild.css('padding'));\n    theNode.paddingBottom = parseInt(theChild.css('padding'));\n\n    //Attach the label properties to compound if labels will be included in node dimensions  \n    if (this.options.nodeDimensionsIncludeLabels) {\n      if (theChild.isParent()) {\n        var labelWidth = theChild.boundingBox({ includeLabels: true, includeNodes: false }).w;\n        var labelHeight = theChild.boundingBox({ includeLabels: true, includeNodes: false }).h;\n        var labelPos = theChild.css(\"text-halign\");\n        theNode.labelWidth = labelWidth;\n        theNode.labelHeight = labelHeight;\n        theNode.labelPos = labelPos;\n      }\n    }\n\n    // Map the layout node\n    this.idToLNode[theChild.data(\"id\")] = theNode;\n\n    if (isNaN(theNode.rect.x)) {\n      theNode.rect.x = 0;\n    }\n\n    if (isNaN(theNode.rect.y)) {\n      theNode.rect.y = 0;\n    }\n\n    if (children_of_children != null && children_of_children.length > 0) {\n      var theNewGraph;\n      theNewGraph = layout.getGraphManager().add(layout.newGraph(), theNode);\n      this.processChildrenList(theNewGraph, children_of_children, layout);\n    }\n  }\n};\n\n/**\n * @brief : called on continuous layouts to stop them before they finish\n */\n_CoSELayout.prototype.stop = function () {\n  this.stopped = true;\n\n  return this; // chaining\n};\n\nvar register = function register(cytoscape) {\n  //  var Layout = getLayout( cytoscape );\n\n  cytoscape('layout', 'cose-bilkent', _CoSELayout);\n};\n\n// auto reg for globals\nif (typeof cytoscape !== 'undefined') {\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ })\n/******/ ]);\n});"],"x_google_ignoreList":[0,1,2]}