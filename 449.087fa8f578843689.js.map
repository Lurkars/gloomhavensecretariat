{"version":3,"file":"449.087fa8f578843689.js","mappings":"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","names":["conf","drawStartState","__name","g","append","attr","getConfig","state","sizeUnit","padding","drawDivider","style","textHeight","drawSimpleState","stateDef","fontSize","text","id","classBox","node","getBBox","insert","width","height","radius","drawDescrState","addTspan","textEl","txt","isFirst2","tSpan","titleBox","descriptions","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","descrLine","descrBox","Math","max","addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","x","title","titleShift","titleWidth","startX","graphBox","abs","lineY","drawEndState","miniPadding","drawForkJoinState","forkWidth","forkHeight","parentId","tmp","_drawLongText","_text","y","textElem","replace","lines","split","common_default","lineBreakRegex","tHeight","noteMargin","line2","trim","length","span","textWidth","drawNote","note","rectElem","drawState","elem","stateInfo","label","type","stateBox","edgeCount","drawEdge","path","relation","getRelationType","StateDB","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","points","filter","p","Number","isNaN","lineData","lineFunction","line","d","curve","curveBasis","svgPath","url","arrowMarkerAbsolute","getUrl","utils_default","calcLabelPosition","rows","getRows","titleRows","maxWidth","minX","i","boundsTmp","min","log","info","push","boxHeight","heightAdj","bounds","transformationLog","setConf","insertMarkers","draw","_version","diagObj","securityLevel","sandboxElement","select","root","nodes","contentDocument","body","doc","document","debug","diagram2","rootDoc","db","getRootDoc","renderDoc","configureSvgSize","useMaxWidth","getLabelWidth","fontSizeFactor","domDocument","graph","graphlib","compound","multigraph","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","states","getStates","relations","getRelations","keys","Object","key","sub","boxBounds","compositTitleSize","position","setNode","setParent","nodeCount","cnt","setEdge","id1","id2","labelHeight","labelpos","dagreLayout","svgElem","v","warn","JSON","stringify","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","setAttribute","edges","e","edge","w","stateRenderer_default","diagram","parser","stateDiagram_default","renderer","styles","styles_default","init","cnf"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/mermaid/dist/chunks/mermaid.core/stateDiagram-KXAO66HF.mjs"],"sourcesContent":["import {\n  StateDB,\n  stateDiagram_default,\n  styles_default\n} from \"./chunk-TVAH2DTR.mjs\";\nimport \"./chunk-55IACEB6.mjs\";\nimport \"./chunk-QN33PNHL.mjs\";\nimport \"./chunk-6OXUPJBA.mjs\";\nimport \"./chunk-3AY6CYHV.mjs\";\nimport \"./chunk-7GE3RBXV.mjs\";\nimport \"./chunk-CXMOBAN2.mjs\";\nimport \"./chunk-CVBHYZKI.mjs\";\nimport \"./chunk-QYVHNE3D.mjs\";\nimport \"./chunk-JA3XYJ7Z.mjs\";\nimport {\n  utils_default\n} from \"./chunk-S3R3BYOJ.mjs\";\nimport {\n  common_default,\n  configureSvgSize,\n  getConfig2 as getConfig,\n  getUrl\n} from \"./chunk-ABZYJK2D.mjs\";\nimport {\n  __name,\n  log\n} from \"./chunk-AGHRB4JF.mjs\";\n\n// src/diagrams/state/stateRenderer.js\nimport { select } from \"d3\";\nimport { layout as dagreLayout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\n\n// src/diagrams/state/shapes.js\nimport { line, curveBasis } from \"d3\";\nvar drawStartState = /* @__PURE__ */ __name((g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit), \"drawStartState\");\nvar drawDivider = /* @__PURE__ */ __name((g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0), \"drawDivider\");\nvar drawSimpleState = /* @__PURE__ */ __name((g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n}, \"drawSimpleState\");\nvar drawDescrState = /* @__PURE__ */ __name((g, stateDef) => {\n  const addTspan = /* @__PURE__ */ __name(function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  }, \"addTspan\");\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"drawDescrState\");\nvar addTitleAndBox = /* @__PURE__ */ __name((g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc) {\n  }\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"addTitleAndBox\");\nvar drawEndState = /* @__PURE__ */ __name((g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n}, \"drawEndState\");\nvar drawForkJoinState = /* @__PURE__ */ __name((g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n}, \"drawForkJoinState\");\nvar _drawLongText = /* @__PURE__ */ __name((_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common_default.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n}, \"_drawLongText\");\nvar drawNote = /* @__PURE__ */ __name((text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n}, \"drawNote\");\nvar drawState = /* @__PURE__ */ __name(function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  return stateInfo;\n}, \"drawState\");\nvar edgeCount = 0;\nvar drawEdge = /* @__PURE__ */ __name(function(elem, path, relation) {\n  const getRelationType = /* @__PURE__ */ __name(function(type) {\n    switch (type) {\n      case StateDB.relationType.AGGREGATION:\n        return \"aggregation\";\n      case StateDB.relationType.EXTENSION:\n        return \"extension\";\n      case StateDB.relationType.COMPOSITION:\n        return \"composition\";\n      case StateDB.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  }, \"getRelationType\");\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = getUrl(true);\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(StateDB.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils_default.calcLabelPosition(path.points);\n    const rows = common_default.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundsTmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundsTmp.width);\n      minX = Math.min(minX, boundsTmp.x);\n      log.info(boundsTmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n}, \"drawEdge\");\n\n// src/diagrams/state/stateRenderer.js\nvar conf;\nvar transformationLog = {};\nvar setConf = /* @__PURE__ */ __name(function() {\n}, \"setConf\");\nvar insertMarkers = /* @__PURE__ */ __name(function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n}, \"insertMarkers\");\nvar draw = /* @__PURE__ */ __name(function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n}, \"draw\");\nvar getLabelWidth = /* @__PURE__ */ __name((text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n}, \"getLabelWidth\");\nvar renderDoc = /* @__PURE__ */ __name((doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys = Object.keys(states);\n  let first = true;\n  for (const key of keys) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      if (first) {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      } else {\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height;\n      }\n    } else {\n      node = drawState(diagram2, stateDef, graph);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef, graph);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common_default.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  dagreLayout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n}, \"renderDoc\");\nvar stateRenderer_default = {\n  setConf,\n  draw\n};\n\n// src/diagrams/state/stateDiagram.ts\nvar diagram = {\n  parser: stateDiagram_default,\n  get db() {\n    return new StateDB(1);\n  },\n  renderer: stateRenderer_default,\n  styles: styles_default,\n  init: /* @__PURE__ */ __name((cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n  }, \"init\")\n};\nexport {\n  diagram\n};\n"],"x_google_ignoreList":[0]}