{"version":3,"file":"585.a199311e039403ed.js","mappings":"0OAcA,MAAMA,EAAU,CAAC,EAmDXC,EAAiBA,CAACC,EAAGC,EAAUC,KACnC,MAAMC,KAAMC,OAAYC,MAAMC,QACxBC,EAAS,KAAIH,OAAYC,MAAMC,QAC/BE,EAASR,EAAES,OAAOC,UAClBC,EAAWH,EAAOI,MAClBC,EAAOL,EAAOM,EACdC,EAAQf,EAAEgB,OAAO,QAAQC,KAAK,IAAK,GAAGA,KAAK,OAAKb,OAAYC,MAAMa,YAAYD,KAAK,eAAab,OAAYC,MAAMc,UAAUF,KAAK,QAAS,eAAeG,KAAKnB,EAASoB,IAEvKC,EADWP,EAAMN,OAAOC,UACFE,MAAQL,EACpC,IAIIgB,EAJAX,EAAQY,KAAKC,IAAIH,EAAYX,GAC7BC,IAAUD,IACZC,GAAgBL,GAGlB,MAAMmB,EAAW1B,EAAES,OAAOC,UAG1Ba,EAASV,EAAOV,EACZmB,EAAaX,IACfY,GAAUZ,EAAWC,GAAS,EAAIT,GAEhCqB,KAAKG,IAAId,EAAOa,EAASZ,GAAKX,GAAOmB,EAAaX,IACpDY,EAASV,GAAQS,EAAaX,GAAY,GAE5C,MAAMiB,EAAQ,KAAIxB,OAAYC,MAAMwB,WACpC7B,SAAE8B,OAAO,OAAQ,gBAAgBb,KAAK,IAAKM,GAAQN,KAAK,IAAKW,GAAOX,KAAK,QAASf,EAAS,eAAiB,YAAYe,KAAK,QAASL,GAAOK,KAC3I,SACAS,EAASK,UAAS3B,OAAYC,MAAMwB,cAAazB,OAAYC,MAAMa,WAAa,GAChFD,KAAK,KAAM,KACbF,EAAME,KAAK,IAAKM,EAASpB,GACrBmB,GAAcX,GAChBI,EAAME,KAAK,IAAKJ,GAAQD,EAAQL,GAAU,EAAIe,EAAa,EAAInB,GAEjEH,EAAE8B,OAAO,OAAQ,gBAAgBb,KAAK,IAAKM,GAAQN,KACjD,OACAb,OAAYC,MAAMa,cAAad,OAAYC,MAAMwB,cAAazB,OAAYC,MAAMC,SAChFW,KAAK,QAASL,GAAOK,KAAK,SAAyC,GAAzC,EAAUb,OAAYC,MAAMwB,YAAgBZ,KAAK,QAAMb,OAAYC,MAAM2B,QACrGhC,EAAE8B,OAAO,OAAQ,gBAAgBb,KAAK,IAAKM,GAAQN,KACjD,OACAb,OAAYC,MAAMa,cAAad,OAAYC,MAAMwB,cAAazB,OAAYC,MAAMC,SAChFW,KAAK,QAASL,GAAOK,KAAK,SAAUS,EAASK,OAAS,EAAI,KAAI3B,OAAYC,MAAMwB,YAAYZ,KAAK,QAAMb,OAAYC,MAAM2B,QACpHhC,GAwDHiC,EAAY,SAASC,EAAMjC,GAC/B,MAAMoB,EAAKpB,EAASoB,GACdc,EAAY,CAChBd,KACAe,MAAOnC,EAASoB,GAChBT,MAAO,EACPmB,OAAQ,GAEJ/B,EAAIkC,EAAKlB,OAAO,KAAKC,KAAK,KAAMI,GAAIJ,KAAK,QAAS,cAClC,UAAlBhB,EAASoC,MAhJSrC,KAAMA,EAAEgB,OAAO,UAAUC,KAAK,QAAS,eAAeA,KAAK,OAAKb,OAAYC,MAAMiC,UAAUrB,KAAK,QAAMb,OAAYC,MAAMC,WAAUF,OAAYC,MAAMiC,UAAUrB,KAAK,QAAMb,OAAYC,MAAMC,WAAUF,OAAYC,MAAMiC,SAAQ,EAiJpPC,CAAevC,GAEK,QAAlBC,EAASoC,MAlEOrC,KACpBA,EAAEgB,OAAO,UAAUC,KAAK,QAAS,mBAAmBA,KAAK,OAAKb,OAAYC,MAAMiC,YAAWlC,OAAYC,MAAMmC,aAAavB,KACxH,QACAb,OAAYC,MAAMC,WAAUF,OAAYC,MAAMiC,YAAWlC,OAAYC,MAAMmC,aAC3EvB,KACA,QACAb,OAAYC,MAAMC,WAAUF,OAAYC,MAAMiC,YAAWlC,OAAYC,MAAMmC,aAEtExC,EAAEgB,OAAO,UAAUC,KAAK,QAAS,mBAAmBA,KAAK,OAAKb,OAAYC,MAAMiC,UAAUrB,KAAK,QAAMb,OAAYC,MAAMC,WAAUF,OAAYC,MAAMiC,SAAW,GAAGrB,KAAK,QAAMb,OAAYC,MAAMC,WAAUF,OAAYC,MAAMiC,SAAW,EAAC,EA2D3OG,CAAazC,IAEO,SAAlBC,EAASoC,MAAqC,SAAlBpC,EAASoC,OA3DjBK,EAAC1C,EAAGC,KAC5B,IAAIW,KAAQR,OAAYC,MAAMsC,UAC1BZ,KAAS3B,OAAYC,MAAMuC,WAC/B,GAAI3C,EAAS4C,SAAU,CACrB,IAAIC,EAAMlC,EACVA,EAAQmB,EACRA,EAASe,CACX,CACO9C,EAAEgB,OAAO,QAAQ+B,MAAM,SAAU,SAASA,MAAM,OAAQ,SAAS9B,KAAK,QAASL,GAAOK,KAAK,SAAUc,GAAQd,KAAK,OAAKb,OAAYC,MAAMC,SAASW,KAAK,OAAKb,OAAYC,MAAMC,QAAO,EAoD1LoC,CAAkB1C,EAAGC,GAED,SAAlBA,EAASoC,MA3BEW,EAAC5B,EAAMpB,KACtBA,EAAEiB,KAAK,QAAS,cAChB,MAAMgC,EAAOjD,EAAEgB,OAAO,QAAQC,KAAK,IAAK,GAAGA,KAAK,OAAKb,OAAYC,MAAMC,SACjE4C,EAAWlD,EAAEgB,OAAO,MAClBmC,YAAWtB,cA7BCuB,EAACC,EAAOvC,EAAGwC,EAAGtD,KAClC,IAAI6B,EAAa,EACjB,MAAM0B,EAAWvD,EAAEgB,OAAO,QAC1BuC,EAASR,MAAM,cAAe,SAC9BQ,EAAStC,KAAK,QAAS,YACvB,IAAIG,EAAOiC,EAAMG,QAAQ,QAAS,SAClCpC,EAAOA,EAAKoC,QAAQ,MAAO,SAC3B,MAAMC,EAAQrC,EAAKsC,MAAMC,IAAOC,gBAChC,IAAIC,EAAU,QAAOzD,OAAYC,MAAMyD,WACvC,UAAWC,KAASN,EAAO,CACzB,MAAMO,EAAMD,EAAME,OAClB,GAAID,EAAIE,OAAS,EAAG,CAClB,MAAMC,EAAOZ,EAASvC,OAAO,SAC7BmD,EAAK/C,KAAK4C,GACM,IAAZH,IAEFA,GADmBM,EAAK1D,OAAOC,UACTqB,QAExBF,GAAcgC,EACdM,EAAKlD,KAAK,IAUwC,GAVnCH,EAAIV,OAAYC,MAAMyD,YACrCK,EAAKlD,KAAK,IAS2C,EATlCY,EAAa,QAAOzB,OAAYC,MAAMyD,WAC3D,CACF,CACA,MAAO,CAAEX,UAAWI,EAAS9C,OAAOC,UAAUE,MAAOiB,aAAW,EAM9BuB,CAAchC,EAAM,EAAG,EAAG8B,GAC5DD,EAAKhC,KAAK,SAAUY,EAAa,KAAIzB,OAAYC,MAAMyD,YACvDb,EAAKhC,KAAK,QAASkC,EAA2C,GAA3CA,EAAY/C,OAAYC,MAAMyD,WAC1Cb,EAqBLD,CAAS/C,EAASgD,KAAK7B,KAAMpB,GAET,YAAlBC,EAASoC,MA3JMrC,KAAMA,EAAEgB,OAAO,QAAQ+B,MAAM,SAAU,QAAQA,MAAM,mBAAoB,KAAK9B,KAAK,QAAMb,OAAYC,MAAMwB,YAAYZ,KAAK,QAAS,WAAWA,KAAK,KAAqC,GAArC,EAAMb,OAAYC,MAAMwB,YAAgBZ,KAAK,KAAM,GAAGA,KAAK,KAAM,EAAC,EA4JxOmD,CAAYpE,GAEQ,YAAlBC,EAASoC,MAAuD,IAAjCpC,EAASoE,aAAaH,QA7JnCI,EAACtE,EAAGC,KAC1B,MACMsE,EADQvE,EAAEgB,OAAO,QAAQC,KAAK,IAAK,KAAIb,OAAYC,MAAMC,SAASW,KAAK,OAAKb,OAAYC,MAAMwB,WAAa,KAAIzB,OAAYC,MAAMC,SAASW,KAAK,eAAab,OAAYC,MAAMc,UAAUF,KAAK,QAAS,eAAeG,KAAKnB,EAASoB,IAClNZ,OAAOC,UAC9BV,EAAE8B,OAAO,OAAQ,gBAAgBb,KAAK,OAAKb,OAAYC,MAAMC,SAASW,KAAK,OAAKb,OAAYC,MAAMC,SAASW,KAAK,QAASsD,EAAS3D,MAAQ,KAAIR,OAAYC,MAAMC,SAASW,KAAK,SAAUsD,EAASxC,OAAS,KAAI3B,OAAYC,MAAMC,SAASW,KAAK,QAAMb,OAAYC,MAAM2B,OAC/P3B,EA0JLiE,CAAgBtE,EAAGC,GAEC,YAAlBA,EAASoC,MAAsBpC,EAASoE,aAAaH,OAAS,GA1J7CM,EAACxE,EAAGC,KACzB,MAOMwE,EADQzE,EAAEgB,OAAO,QAAQC,KAAK,IAAK,KAAIb,OAAYC,MAAMC,SAASW,KAAK,OAAKb,OAAYC,MAAMwB,WAAa,OAAMzB,OAAYC,MAAMC,SAASW,KAAK,eAAab,OAAYC,MAAMc,UAAUF,KAAK,QAAS,eAAeG,KAAKnB,EAASoE,aAAa,IACjO5D,OAAOC,UACxBgE,EAAcD,EAAS1C,OACvB4C,EAAc3E,EAAEgB,OAAO,QAAQC,KAAK,OAAKb,OAAYC,MAAMC,SAASW,KACxE,IACAyD,EAA0C,IAA1CA,EAActE,OAAYC,MAAMC,SAAU,EAAMF,OAAYC,MAAMuE,iBAAgBxE,OAAYC,MAAMwB,YACpGZ,KAAK,QAAS,qBAChB,IAAI4D,GAAU,EACVC,GAAW,EACf7E,EAASoE,aAAaU,QAAQ,SAASC,GAChCH,IAhBU,SAASI,EAAQjB,EAAKkB,GACrC,MAAMC,EAAQF,EAAOjE,OAAO,SAASC,KAAK,IAAK,KAAIb,OAAYC,MAAMC,SAASc,KAAK4C,GAC9EkB,GACHC,EAAMlE,KAAK,QAAMb,OAAYC,MAAMwB,WAEvC,CAYIuD,CAAST,EAAaK,EAAOF,GAC7BA,GAAW,GAEbD,GAAU,CACZ,GACA,MAAMQ,EAAYrF,EAAEgB,OAAO,QAAQC,KAAK,QAAMb,OAAYC,MAAMC,SAASW,KAAK,QAAMb,OAAYC,MAAMC,QAAUoE,KAActE,OAAYC,MAAMuE,cAAgB,GAAG3D,KAAK,QAAMb,OAAYC,MAAMC,QAAUoE,KAActE,OAAYC,MAAMuE,cAAgB,GAAG3D,KAAK,QAAS,iBACrQqE,EAAWX,EAAYlE,OAAOC,UAC9BE,EAAQY,KAAKC,IAAI6D,EAAS1E,MAAO6D,EAAS7D,OAChDyE,EAAUpE,KAAK,KAAML,EAAQ,KAAIR,OAAYC,MAAMC,SACnDN,EAAE8B,OAAO,OAAQ,gBAAgBb,KAAK,OAAKb,OAAYC,MAAMC,SAASW,KAAK,OAAKb,OAAYC,MAAMC,SAASW,KAAK,QAASL,EAAQ,KAAIR,OAAYC,MAAMC,SAASW,KAAK,SAAUqE,EAASvD,OAAS2C,EAAc,KAAItE,OAAYC,MAAMC,SAASW,KAAK,QAAMb,OAAYC,MAAM2B,OACpQhC,EA+HLwE,CAAexE,EAAGC,GAEpB,MAAMsF,EAAWvF,EAAES,OAAOC,UAC1ByB,SAAUvB,MAAQ2E,EAAS3E,MAAQ,KAAIR,OAAYC,MAAMC,QACzD6B,EAAUJ,OAASwD,EAASxD,OAAS,KAAI3B,OAAYC,MAAMC,QAnLjDkF,EAACC,EAAKC,KAChB5F,EAAQ2F,GAAOC,GAmLfC,CAActE,EAAIc,GACXA,CACT,EACA,IAiEIyD,EAjEAC,EAAY,EAkEhB,MAAMC,EAAoB,CAAC,EA+BrBC,EAAiB3E,GACdA,EAAOA,EAAK8C,OAAS0B,EAAKI,eAAiB,EAE9CC,EAAYA,CAACC,EAAKC,EAAUtD,EAAU3C,EAAQkG,EAAMC,EAAaC,KACrE,MAAMC,EAAQ,IAAIC,IAAe,CAC/BC,UAAU,EACVC,YAAY,IAEd,IAAIC,EACAC,GAAc,EAClB,IAAKD,EAAI,EAAGA,EAAIT,EAAIhC,OAAQyC,IAC1B,GAAoB,aAAhBT,EAAIS,GAAGE,KAAqB,CAC9BD,GAAc,EACd,KACF,CAGAL,EAAMO,SADJjE,EACa,CACbkE,QAAS,KACTL,YAAY,EACZD,UAAU,EAEVO,OAAQ,aACRC,QAASL,EAAc,EAAIhB,EAAKsB,iBAChCC,QAASP,EAAc,EAAI,GAC3BQ,cAAc,GAKD,CACbL,QAAS,KACTL,YAAY,EACZD,UAAU,EAIVQ,QAASL,EAAc,EAAIhB,EAAKsB,iBAChCC,QAASP,EAAc,EAAI,GAC3BI,OAAQ,aAERI,cAAc,IAGlBb,EAAMc,oBAAoB,WACxB,MAAO,CAAC,CACV,GACAf,EAAQgB,GAAGC,QAAQrB,GACnB,MAAMsB,EAASlB,EAAQgB,GAAGG,YACpBC,EAAYpB,EAAQgB,GAAGK,eACvBC,EAAQC,OAAOC,KAAKN,GAC1B,UAAW/B,KAAOmC,EAAO,CACvB,MAAM3H,EAAWuH,EAAO/B,GAIxB,IAAIhF,EACJ,GAJIoC,IACF5C,EAAS4C,SAAWA,GAGlB5C,EAASiG,IAAK,CAChB,IAAI6B,EAAM5B,EAASnF,OAAO,KAAKC,KAAK,KAAMhB,EAASoB,IAAIJ,KAAK,QAAS,cACrER,EAAOwF,EAAUhG,EAASiG,IAAK6B,EAAK9H,EAASoB,IAAKnB,EAAQkG,EAAMC,EAAaC,GAC7E,CACEyB,EAAMhI,EAAegI,EAAK9H,EAAUC,GACpC,IAAI8H,EAAYD,EAAItH,OAAOC,UAC3BD,EAAKG,MAAQoH,EAAUpH,MACvBH,EAAKsB,OAASiG,EAAUjG,OAAS6D,EAAKtF,QAAU,EAChDwF,EAAkB7F,EAASoB,IAAM,CAAEiC,EAAGsC,EAAKqC,kBAC7C,CACF,MACExH,EAAOwB,EAAUkE,EAAUlG,GAE7B,GAAIA,EAASgD,KAAM,CACjB,MAMMA,EAAOhB,EAAUkE,EANP,CACd9B,aAAc,GACdhD,GAAIpB,EAASoB,GAAK,QAClB4B,KAAMhD,EAASgD,KACfZ,KAAM,SAGuB,YAA3BpC,EAASgD,KAAKiF,UAChB3B,EAAM4B,QAAQ1H,EAAKY,GAAK,QAAS4B,GACjCsD,EAAM4B,QAAQ1H,EAAKY,GAAIZ,KAEvB8F,EAAM4B,QAAQ1H,EAAKY,GAAIZ,GACvB8F,EAAM4B,QAAQ1H,EAAKY,GAAK,QAAS4B,IAEnCsD,EAAM6B,UAAU3H,EAAKY,GAAIZ,EAAKY,GAAK,UACnCkF,EAAM6B,UAAU3H,EAAKY,GAAK,QAASZ,EAAKY,GAAK,SAC/C,MACEkF,EAAM4B,QAAQ1H,EAAKY,GAAIZ,EAE3B,CACA4H,IAAIC,MAAM,SAAU/B,EAAMgC,YAAahC,GACvC,IAAIiC,EAAM,EACVd,EAAU3C,QAAQ,SAAS0D,GACzBD,IACAH,IAAIC,MAAM,eAAgBG,GAC1BlC,EAAMmC,QACJD,EAASE,IACTF,EAASG,IACT,CACEH,WACA7H,MAAOmF,EAAc0C,EAAS1H,OAC9BgB,OAAQ6D,EAAKiD,YAAclF,IAAOmF,QAAQL,EAAS1H,OAAOmD,OAC1D6E,SAAU,KAEZ,KAAOP,EAEX,IAAC,EACDQ,MAAOzC,GACP8B,IAAIC,MAAM,qBAAsB/B,EAAM0C,SACtC,MAAMC,EAAU/C,EAAS1F,OACzB8F,EAAM0C,QAAQlE,QAAQ,SAASoE,QACnB,IAANA,QAAkC,IAAlB5C,EAAM9F,KAAK0I,IAC7Bd,IAAIe,KAAK,QAAUD,EAAI,KAAOE,KAAKC,UAAU/C,EAAM9F,KAAK0I,KACxD/C,EAAKmD,OAAO,IAAML,EAAQ7H,GAAK,KAAO8H,GAAGlI,KACvC,YACA,cAAgBsF,EAAM9F,KAAK0I,GAAGrI,EAAIyF,EAAM9F,KAAK0I,GAAGvI,MAAQ,GAAK,KAAO2F,EAAM9F,KAAK0I,GAAG7F,GAAKwC,EAAkBqD,GAAKrD,EAAkBqD,GAAG7F,EAAI,GAAKiD,EAAM9F,KAAK0I,GAAGpH,OAAS,GAAK,MAE1KqE,EAAKmD,OAAO,IAAML,EAAQ7H,GAAK,KAAO8H,GAAGlI,KAAK,eAAgBsF,EAAM9F,KAAK0I,GAAGrI,EAAIyF,EAAM9F,KAAK0I,GAAGvI,MAAQ,GACrFyF,EAAYmD,iBAAiB,IAAMN,EAAQ7H,GAAK,KAAO8H,EAAI,aACnEpE,QAAS0E,IAChB,MAAMC,EAASD,EAAQE,cACvB,IAAIC,EAAS,EACTC,EAAS,EACTH,IACEA,EAAOC,gBACTC,EAASF,EAAOC,cAAcjJ,UAAUE,OAE1CiJ,EAASC,SAASJ,EAAOK,aAAa,gBAAiB,IACnDC,OAAOC,MAAMJ,KACfA,EAAS,IAGbJ,EAAQS,aAAa,KAAM,EAAIL,EAAS,GACxCJ,EAAQS,aAAa,KAAMN,EAASC,EAAS,EAAC,IAGhDxB,IAAIC,MAAM,WAAaa,EAAI,KAAOE,KAAKC,UAAU/C,EAAM9F,KAAK0I,IAEhE,GACA,IAAI5D,EAAW2D,EAAQxI,UACvB6F,EAAM4D,QAAQpF,QAAQ,SAASqF,QACnB,IAANA,QAAkC,IAAlB7D,EAAM8D,KAAKD,KAC7B/B,IAAIC,MAAM,QAAU8B,EAAEjB,EAAI,OAASiB,EAAEE,EAAI,KAAOjB,KAAKC,UAAU/C,EAAM8D,KAAKD,KA/O/D,SAASlI,EAAMqI,EAAM9B,GAapC8B,EAAKC,OAASD,EAAKC,OAAOC,OAAQC,IAAOV,OAAOC,MAAMS,EAAEpH,IACxD,MAAMqH,EAAWJ,EAAKC,OAChBI,KAAeC,SAAO/J,EAAE,SAASgK,GACrC,OAAOA,EAAEhK,CACX,GAAGwC,EAAE,SAASwH,GACZ,OAAOA,EAAExH,CACX,GAAGyH,MAAMC,OACHC,EAAU/I,EAAKlB,OAAO,QAAQC,KAAK,IAAK2J,EAAaD,IAAW1J,KAAK,KAAM,OAAS4E,GAAW5E,KAAK,QAAS,cACnH,IAAIiK,EAAM,GAUV,MATI9K,OAAYC,MAAM8K,sBACpBD,EAAME,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,KAAOH,OAAOC,SAASG,SAAWJ,OAAOC,SAASI,OAC1GP,EAAMA,EAAI1H,QAAQ,MAAO,OACzB0H,EAAMA,EAAI1H,QAAQ,MAAO,QAE3ByH,EAAQhK,KACN,aACA,OAASiK,EAAM,IA5BO,SAAS7I,GAC/B,OAAQA,GACN,KAAKiF,IAAGoE,aAAaC,YACnB,MAAO,cACT,KAAKrE,IAAGoE,aAAaE,UACnB,MAAO,YACT,KAAKtE,IAAGoE,aAAaG,YACnB,MAAO,cACT,KAAKvE,IAAGoE,aAAaI,WACnB,MAAO,aAEb,CAiBuBC,CAAgBzE,IAAGoE,aAAaI,YAAc,aAE9C,IAAnBrD,EAAS1H,MAAkB,CAC7B,MAAMqB,EAAQF,EAAKlB,OAAO,KAAKC,KAAK,QAAS,eACrCH,IAAGwC,KAAM0I,IAAMC,kBAAkB1B,EAAKC,QACxC0B,EAAOvI,IAAOmF,QAAQL,EAAS1H,OACrC,IAAI2D,EAAc,EAClB,MAAMyH,EAAY,GAClB,IAAIC,EAAW,EACXC,EAAO,EACX,QAAS1F,EAAI,EAAGA,GAAKuF,EAAKhI,OAAQyC,IAAK,CACrC,MAAM5F,EAAQqB,EAAMpB,OAAO,QAAQC,KAAK,cAAe,UAAUG,KAAK8K,EAAKvF,IAAI1F,KAAK,IAAKH,GAAGG,KAAK,IAAKqC,EAAIoB,GACpG4H,EAAYvL,EAAMN,OAAOC,UAC/B0L,EAAW5K,KAAKC,IAAI2K,EAAUE,EAAU1L,OACxCyL,EAAO7K,KAAK+K,IAAIF,EAAMC,EAAUxL,GAChCuH,IAAImE,KAAKF,EAAUxL,EAAGA,EAAGwC,EAAIoB,GACT,IAAhBA,IAEFA,EADiB3D,EAAMN,OAAOC,UACPqB,OACvBsG,IAAImE,KAAK,eAAgB9H,EAAapB,IAExC6I,EAAUM,KAAK1L,EACjB,CACA,IAAI2L,EAAYhI,EAAcwH,EAAKhI,OACnC,GAAIgI,EAAKhI,OAAS,EAAG,CACnB,MAAMyI,GAAaT,EAAKhI,OAAS,GAAKQ,EAAc,GACpDyH,EAAUpH,QAAQ,CAAChE,EAAO4F,IAAM5F,EAAME,KAAK,IAAKqC,EAAIqD,EAAIjC,EAAciI,IACtED,EAAYhI,EAAcwH,EAAKhI,MACjC,CACA,MAAM0I,EAASxK,EAAM3B,OAAOC,UAC5B0B,EAAMN,OAAO,OAAQ,gBAAgBb,KAAK,QAAS,OAAOA,KAAK,IAAKH,EAAIsL,EAAW,KAAIhM,OAAYC,MAAMC,QAAU,GAAGW,KAAK,IAAKqC,EAAIoJ,EAAY,KAAItM,OAAYC,MAAMC,QAAU,EAAI,KAAKW,KAAK,QAASmL,KAAWhM,OAAYC,MAAMC,SAASW,KAAK,SAAUyL,KAAYtM,OAAYC,MAAMC,SAC1R+H,IAAImE,KAAKI,EACX,CACA/G,GACF,CAiLMgH,CAAS1G,EAAUI,EAAM8D,KAAKD,GAAI7D,EAAM8D,KAAKD,GAAG3B,UAEpD,GACAlD,EAAW2D,EAAQxI,UACnB,MAAMyB,EAAY,CAChBd,GAAIwB,GAAsB,OAC1BT,MAAOS,GAAsB,OAC7BjC,MAAO,EACPmB,OAAQ,GAEVI,SAAUvB,MAAQ2E,EAAS3E,MAAQ,EAAIgF,EAAKtF,QAC5C6B,EAAUJ,OAASwD,EAASxD,OAAS,EAAI6D,EAAKtF,QAC9C+H,IAAIC,MAAM,eAAgBnG,EAAWoE,GAC9BpE,GAMH2K,GAAU,CACdC,OAAMC,EAAAtC,EACNpD,GAAE0F,EAAAlC,EACFmC,SAPe,CACfC,QA9Lc,WAChB,EA8LEC,KA1LW,SAAS/L,EAAMC,EAAI+L,EAAU9G,GACxCV,KAAOxF,OAAYC,MACnB,MAAMgN,KAAgBjN,OAAYiN,cAClC,IAAIC,EACkB,YAAlBD,IACFC,KAAiB/D,OAAO,KAAOlI,IAEjC,MAAM+E,GAAyB,EAAYmD,OAAZ,YAAlB8D,EAAqCC,EAAerE,QAAQ,GAAGsE,gBAAgBC,KAAe,QACrGtH,EAAwB,YAAlBmH,EAA8BC,EAAerE,QAAQ,GAAGsE,gBAAkBE,SACtFpF,IAAIC,MAAM,qBAAuBlH,GACjC,MAAM+E,EAAWC,EAAKmD,OAAO,QAAQlI,QAbjB,SAASa,GAC7BA,EAAKlB,OAAO,QAAQA,OAAO,UAAUC,KAAK,KAAM,iBAAiBA,KAAK,OAAQ,IAAIA,KAAK,OAAQ,GAAGA,KAAK,cAAe,IAAIA,KAAK,eAAgB,IAAIA,KAAK,SAAU,QAAQD,OAAO,QAAQC,KAAK,IAAK,4BACrM,CAYEyM,CAAcvH,GACd,MAAMwH,EAAUrH,EAAQgB,GAAGsG,aAC3B3H,EAAU0H,EAASxH,OAAU,GAAQ,EAAOC,EAAMF,EAAKI,GACvD,MAAMhG,EAAUsF,EAAKtF,QACfsM,EAASzG,EAAS1F,OAAOC,UACzBE,EAAQgM,EAAOhM,MAAkB,EAAVN,EACvByB,EAAS6K,EAAO7K,OAAmB,EAAVzB,GAE/BuN,OAAiB1H,EAAUpE,EADF,KAARnB,EAC4BgF,EAAKkI,aAClD3H,EAASlF,KACP,UACA,GAAG2L,EAAO9L,EAAI8E,EAAKtF,YAAYsM,EAAOtJ,EAAIsC,EAAKtF,WAAaM,EAAQ,IAAMmB,EAE9E,GAwKEgM,OAAMf,EAAAgB,EACNC,KAAOC,IACAA,EAAI7N,QACP6N,EAAI7N,MAAQ,CAAC,GAEf6N,EAAI7N,MAAM8K,oBAAsB+C,EAAI/C,oBACpC7D,IAAG6G,OAAM","names":["idCache","addTitleAndBox","g","stateDef","altBkg","pad","getConfig","state","padding","dblPad","orgBox","node","getBBox","orgWidth","width","orgX","x","title","append","attr","titleShift","fontSize","text","id","titleWidth","startX","Math","max","graphBox","abs","lineY","textHeight","insert","height","radius","drawState","elem","stateInfo","label","type","sizeUnit","drawStartState","miniPadding","drawEndState","drawForkJoinState","forkWidth","forkHeight","parentId","tmp","style","drawNote","note","rectElem","textWidth","_drawLongText","_text","y","textElem","replace","lines","split","common","lineBreakRegex","tHeight","noteMargin","line2","txt","trim","length","span","drawDivider","descriptions","drawSimpleState","classBox","drawDescrState","titleBox","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","textEl","isFirst2","tSpan","addTspan","descrLine","descrBox","stateBox","set","key","val","idCache$1","conf","edgeCount","transformationLog","getLabelWidth","fontSizeFactor","renderDoc","doc","diagram2","root","domDocument","diagObj","graph","graphlib","compound","multigraph","i","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","db","extract","states","getStates","relations","getRelations","keys2","Object","keys","sub","boxBounds","compositTitleSize","position","setNode","setParent","log","debug","nodeCount","cnt","relation","setEdge","id1","id2","labelHeight","getRows","labelpos","layout","nodes","svgElem","v","warn","JSON","stringify","select","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","Number","isNaN","setAttribute","edges","e","edge","w","path","points","filter","p","lineData","lineFunction","line","d","curve","curveBasis","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","getRelationType","utils","calcLabelPosition","rows","titleRows","maxWidth","minX","boundsTmp","min","info","push","boxHeight","heightAdj","bounds","drawEdge","diagram","parser","_styles_6aaf32cf_js__WEBPACK_IMPORTED_MODULE_7__","renderer","setConf","draw","_version","securityLevel","sandboxElement","contentDocument","body","document","insertMarkers","rootDoc","getRootDoc","configureSvgSize","useMaxWidth","styles","s","init","cnf","clear"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/mermaid/dist/stateDiagram-587899a1.js"],"sourcesContent":["import { d as db, p as parser, s as styles } from \"./styles-6aaf32cf.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { c as getConfig, u as utils, e as common, l as log, i as configureSvgSize } from \"./mermaid-b5860b54.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nconst idCache = {};\nconst set = (key, val) => {\n  idCache[key] = val;\n};\nconst get = (k) => idCache[k];\nconst keys = () => Object.keys(idCache);\nconst size = () => keys().length;\nconst idCache$1 = {\n  get,\n  set,\n  keys,\n  size\n};\nconst drawStartState = (g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit);\nconst drawDivider = (g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0);\nconst drawSimpleState = (g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n};\nconst drawDescrState = (g, stateDef) => {\n  const addTspan = function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  };\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst addTitleAndBox = (g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc)\n    ;\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n};\nconst drawEndState = (g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n};\nconst drawForkJoinState = (g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n};\nconst _drawLongText = (_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n};\nconst drawNote = (text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n};\nconst drawState = function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  idCache$1.set(id, stateInfo);\n  return stateInfo;\n};\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case db.relationType.EXTENSION:\n        return \"extension\";\n      case db.relationType.COMPOSITION:\n        return \"composition\";\n      case db.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(db.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils.calcLabelPosition(path.points);\n    const rows = common.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundsTmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundsTmp.width);\n      minX = Math.min(minX, boundsTmp.x);\n      log.info(boundsTmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n};\nlet conf;\nconst transformationLog = {};\nconst setConf = function() {\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n};\nconst getLabelWidth = (text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n};\nconst renderDoc = (doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  diagObj.db.extract(doc);\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      }\n    } else {\n      node = drawState(diagram2, stateDef);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  layout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n};\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"x_google_ignoreList":[0]}