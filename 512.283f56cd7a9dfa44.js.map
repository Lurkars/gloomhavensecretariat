{"version":3,"file":"512.283f56cd7a9dfa44.js","mappings":"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","names":["__WEBPACK_DEFAULT_EXPORT__","flatten","array","length","baseFlatten","last","undefined","min","baseExtremum","identity","baseLt","objectProto","Object","prototype","hasOwnProperty","defaults","baseRest","object","sources","index","guard","isIterateeCall","source","props","keysIn","propsIndex","propsLength","key","value","eq","call","nativeMax","Math","max","lodash_es_find","createFind","findIndexFunc","collection","predicate","fromIndex","iterable","isArrayLike","iteratee","baseIteratee","keys","findIndex","toInteger","baseFindIndex","comparator","current","computed","isSymbol","result","toFinite","remainder","reWhitespace","reTrimStart","_baseTrim","baseTrim","string","slice","trimmedEndIndex","test","charAt","replace","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","INFINITY","lodash_es_toFinite","toNumber","NaN","isObject","other","valueOf","isBinary","_baseSet","baseSet","path","customizer","castPath","lastIndex","nested","toKey","newValue","objValue","isIndex","assignValue","_basePickBy","basePickBy","paths","baseGet","map","func","isArray","arrayMap","baseMap","_baseHas","baseHas","lodash_es_has","has","hasPath","Array","baseEach","lodash_es_union","union","arrays","baseUniq","isArrayLikeObject","GRAPH_NODE","Graph","constructor","opts","this","_isDirected","directed","_isMultigraph","multigraph","_isCompound","compound","_label","_defaultNodeLabelFn","_","_defaultEdgeLabelFn","_nodes","_parent","_children","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","isDirected","isMultigraph","isCompound","setGraph","label","graph","setDefaultNodeLabel","newDefault","nodeCount","_nodeCount","nodes","self","v","sinks","setNodes","vs","args","arguments","setNode","node","hasNode","removeNode","removeEdge","e","_removeFromParentsChildList","children","child","setParent","parent","Error","ancestor","predecessors","predsV","successors","sucsV","neighbors","preds","isLeaf","filterNodes","filter","copy","w","setEdge","edge","parents","findParent","setDefaultEdgeLabel","edgeCount","_edgeCount","edges","setPath","name","valueSpecified","arg0","edgeArgsToId","edgeObj","edgeArgsToObj","v_","w_","tmp","freeze","incrementOrInitEntry","edgeObjToId","hasEdge","decrementOrRemoveEntry","inEdges","u","inV","outEdges","outV","nodeEdges","concat","k","nativeCeil","ceil","lodash_es_range","createRange","fromRight","start","end","step","baseRange","List","sentinel","_next","_prev","_sentinel","dequeue","entry","unlink","enqueue","toString","strs","curr","push","JSON","stringify","filterOutLinks","join","DEFAULT_WEIGHT_FN","g","buckets","zeroIdx","collectPredecessors","results","weight","uEntry","out","assignBucket","wEntry","in","run","fas","acyclicer","greedyFAS","weightFn","state","buildState","fasGraph","maxIn","maxOut","prevWeight","doGreedyFAS","i","dfsFAS","stack","visited","dfs","forwardName","reversed","lodash_es_pick","flatRest","setToString","overRest","basePick","hasIn","_baseGt","baseGt","lodash_es_max","lodash_es_mapValues","mapValues","baseForOwn","baseAssignValue","lodash_es_now","root","Date","now","addDummyNode","type","attrs","dummy","asNonCompoundGraph","simplified","intersectRect","rect","point","sx","sy","x","y","dx","dy","width","h","height","abs","buildLayerMatrix","layering","maxRank","rank","order","addBorderNode","prefix","time","fn","console","log","notime","prop","sg","sgNode","prev","util","borderType","swapWidthHeight","swapWidthHeightOne","reverseYOne","swapXYOne","lodash_es_minBy","minBy","longestPath","minlen","Number","POSITIVE_INFINITY","slack","feasibleTree","delta","t","size","tightTree","findMinSlackEdge","shiftRanks","edgeV","asciiSize","baseProperty","RegExp","rsAstralRange","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsModifier","rsOptVar","rsSeq","rsSymbol","navigation","bind","acc","doDfs","postorder","networkSimplex","simplify","simpleLabel","initLowLimValues","initCutValues","leaveEdge","exchangeEdges","enterEdge","alg","assignCutValue","childLab","cutvalue","calcCutValue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","tree","otherCutValue","dfsAssignLowLim","nextLim","low","lim","vLabel","wLabel","tailLabel","flip","candidates","isDescendant","f","updateRanks","preorder","flipped","rootLabel","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","depths","treeDepths","depth","nodeSep","nestingRoot","sumWeights","nodeRankFactor","top","bottom","borderTop","borderBottom","childNode","childTop","childBottom","thisWeight","nestingEdge","lodash_es_cloneDeep","cloneDeep","baseClone","CLONE_DEEP_FLAG","lodash_es_zipObject","zipObject","values","baseZipObject","assignFunc","valsLength","_compareAscending","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","_baseOrderBy","baseOrderBy","iteratees","orders","baseUnary","baseSortBy","comparer","sort","criteria","compareMultiple","objCriteria","othCriteria","ordersLength","lodash_es_sortBy","sortBy","crossCount","cc","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","pos","firstIndex","treeSize","forEach","weightSum","consumeUnsortable","unsortable","pop","sortSubgraph","cg","biasRight","movable","bl","borderLeft","br","borderRight","subgraphs","barycenters","barycenter","nodeU","sum","subgraphResult","mergeBarycenters","target","entries","resolveConflicts","mappedEntries","indegree","entryV","entryW","doResolveConflicts","sourceSet","handleIn","vEntry","merged","mergeEntries","handleOut","reverse","expandSubgraphs","parts","partition","lhs","rhs","sortable","vsIndex","compareWithBias","bias","blPred","brPred","buildLayerGraphs","ranks","relationship","buildLayerGraph","createRootNode","minRank","sweepLayerGraphs","layerGraphs","lg","sorted","addSubgraphConstraints","rootPrev","prevChild","assignOrder","layer","lodash_es_forOwn","forOwn","castFunction","lodash_es_forIn","forIn","baseFor","addConflict","conflicts","conflictsV","hasConflict","positionX","adjustedLayering","findType1Conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","xss","vert","horiz","inner","neighborFn","align","verticalAlignment","prevIdx","ws","mp","floor","il","xs","horizontalCompaction","reverseSep","blockG","buildBlockGraph","blockGraph","graphLabel","sepFn","sep","edgeSep","labelpos","toLowerCase","nodesep","edgesep","vRoot","uRoot","prevMax","iterate","setXsFunc","nextNodesFunc","elem","pass1","reduce","pass2","smallestWidth","findSmallestWidthAlignment","NEGATIVE_INFINITY","halfWidth","alignCoordinates","alignTo","alignToVals","alignToMin","alignToMax","alignment","xsVals","balance","ul","ignore","layout","debugTiming","layoutGraph","buildLayoutGraph","inputGraph","canonicalize","graphDefaults","selectNumberAttrs","graphNumAttrs","graphAttrs","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","runLayout","makeSpaceForEdgeLabels","ranksep","rankdir","labeloffset","removeSelfEdges","selfEdges","acyclic","nestingGraph","injectEdgeLabelProxies","removeEmptyRanks","offset","layers","cleanup","normalizeRanks","assignRankMinMax","removeEdgeLabelProxies","labelRank","dummyChains","normalizeEdge","vRank","wRank","edgeLabel","points","normalize","parentDummyChains","postorderNums","pathData","findPath","lca","vPath","wPath","pathIdx","pathV","ascending","addBorderSegments","downLayerGraphs","upLayerGraphs","initOrder","simpleNodes","orderedVs","best","bestCC","lastBest","insertSelfEdges","orderShift","selfEdge","adjust","rankDir","coordinateSystem","position","positionY","rankSep","prevY","maxHeight","positionSelfEdges","selfNode","removeBorderNodes","b","l","r","undo","origLabel","fixupEdgeLabelCoords","reverseY","swapXY","translateGraph","minX","maxX","minY","maxY","marginX","marginx","marginY","marginy","getExtremes","p","assignNodeIntersects","p1","p2","nodeV","nodeW","unshift","reversePointsForReversedEdges","updateInputGraph","inputLabel","layoutLabel","obj","newAttrs"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/lodash-es/flatten.js","./node_modules/lodash-es/last.js","./node_modules/lodash-es/min.js","./node_modules/lodash-es/defaults.js","./node_modules/lodash-es/findIndex.js","./node_modules/lodash-es/find.js","./node_modules/lodash-es/_createFind.js","./node_modules/lodash-es/_baseExtremum.js","./node_modules/lodash-es/toInteger.js","./node_modules/lodash-es/_trimmedEndIndex.js","./node_modules/lodash-es/_baseTrim.js","./node_modules/lodash-es/toNumber.js","./node_modules/lodash-es/toFinite.js","./node_modules/lodash-es/_baseLt.js","./node_modules/lodash-es/_baseSet.js","./node_modules/lodash-es/_basePickBy.js","./node_modules/lodash-es/map.js","./node_modules/lodash-es/_baseHas.js","./node_modules/lodash-es/has.js","./node_modules/lodash-es/_baseMap.js","./node_modules/lodash-es/union.js","./node_modules/dagre-d3-es/src/graphlib/graph.js","./node_modules/lodash-es/_baseRange.js","./node_modules/lodash-es/range.js","./node_modules/lodash-es/_createRange.js","./node_modules/dagre-d3-es/src/dagre/data/list.js","./node_modules/dagre-d3-es/src/dagre/greedy-fas.js","./node_modules/dagre-d3-es/src/dagre/acyclic.js","./node_modules/lodash-es/pick.js","./node_modules/lodash-es/_flatRest.js","./node_modules/lodash-es/_basePick.js","./node_modules/lodash-es/_baseGt.js","./node_modules/lodash-es/max.js","./node_modules/lodash-es/mapValues.js","./node_modules/lodash-es/now.js","./node_modules/dagre-d3-es/src/dagre/util.js","./node_modules/dagre-d3-es/src/dagre/add-border-segments.js","./node_modules/dagre-d3-es/src/dagre/coordinate-system.js","./node_modules/lodash-es/minBy.js","./node_modules/dagre-d3-es/src/dagre/rank/util.js","./node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js","./node_modules/dagre-d3-es/src/graphlib/alg/dijkstra.js","./node_modules/dagre-d3-es/src/graphlib/alg/floyd-warshall.js","./node_modules/lodash-es/_asciiSize.js","./node_modules/lodash-es/_hasUnicode.js","./node_modules/lodash-es/_unicodeSize.js","./node_modules/dagre-d3-es/src/graphlib/alg/topsort.js","./node_modules/dagre-d3-es/src/graphlib/alg/dfs.js","./node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js","./node_modules/dagre-d3-es/src/graphlib/alg/postorder.js","./node_modules/dagre-d3-es/src/graphlib/alg/preorder.js","./node_modules/dagre-d3-es/src/dagre/rank/index.js","./node_modules/dagre-d3-es/src/dagre/nesting-graph.js","./node_modules/lodash-es/cloneDeep.js","./node_modules/lodash-es/_baseZipObject.js","./node_modules/lodash-es/zipObject.js","./node_modules/lodash-es/_compareAscending.js","./node_modules/lodash-es/_baseOrderBy.js","./node_modules/lodash-es/_baseSortBy.js","./node_modules/lodash-es/_compareMultiple.js","./node_modules/lodash-es/sortBy.js","./node_modules/dagre-d3-es/src/dagre/order/cross-count.js","./node_modules/dagre-d3-es/src/dagre/order/sort.js","./node_modules/dagre-d3-es/src/dagre/order/sort-subgraph.js","./node_modules/dagre-d3-es/src/dagre/order/barycenter.js","./node_modules/dagre-d3-es/src/dagre/order/resolve-conflicts.js","./node_modules/dagre-d3-es/src/dagre/order/index.js","./node_modules/dagre-d3-es/src/dagre/order/build-layer-graph.js","./node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js","./node_modules/lodash-es/forOwn.js","./node_modules/lodash-es/forIn.js","./node_modules/dagre-d3-es/src/dagre/position/bk.js","./node_modules/dagre-d3-es/src/dagre/layout.js","./node_modules/dagre-d3-es/src/dagre/normalize.js","./node_modules/dagre-d3-es/src/dagre/parent-dummy-chains.js","./node_modules/dagre-d3-es/src/dagre/order/init-order.js","./node_modules/dagre-d3-es/src/dagre/position/index.js"],"sourcesContent":["import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n","import * as _ from 'lodash-es';\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\nexport class Graph {\n  constructor(opts = {}) {\n    this._isDirected = Object.prototype.hasOwnProperty.call(opts, 'directed')\n      ? opts.directed\n      : true;\n    this._isMultigraph = Object.prototype.hasOwnProperty.call(opts, 'multigraph')\n      ? opts.multigraph\n      : false;\n    this._isCompound = Object.prototype.hasOwnProperty.call(opts, 'compound')\n      ? opts.compound\n      : false;\n\n    // Label for the graph itself\n    this._label = undefined;\n\n    // Defaults to be set when creating a new node\n    this._defaultNodeLabelFn = _.constant(undefined);\n\n    // Defaults to be set when creating a new edge\n    this._defaultEdgeLabelFn = _.constant(undefined);\n\n    // v -> label\n    this._nodes = {};\n\n    if (this._isCompound) {\n      // v -> parent\n      this._parent = {};\n\n      // v -> children\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n\n    // v -> edgeObj\n    this._in = {};\n\n    // u -> v -> Number\n    this._preds = {};\n\n    // v -> edgeObj\n    this._out = {};\n\n    // v -> w -> Number\n    this._sucs = {};\n\n    // e -> edgeObj\n    this._edgeObjs = {};\n\n    // e -> label\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return _.keys(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    _.each(vs, function (v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n\n    // @ts-expect-error\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return Object.prototype.hasOwnProperty.call(this._nodes, v);\n  }\n  removeNode(v) {\n    if (Object.prototype.hasOwnProperty.call(this._nodes, v)) {\n      var removeEdge = (e) => this.removeEdge(this._edgeObjs[e]);\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        _.each(this.children(v), (child) => {\n          this.setParent(child);\n        });\n        delete this._children[v];\n      }\n      _.each(_.keys(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      _.each(_.keys(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error('Cannot set parent in a non-compound graph');\n    }\n\n    if (_.isUndefined(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      // Coerce parent to string\n      parent += '';\n      for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create a cycle');\n        }\n      }\n\n      this.setNode(parent);\n    }\n\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (_.isUndefined(v)) {\n      v = GRAPH_NODE;\n    }\n\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return _.keys(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return _.keys(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return _.keys(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return _.union(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    // @ts-expect-error\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound,\n    });\n\n    copy.setGraph(this.graph());\n\n    var self = this;\n    _.each(this._nodes, function (value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n\n    _.each(this._edgeObjs, function (e) {\n      // @ts-expect-error\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === undefined || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n\n    if (this._isCompound) {\n      _.each(copy.nodes(), function (v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return _.values(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    _.reduce(vs, function (v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n\n    if (typeof arg0 === 'object' && arg0 !== null && 'v' in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n\n    v = '' + v;\n    w = '' + w;\n    if (!_.isUndefined(name)) {\n      name = '' + name;\n    }\n\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (Object.prototype.hasOwnProperty.call(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n\n    if (!_.isUndefined(name) && !this._isMultigraph) {\n      throw new Error('Cannot set a named edge when isMultigraph = false');\n    }\n\n    // It didn't exist, so we need to create it.\n    // First ensure the nodes exist.\n    this.setNode(v);\n    this.setNode(w);\n\n    // @ts-expect-error\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    // Ensure we add undirected edges in a consistent way.\n    v = edgeObj.v;\n    w = edgeObj.w;\n\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return Object.prototype.hasOwnProperty.call(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = _.values(inV);\n      if (!u) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = _.values(outV);\n      if (!w) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nexport { List };\n\nclass List {\n  constructor() {\n    var sentinel = {};\n    sentinel._next = sentinel._prev = sentinel;\n    this._sentinel = sentinel;\n  }\n  dequeue() {\n    var sentinel = this._sentinel;\n    var entry = sentinel._prev;\n    if (entry !== sentinel) {\n      unlink(entry);\n      return entry;\n    }\n  }\n  enqueue(entry) {\n    var sentinel = this._sentinel;\n    if (entry._prev && entry._next) {\n      unlink(entry);\n    }\n    entry._next = sentinel._next;\n    sentinel._next._prev = entry;\n    sentinel._next = entry;\n    entry._prev = sentinel;\n  }\n  toString() {\n    var strs = [];\n    var sentinel = this._sentinel;\n    var curr = sentinel._prev;\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr._prev;\n    }\n    return '[' + strs.join(', ') + ']';\n  }\n}\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { List } from './data/list.js';\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nexport { greedyFAS };\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(\n    _.map(results, function (e) {\n      return g.outEdges(e.v, e.w);\n    }),\n  );\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, in: 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, (fasGraph.node(e.v).out += weight));\n    maxIn = Math.max(maxIn, (fasGraph.node(e.w)['in'] += weight));\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n","import * as _ from 'lodash-es';\nimport { greedyFAS } from './greedy-fas.js';\n\nexport { run, undo };\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (Object.prototype.hasOwnProperty.call(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function (e) {\n      if (Object.prototype.hasOwnProperty.call(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n","import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\n\nexport {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime,\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen),\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    }),\n  );\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    }),\n  );\n\n  var layers = [];\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0,\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(\n    _.map(g.nodes(), function (v) {\n      var rank = g.node(v).rank;\n      if (!_.isUndefined(rank)) {\n        return rank;\n      }\n    }),\n  );\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { adjust, undo };\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (Object.prototype.hasOwnProperty.call(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n","import * as _ from 'lodash-es';\n\nexport { longestPath, slack };\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (Object.prototype.hasOwnProperty.call(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(\n      _.map(g.outEdges(v), function (e) {\n        return dfs(e.w) - g.edge(e).minlen;\n      }),\n    );\n\n    if (\n      rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n      rank === undefined || // return value of _.map([]) for Lodash 4\n      rank === null\n    ) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport { slack } from './util.js';\n\nexport { feasibleTree };\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n        w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { PriorityQueue } from '../data/priority-queue.js';\n\nexport { dijkstra };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(\n    g,\n    String(source),\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      },\n  );\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new PriorityQueue();\n  var v, vEntry;\n\n  var updateNeighbors = function (edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\n        'dijkstra does not allow negative edge weights. ' +\n          'Bad edge: ' +\n          edge +\n          ' Weight: ' +\n          weight,\n      );\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function (v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n","import * as _ from 'lodash-es';\n\nexport { floydWarshall };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(\n    g,\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      },\n  );\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function (v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function (w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function (edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function (k) {\n    var rowK = results[k];\n    nodes.forEach(function (i) {\n      var rowI = results[i];\n      nodes.forEach(function (j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n","import baseProperty from './_baseProperty.js';\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nexport default asciiSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nexport default unicodeSize;\n","import * as _ from 'lodash-es';\n\nexport { topsort, CycleException };\n\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (Object.prototype.hasOwnProperty.call(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n","import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!Object.prototype.hasOwnProperty.call(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n","import * as _ from 'lodash-es';\nimport * as alg from '../../graphlib/alg/index.js';\nimport { simplify } from '../util.js';\nimport { feasibleTree } from './feasible-tree.js';\nimport { longestPath, slack } from './util.js';\n\nexport { networkSimplex };\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  longestPath(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = alg.postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!Object.prototype.hasOwnProperty.call(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return (\n      flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n      flip !== isDescendant(t, t.node(edge.w), tailLabel)\n    );\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = alg.preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","import { dfs } from './dfs.js';\n\nexport { postorder };\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, 'post');\n}\n","import { dfs } from './dfs.js';\n\nexport { preorder };\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, 'pre');\n}\n","import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, cleanup };\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, '_bt');\n  var bottom = util.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(\n    g.edges(),\n    function (acc, e) {\n      return acc + g.edge(e).weight;\n    },\n    0,\n  );\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n","import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import * as _ from 'lodash-es';\n\nexport { crossCount };\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(\n    southLayer,\n    _.map(southLayer, function (v, i) {\n      return i;\n    }),\n  );\n  var southEntries = _.flatten(\n    _.map(northLayer, function (v) {\n      return _.sortBy(\n        _.map(g.outEdges(v), function (e) {\n          return { pos: southPos[e.w], weight: g.edge(e).weight };\n        }),\n        'pos',\n      );\n    }),\n  );\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(\n    // @ts-expect-error\n    southEntries.forEach(function (entry) {\n      var index = entry.pos + firstIndex;\n      tree[index] += entry.weight;\n      var weightSum = 0;\n      // @ts-expect-error\n      while (index > 0) {\n        // @ts-expect-error\n        if (index % 2) {\n          weightSum += tree[index + 1];\n        }\n        // @ts-expect-error\n        index = (index - 1) >> 1;\n        tree[index] += entry.weight;\n      }\n      cc += entry.weight * weightSum;\n    }),\n  );\n\n  return cc;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\n\nexport { sort };\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return Object.prototype.hasOwnProperty.call(entry, 'barycenter');\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function (entry) {\n      return -entry.i;\n    }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","import * as _ from 'lodash-es';\nimport { barycenter } from './barycenter.js';\nimport { resolveConflicts } from './resolve-conflicts.js';\nimport { sort } from './sort.js';\n\nexport { sortSubgraph };\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (Object.prototype.hasOwnProperty.call(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br]);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!Object.prototype.hasOwnProperty.call(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter =\n        (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(\n      entry.vs.map(function (v) {\n        if (subgraphs[v]) {\n          return subgraphs[v].vs;\n        }\n        return v;\n      }),\n    );\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter =\n      (target.barycenter * target.weight + other.barycenter * other.weight) /\n      (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { barycenter };\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(\n        inV,\n        function (acc, e) {\n          var edge = g.edge(e),\n            nodeU = g.node(e.v);\n          return {\n            sum: acc.sum + edge.weight * nodeU.order,\n            weight: acc.weight + edge.weight,\n          };\n        },\n        { sum: 0, weight: 0 },\n      );\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight,\n      };\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { resolveConflicts };\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function (entry, i) {\n    var tmp = (mappedEntries[entry.v] = {\n      indegree: 0,\n      in: [],\n      out: [],\n      vs: [entry.v],\n      i: i,\n    });\n    if (!_.isUndefined(entry.barycenter)) {\n      // @ts-expect-error\n      tmp.barycenter = entry.barycenter;\n      // @ts-expect-error\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    // @ts-expect-error\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (\n        _.isUndefined(uEntry.barycenter) ||\n        _.isUndefined(vEntry.barycenter) ||\n        uEntry.barycenter >= vEntry.barycenter\n      ) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry['in'].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(\n    _.filter(entries, function (entry) {\n      return !entry.merged;\n    }),\n    function (entry) {\n      return _.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n    },\n  );\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\nimport { addSubgraphConstraints } from './add-subgraph-constraints.js';\nimport { buildLayerGraph } from './build-layer-graph.js';\nimport { crossCount } from './cross-count.js';\nimport { initOrder } from './init-order.js';\nimport { sortSubgraph } from './sort-subgraph.js';\n\nexport { order };\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges'),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\n\nexport { buildLayerGraph };\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true })\n      .setGraph({ root: root })\n      .setDefaultNodeLabel(function (v) {\n        return g.node(v);\n      });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank],\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId('_root'))));\n  return v;\n}\n","import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n","import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nexport {\n  positionX,\n  findType1Conflicts,\n  findType2Conflicts,\n  addConflict,\n  hasConflict,\n  verticalAlignment,\n  horizontalCompaction,\n  alignCoordinates,\n  findSmallestWidthAlignment,\n  balance,\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        // @ts-expect-error\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          // @ts-expect-error\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return !!conflicts[v] && Object.prototype.hasOwnProperty.call(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? 'borderLeft' : 'borderRight';\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach(['u', 'd'], function (vert) {\n    _.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === 'l' ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _.values(layering).reverse();\n    _.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === 'u' ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (Object.prototype.hasOwnProperty.call(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;\n          break;\n        case 'r':\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (Object.prototype.hasOwnProperty.call(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;\n          break;\n        case 'r':\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', () => {\n    var layoutGraph = time('  buildLayoutGraph', () => buildLayoutGraph(g));\n    time('  runLayout', () => runLayout(layoutGraph, time));\n    time('  updateInputGraph', () => updateInputGraph(g, layoutGraph));\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', () => makeSpaceForEdgeLabels(g));\n  time('    removeSelfEdges', () => removeSelfEdges(g));\n  time('    acyclic', () => acyclic.run(g));\n  time('    nestingGraph.run', () => nestingGraph.run(g));\n  time('    rank', () => rank(util.asNonCompoundGraph(g)));\n  time('    injectEdgeLabelProxies', () => injectEdgeLabelProxies(g));\n  time('    removeEmptyRanks', () => util.removeEmptyRanks(g));\n  time('    nestingGraph.cleanup', () => nestingGraph.cleanup(g));\n  time('    normalizeRanks', () => util.normalizeRanks(g));\n  time('    assignRankMinMax', () => assignRankMinMax(g));\n  time('    removeEdgeLabelProxies', () => removeEdgeLabelProxies(g));\n  time('    normalize.run', () => normalize.run(g));\n  time('    parentDummyChains', () => parentDummyChains(g));\n  time('    addBorderSegments', () => addBorderSegments(g));\n  time('    order', () => order(g));\n  time('    insertSelfEdges', () => insertSelfEdges(g));\n  time('    adjustCoordinateSystem', () => coordinateSystem.adjust(g));\n  time('    position', () => position(g));\n  time('    positionSelfEdges', () => positionSelfEdges(g));\n  time('    removeBorderNodes', () => removeBorderNodes(g));\n  time('    normalize.undo', () => normalize.undo(g));\n  time('    fixupEdgeLabelCoords', () => fixupEdgeLabelCoords(g));\n  time('    undoCoordinateSystem', () => coordinateSystem.undo(g));\n  time('    translateGraph', () => translateGraph(g));\n  time('    assignNodeIntersects', () => assignNodeIntersects(g));\n  time('    reversePoints', () => reversePointsForReversedEdges(g));\n  time('    acyclic.undo', () => acyclic.undo(g));\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (Object.prototype.hasOwnProperty.call(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs)),\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs)),\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (Object.prototype.hasOwnProperty.call(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (Object.prototype.hasOwnProperty.call(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se',\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n","/**\n * TypeScript type imports:\n *\n * @import { Graph } from '../graphlib/graph.js';\n */\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, undo };\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\n/**\n * @param {Graph} g\n */\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  /**\n   * @typedef {Object} Attrs\n   * @property {number} width\n   * @property {number} height\n   * @property {ReturnType<Graph[\"node\"]>} edgeLabel\n   * @property {any} edgeObj\n   * @property {ReturnType<Graph[\"node\"]>[\"rank\"]} rank\n   * @property {string} [dummy]\n   * @property {ReturnType<Graph[\"node\"]>[\"labelpos\"]} [labelpos]\n   */\n\n  /** @type {Attrs | undefined} */\n  var attrs = undefined;\n  var dummy, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank,\n    };\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = 'edge-label';\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { parentDummyChains };\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (\n          pathIdx < path.length - 1 &&\n          g.node((pathV = path[pathIdx + 1])).minRank <= node.rank\n        ) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","import * as _ from 'lodash-es';\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nexport function initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    }),\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\nimport { positionX } from './bk.js';\n\nexport { position };\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forOwn(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(\n      _.map(layer, function (v) {\n        return g.node(v).height;\n      }),\n    );\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76]}