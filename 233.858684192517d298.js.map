{"version":3,"file":"233.858684192517d298.js","mappings":"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","names":["NEWLINE_REGEXP","regexpParser","RegExpParser","visitor","TerminalRegExpVisitor","BaseRegExpVisitor","constructor","super","arguments","this","isStarting","endRegexpStack","multiline","endRegex","join","reset","regex","startRegexp","visitGroup","node","quantifier","visitCharacter","char","String","fromCharCode","value","escapedChar","escapeRegExp","push","visitSet","set","substring","loc","begin","end","RegExp","match","visitChildren","type","isMultilineComment","regexp","toString","visit","pattern","whitespaceCharacters","split","isWhitespace","some","ws","test","replace","getCaseInsensitivePattern","keyword","Array","prototype","map","call","letter","toLowerCase","toUpperCase","partialMatches","input","partial","partialRegExp","re","source","i","process","tmp","result","appendRaw","nbChars","substr","appendOptional","length","unicode","indexOf","lastIndex","exec","flags","GitGraphTokenBuilder","AbstractMermaidTokenBuilder","static","_staticBlock","_setFunctionName","__name","GitGraphModule","parser","TokenBuilder","ValueConverter","CommonValueConverter","createGitGraphServices","context","EmptyFileSystem","shared","inject","createDefaultSharedCoreModule","MermaidGeneratedSharedModule","GitGraph","createDefaultCoreModule","GitGraphGeneratedModule","ServiceRegistry","register","linkContentToContainer","name","Object","entries","startsWith","isArray","forEach","item","index","isAstNode","$container","$containerProperty","$containerIndex","getContainerOfType","typePredicate","getDocument","findRootNode","$document","Error","streamContents","options","range","StreamImpl","keys","keyIndex","arrayIndex","state","property","isAstNodeInRange","done","element","DONE_RESULT","streamAllContents","root","TreeStreamImpl","streamAst","includeRoot","astNode","_a","nodeRange","$cstNode","inRange","streamReferences","isReference","reference","container","assignMandatoryProperties","reflection","typeMetaData","getTypeMetaData","$type","genericNode","properties","undefined","defaultValue","copyDefaultValue","propertyType","__WEBPACK_DEFAULT_EXPORT__","flatten","array","baseFlatten","_ral","RAL","install","ral","exports","last","flatMap","collection","iteratee","streamCst","isCompositeCstNode","content","isChildNode","child","parent","tokenToRange","token","start","character","startColumn","line","startLine","endColumn","endLine","toDocumentSegment","offset","RangeComparison","Before","After","OverlapFront","OverlapBack","Inside","Outside","to","compareRange","startInside","endInside","DefaultNameRegexp","findCommentNode","cstNode","commentNames","previous","getPreviousNode","hidden","isCommentNode","isRootCstNode","endIndex","findIndex","e","isLeafCstNode","includes","tokenType","PieTokenBuilder","PieValueConverter","AbstractMermaidValueConverter","runCustomConverter","rule","_cstNode","trim","_staticBlock2","PieModule","createPieServices","Pie","PieGeneratedModule","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","reduce","_merge","isProxy","Symbol","module","injector","proxy","Proxy","deleteProperty","get","obj","prop","_resolve","getOwnPropertyDescriptor","has","_","ownKeys","getOwnPropertyNames","__requested__","cause","error","target","key","value2","value1","min","baseExtremum","identity","baseLt","objectProto","hasOwnProperty","defaults","baseRest","object","sources","guard","isIterateeCall","props","keysIn","propsIndex","propsLength","eq","parsers","initializers","info","_asyncToGenerator","createInfoServices","createInfoServices2","__webpack_require__","then","bind","Info","LangiumParser","packet","createPacketServices","createPacketServices2","Packet","pie","createPieServices2","architecture","createArchitectureServices","createArchitectureServices2","Architecture","gitGraph","createGitGraphServices2","radar","createRadarServices","createRadarServices2","Radar","treemap","createTreemapServices","createTreemapServices2","Treemap","parse","_x","_x2","_parse","apply","diagramType","text","initializer","lexerErrors","parserErrors","MermaidParseError","err","message","ral_1","require","Event","_disposable","dispose","None","CallbackList","add","callback","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","len","splice","invoke","args","ret","callbacks","slice","contexts","default","console","isEmpty","Emitter","_options","event","_event","listener","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","fire","TreemapTokenBuilder","classDefRegex","TreemapValueConverter","parseFloat","className","styleText","registerValidationChecks","services","validator","validation","TreemapValidator","registry","ValidationRegistry","checks","checkSingleRoot","doc","accept","rootNodeIndentation","row","TreemapRows","indent","parseInt","_staticBlock3","TreemapModule","TreemapGeneratedModule","LIB","t","TypeError","JSON","stringify","r","n","o","s","h","charCodeAt","a","lastIndexOf","resolve","cwd","normalize","isAbsolute","relative","c","f","u","l","g","_makeLong","dirname","basename","extname","format","base","ext","dir","sep","delimiter","win32","posix","d","defineProperty","enumerable","toStringTag","URI","Utils","P","platform","navigator","userAgent","scheme","authority","path","query","fragment","isUri","fsPath","with","m","C","file","from","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","charAt","p","v","decodeURIComponent","b","A","w","joinPath","resolvePath","InfoTokenBuilder","InfoModule","InfoGeneratedModule","nativeMax","Math","max","lodash_es_find","createFind","findIndexFunc","predicate","fromIndex","iterable","isArrayLike","baseIteratee","toInteger","baseFindIndex","cc","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","wordCharCodes","concat","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","idx","groupIdx","saveState","restoreState","newState","consumeChar","disjunction","global","ignoreCase","multiLine","sticky","isRegExpFlag","popChar","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","isBacktracking","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","parseHexDigits","classPatternCharacterAtom","isClassAtom","classAtom","isRangeDash","classEscape","capturing","groupAst","number","nextChar","howMuch","isAtom","prevState","howMany","hexString","hexChar","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitGroupBackReference","visitQuantifier","AbstractRule","AbstractType","Condition","TypeDefinition","ValueLiteral","AbstractElement","isAbstractElement","isInstance","ArrayLiteral","ArrayType","BooleanLiteral","isBooleanLiteral","Conjunction","isConjunction","Disjunction","isDisjunction","Grammar","GrammarImport","InferredType","isInferredType","Interface","isInterface","NamedArgument","Negation","isNegation","NumberLiteral","Parameter","ParameterReference","isParameterReference","ParserRule","isParserRule","ReferenceType","ReturnType","isReturnType","SimpleType","isSimpleType","StringLiteral","TerminalRule","isTerminalRule","Type","isType","TypeAttribute","UnionType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","isCharacterRange","CrossReference","isCrossReference","EndOfFile","isEndOfFile","Group","isGroup","Keyword","isKeyword","NegatedToken","isNegatedToken","RegexToken","isRegexToken","RuleCall","isRuleCall","TerminalAlternatives","isTerminalAlternatives","TerminalGroup","isTerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","isUntilToken","Wildcard","isWildcard","LangiumGrammarAstReflection","AbstractAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","comparator","current","computed","isSymbol","Is","events_1","CancellationToken","freeze","isCancellationRequested","onCancellationRequested","Cancelled","is","candidate","boolean","shortcutEvent","handle","timer","setTimeout","MutableToken","_isCancelled","cancel","_emitter","CancellationTokenSource","_token","DefaultTokenBuilder","diagnostics","buildTokens","grammar","reachableRules","stream","getAllReachableRules","terminalTokens","buildTerminalTokens","tokens","buildKeywordTokens","terminalToken","PATTERN","unshift","flushLexingReport","popDiagnostics","rules","filter","terminal","buildTerminalToken","toArray","terminalRegex","requiresCustomPattern","regexPatternFunction","LINE_BREAKS","GROUP","Lexer","SKIPPED","stickyRegex","distinct","sort","buildKeywordToken","caseInsensitive","keywordPattern","buildKeywordPattern","LONGER_ALT","findLongerAlt","longerAlts","allTerminals","ruleNames","Set","entryRule","getEntryRule","find","ast","entry","topMostRules","getHiddenRules","ruleDfs","visitedSet","refRule","ref","getCrossReferenceTerminal","crossRef","nameAssigment","findNameAssignment","isCommentTerminal","terminalRule","findNodesForProperty","findNodesForPropertyInternal","findNodeForProperty","nodes","first","nodeFeature","grammarSource","feature","findNodeForKeyword","findNodesForKeywordInternal","treeIterator","iterator","keywordNodes","next","childNode","prune","findAssignment","assignment","startNode","assertUnreachable","findNameAssignmentInternal","Map","cache","go","refType","childAssignment","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","definition","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","actionType","getActionType","action","getRuleType","_b","_c","abstractElementToRegex","flagText","WILDCARD","terminalAlternativesToRegex","alternatives","withCardinality","elements","cardinality","lookahead","terminalGroupToRegex","characterRangeToRegex","right","keywordToRegex","left","wrap","negateTokenToRegex","negate","untilTokenToRegex","until","lastSlash","regexFlags","toFinite","remainder","reWhitespace","reTrimStart","_baseTrim","baseTrim","string","trimmedEndIndex","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","INFINITY","lodash_es_toFinite","toNumber","NaN","isObject","other","valueOf","isBinary","PacketTokenBuilder","PacketModule","PacketGeneratedModule","startFn","nextFn","count","toSet","toMap","keyFn","valueFn","entryStream","firstDone","separator","addSeparator","searchElement","every","callbackfn","nonNullable","initialValue","previousValue","reduceRight","recursiveReduce","mapped","isIterable","flat","depth","head","tail","skipCount","limit","maxSize","size","by","internalState","exclude","otherKeySet","ownKey","EMPTY_STREAM","collections","collIndex","arrIndex","children","iterators","pruned","pop","Reduction","sum","product","Number","func","stringArray","elem","RadarTokenBuilder","RadarModule","RadarGeneratedModule","_baseSet","baseSet","customizer","castPath","nested","toKey","newValue","objValue","isIndex","assignValue","_basePickBy","basePickBy","paths","baseGet","arrayMap","baseMap","buildATNKey","occurrence","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","atn","production","Terminal","tokenRef","terminalType","NonTerminal","ruleRef","currentRule","nonTerminal","referencedRule","ruleToStartState","addTransition","Alternation","alternation","defineDecisionState","makeAlts","Option","option","optional","epsilon","decisionMap","block","Repetition","repetition","starState","star","RepetitionWithSeparator","repetitionSep","RepetitionMandatory","repetitionMandatory","plusState","plus","RepetitionMandatoryWithSeparator","repetitionMandatorySep","handles","makeBlock","altsLength","transition","transitions","isRuleTransition","removeState","blkStart","blkEnd","loop","loopback","loopEnd","decisionStates","decision","alt","getProdType","buildRuleHandle","stop","ruleToStopState","assign","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","states","DFA_ERROR","ATNConfigSet","configs","finalize","config","getATNConfigKey","k","stack","lodash_es_uniqBy","uniqBy","baseUniq","createDFACache","startState","predicateSet","existing","atnStartState","PredicateSet","predicates","EMPTY_PREDICATES","LLStarLookaheadStrategy","LLkLookaheadStrategy","logging","log","initialize","createATN","createRuleStartAndStopATNStates","ruleLength","ruleBlock","dfas","initATNSimulator","decisionLength","decisionToDFA","validateAmbiguousAlternationAlternatives","validateEmptyOrAlternatives","buildLookaheadForAlternation","prodOccurrence","hasPredicates","dynamicTokensEnabled","decisionIndex","partialAlts","getLookaheadPaths","maxLookahead","prodType","currAlt","isLL1Sequence","choiceToAlt","currTokType","tokenTypeIdx","categoryMatches","currExtendingType","orAlts","nextToken","LA","prediction","gate","GATE","adaptivePredict","buildLookaheadForOptional","singleTokensTypes","expectedTokenUniqueKey","sequences","allowEmpty","fullSet","altSet","tokType","indices","dfaCaches","dfa","closure","computeStartState","atnState","numberOfTransitions","addDFAState","newDFAState","performLookahead","s0","previousD","getExistingTargetState","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","reach","computeReachSet","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","hasConflictTerminatingPrediction","allConfigsInRuleStopStates","altSets","getConflictingAltSets","configToAlts","hasConflictingAltSet","values","hasStateAssociatedWithOneAlt","reportLookaheadAmbiguity","ambiguityIndices","prefixPath","buildAmbiguityError","pathMsg","currtok","tokenLabel","currMessage","getProductionDslName","prod","topLevelRule","nextTransitions","actualToken","possibleTokenTypes","tokenPath","edges","tokenMatcher","mapKey","atnStack","getEpsilonTarget","DocumentUri","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRange","DiagnosticRelatedInformation","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","InsertReplaceEdit","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlight","SymbolInformation","WorkspaceSymbol","DocumentSymbol","MIN_VALUE","MAX_VALUE","create","objectLiteral","one","two","three","four","uri","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","label","textEdit","additionalTextEdits","typedArray","startCharacter","endCharacter","kind","collapsedText","defined","location","href","severity","code","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","description","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","change","version","languageId","PlainText","Markdown","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","containerName","selectionRange","deprecated","tags","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","CodeActionTriggerKind","Invoked","Automatic","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","mergeSort","compare","leftIdx","rightIdx","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","startOffset","endOffset","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","floor","lineOffset","check","CstNodeBuilder","nodeStack","rootNode","buildRootNode","RootCstNodeImpl","buildCompositeNode","compositeNode","CompositeCstNodeImpl","buildLeafNode","leafNode","LeafCstNodeImpl","image","removeNode","addHiddenNodes","added","construct","AbstractCstNode","_astNode","fullText","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","setPrototypeOf","addParents","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","_unorderedGroups","allRules","lexer","LanguageMetaData","mode","wrapper","ChevrotainWrapper","ParserConfig","skipValidations","errorMessageProvider","ParserErrorMessageProvider","choices","wrapOr","wrapOption","many","wrapMany","atLeastOne","wrapAtLeastOne","getRule","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","RULE_STACK","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","AstReflection","impl","computeRuleType","ruleMethod","DEFINE_RULE","startImplementation","mainRule","explicit","lexerResult","tokenize","clear","errors","lexerReport","report","implementation","createNode","extractHiddenTokens","hiddenTokens","consume","wrapConsume","isValidToken","isCrossRef","getAssignment","convertedValue","convert","operator","isInsertedInRecovery","isNaN","subrule","subruleResult","wrapSubrule","performSubruleAssignment","newItem","assignWithoutOverride","buildReference","existingValue","targetCstNode","definitionErrors","AbstractParserErrorMessageProvider","buildMismatchTokenMessage","defaultParserErrorProvider","buildNotAllInputParsedMessage","buildNoViableAltMessage","buildEarlyExitMessage","LangiumParserErrorMessageProvider","expected","actual","LABEL","firstRedundant","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","currIdx","before","after","defaultConfig","recoveryEnabled","nodeLocationTracking","EmbeddedActionsParser","useDefaultLookahead","lookaheadStrategy","RECORDING_PHASE","RULE","performSelfAnalysis","ARGS","or","createParser","buildRules","parserContext","reachable","parserRules","ctx","buildElement","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","buildRuleCall","ruleCall","buildRuleCallPredicate","namedArgs","buildPredicate","ruleArgs","getToken","ErrorWithLocation","$refText","buildAlternatives","methods","predicatedMethod","ALT","getGuardCondition","buildUnorderedGroup","orIdx","idFunc","lParser","wrapped","groupState","trackedAlternatives","delete","buildGroup","EOF","condition","parameter","true","guardCondition","assignTerminal","EMPTY_ALT","DEF","getRuleName","ruleName","lastTick","OperationCancelled","isOperationCancelled","interruptAndCheck","_interruptAndCheck","performance","now","delayNextTick","Promise","setImmediate","Deferred","promise","reject","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","isAtLineStart","textOffset","getWellformedEdit","spans","DocumentState","Changed","Parsed","IndexedContent","ComputedScopes","Linked","IndexedReferences","Validated","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","workspace","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","_this","cancellationToken","readFile","createAsync","fromTextDocument","fromString","fromModel","model","$model","parseResult","createLangiumDocument","cancelToken","_this2","parseAsync","textDocumentGetter","createTextDocumentGetter","_this3","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","LangiumDocumentFactory","all","addDocument","uriString","getOrCreateDocument","_this4","createDocument","hasDocument","invalidateDocument","langiumDoc","unlink","precomputedScopes","deleteDocument","ref_resolving","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","isLinkingError","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","errorMessage","getScope","getElement","refNode","refText","$refNode","isAstNodeDescription","refData","getLinkedNode","descr","getAstNodePath","$nodeDescription","nodeDescription","getAstNode","targetDescription","warn","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","UriUtils","equals","toPath","fromParts","toParts","repeat","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","nodeElem","nameNode","findDeclarationNode","findReferences","targetNode","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","sourceUri","sourcePath","targetPath","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","_x3","parentNode","exportNode","createDescription","computeLocalScopes","_x4","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","throwIfDisposed","SimpleCache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onBuildPhase","onUpdate","_changed","deleted","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","serializeOptions","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserialize","deserializeOptions","linkNode","sourceText","textRegions","comments","uriConverter","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","propertyAssignments","containerProperty","containerIndex","propertyName","reviveReference","mutable","getRefNode","fragmentIndex","DefaultServiceRegistry","fileExtensionMap","languageIdMap","fileExtensions","singleton","hasServices","diagnosticData","ValidationCategory","entriesBefore","entriesAfter","checksRecord","thisObj","category","wrapValidationException","addEntry","handleException","functionality","messageContext","messageDetails","getAllSubTypes","getChecks","categories","registerBeforeDocument","checkBefore","wrapPreparationException","registerAfterDocument","checkAfter","_ref2","_x5","_x6","_x7","checksBefore","checksAfter","DefaultDocumentValidator","validationRegistry","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","DocumentValidator","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","lexerDiagnostics","lexerDiagnostic","diagnostic","toDiagnosticSeverity","column","toDiagnosticData","getSource","parserError","previousToken","linkingError","toDiagnostic","containerType","validationItems","acceptor","validateAstBefore","validateAstNodes","validateAstAfter","_x8","_x9","_x0","_x1","_x10","_x11","_this5","getDiagnosticRange","LexingWarning","LexingInfo","LexingHint","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","Disposable","DefaultConfigurationProvider","_ready","settings","workspaceConfig","onConfigurationSectionUpdateEmitter","ready","params","capabilities","configuration","initialized","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","onConfigurationSectionUpdate","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","documentPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deletedUri","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","sortDocuments","hasTextDocument","changedUris","isAffected","prepareBuild","runCancelable","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","validate","targetState","filtered","notifyDocumentPhase","targetStateDocs","notifyBuildPhase","onDocumentPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","_this6","listenersCopy","_this7","getBuildOptions","_this8","validationSetting","newCategories","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","workspaceFolders","folders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexerErrorMessageProvider","buildUnexpectedCharactersMessage","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","DEFAULT_TOKENIZE_OPTIONS","DefaultLexer","LexerErrorMessageProvider","tokenBuilder","tokenTypes","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","ChevrotainLexer","positionTracking","chevrotainResult","groups","isIMultiModeLexerDefinition","modes","res","tokenVocabulary","isTokenTypeArray","getLines","tagRegex","inlineTagRegex","buildInlineTokens","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","skipWhitespace","lastCharacter","parseJSDocElement","parseJSDocTag","parseJSDocText","appendEmptyLine","JSDocLineImpl","inlines","firstToken","lastToken","lines","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOptions","normalizeOption","escaped","JSDocCommentImpl","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","renderInlineTag","tag","display","displayStart","renderLink","renderLinkDefault","marker","JSDocDocumentationProvider","getDocumentation","isJSDoc","normalizedOptions","firstRegex","lastRegex","parseJSDoc","opts","currentLine","currentCharacter","tagMatch","fullMatch","rest","inlineTagMatches","matchAll","parseJSDocComment","startPosition","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","multilineCommentRules","DefaultAsyncParser","syncParser","_cancelToken","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","startCancelableOperation","enqueue","read","queue","deferred","performNextOperation","shift","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateLexerReport","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","cst","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","DocumentationProvider","createGrammarConfig","nameRegexp","createLangiumParser","prepareLangiumParser","CompletionParser","createCompletionParser","DefaultValueConverter","References","serializer","Hydrator","JsonSerializer","WorkspaceManager","ConfigurationProvider","runConverter","convertInt","convertString","convertID","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","Date","minimalGrammarModule","minimalSharedGrammarModule","loadGrammarFromJson","json","createMinimalGrammarServices","__defProp","configurable","Statement","isArchitecture","Axis","Branch","isBranch","Checkout","CherryPicking","ClassDefStatement","Commit","isCommit","Curve","Edge","Entry","isGitGraph","isInfo","Item","Junction","Merge","isMerge","isPacket","PacketBlock","isPacketBlock","isPie","PieSection","isPieSection","Service","isTreemap","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","loadedRadarGrammar","loadedTreemapGrammar","TreemapRow","Direction","Leaf","Section","MermaidAstReflection","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","RadarGrammar","TreemapGrammar","InfoLanguageMetaData","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","RadarLanguageMetaData","TreemapLanguageMetaData","ArchitectureGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","runCommonConverter","_rule","_input","keywords","_staticBlock4","_staticBlock5","_baseHas","baseHas","lodash_es_has","hasPath","EmptyFileSystemProvider","subtypes","allSubtypes","allTypes","types","possibleSubType","baseEach","toFastProperties","toBecomeFast","FakeConstructor","fakeInstance","fakeAccess","bar","_baseSlice","baseSlice","lodash_es_drop","drop","lodash_es_assign","createAssigner","isPrototype","copyObject","lodash_es_pickBy","pickBy","getAllKeysIn","nodeIsRegExp","nodeUtil","isRegExp","lodash_es_isRegExp","baseUnary","baseIsRegExp","isObjectLike","baseGetTag","hasTokenLabel","isString","AbstractProduction","_definition","Rule","orgText","Alternative","ignoreAmbiguities","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","serializedTerminal","terminalLabel","GAstVisitor","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","_baseSome","baseSome","lodash_es_some","arraySome","lodash_es_includes","baseIndexOf","_arrayEvery","arrayEvery","_baseEvery","baseEvery","lodash_es_every","isOptionalProd","alreadyVisited","subProd","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","prodWrapper","repSepProd","lodash_es_uniq","uniq","firstForTerminal","isSequenceProd","firstForSequence","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","isBranchingProd","firstForBranching","allAlternativesFirsts","innerProd","ResyncFollowsWalker","topProd","follows","startWalking","followName","buildBetweenProdsFollowPrefix","inner","occurenceInParent","fullRest","t_in_topProd_follows","lodash_es_reject","arrayFilter","baseFilter","lodash_es_indexOf","lodash_es_difference","difference","isArrayLikeObject","baseDifference","arrayIncludes","isCommon","valuesLength","arrayIncludesWith","cacheHas","SetCache","outer","valuesIndex","lodash_es_compact","compact","resIndex","lodash_es_head","PRINT_ERROR","msg","PRINT_WARNING","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","firstCharOptimizedIndices","msgSuffix","addOptimizedIdxToResult","rangeCode","minOptimizationVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","handleIgnoreCase","upperChar","lowerChar","findCode","setNode","targetCharCodes","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","end_of_input","start_of_input","addStartOfInput","addStickyFlag","isCustomPattern","isFunction","isShortPattern","LineTerminatorOptimizedTester","checkLineBreaksIssues","lineTerminatorCharCodes","issue","LexerDefinitionErrorType","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","buildLineBreakIssueMessage","details","getCharCodes","charsOrCodes","numOrString","addToMapOfArrays","charCodeToOptimizedIdxMap","charCode","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","expandCategories","clone","searching","CATEGORIES","assignTokenDefaultProps","hasShortKeyProperty","hasCategoriesProperty","hasExtendingTokensTypesProperty","hasExtendingTokensTypesMapProperty","assignCategoriesMapProp","singleAssignCategoriesToksMap","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","MISSING_PATTERN","INVALID_PATTERN","EOI_ANCHOR_FOUND","UNSUPPORTED_FLAGS_FOUND","DUPLICATE_PATTERNS_FOUND","INVALID_GROUP_TYPE_FOUND","PUSH_MODE_DOES_NOT_EXIST","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","SOI_ANCHOR_FOUND","EMPTY_MATCH_PATTERN","NO_LINE_BREAKS_FLAGS","UNREACHABLE_PATTERN","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","lineTerminatorsPattern","lineTerminatorCharacters","safeMode","traceInitPerf","lexerDefinition","lexerDefinitionErrors","lexerDefinitionWarning","patternIdxToConfig","charCodeToPatternIdxToConfig","emptyGroups","trackStartLines","trackEndLines","hasCustom","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","traceInitMaxIdent","traceMethod","traceInitVal","actualDefinition","hasOnlySingleMode","defaultMode","performRuntimeChecks","currModeValue","currModeName","isUndefined","longerAlt","currLongerAlt","performWarningRuntimeChecks","trackLines","warnings","hasAnyLineBreak","allTokenTypes","concreteTokenTypes","currType","NA","terminatorCharCodes","currIssue","warningDescriptor","allModeNames","currModDef","currModName","validatePatterns","validModesNames","missingResult","findMissingPatterns","tokenTypesWithMissingPattern","valid","invalidResult","findInvalidPatterns","tokenTypesWithInvalidPattern","validTokenTypes","validateRegExpPattern","withRegExpPatterns","findEndOfInputAnchor","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","findStartOfInputAnchor","StartAnchorFinder","startAnchorVisitor","findUnsupportedFlags","invalidFlags","findDuplicatePatterns","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","findEmptyMatchRegExps","matchesEmptyString","findInvalidGroupType","invalidTypes","clazz","findModesThatDoNotExist","validModes","invalidModes","PUSH_MODE","findUnreachablePatterns","canBeTested","str","noMetaChar","testIdx","testTokenType","regExpArray","currAnalyzeResult","analyzeTokenTypes","tracer","useSticky","debug","onlyRelevantTypes","initCharCodeToOptimizedIndexMap","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","currPattern","regExpSource","escapedRegExpString","wrappedRegExp","groupName","longerAltType","acc","x","canLineTerminator","isCustom","short","canBeOptimized","optimizedIdx","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","allErrMessagesString","chopInput","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","clearRegExpParserCache","initialMode","tokenizeInternal","j","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","matchedTokensIndex","guessedNumberOfTokens","matchedTokens","cloneEmptyGroups","clonedResult","groupKeys","currKey","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","newMode","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","oldColumn","tokenVector","tokenToAdd","POP_MODE","createToken","createTokenInternal","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","getExtraProductionArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","currTok","buildAlternationAmbiguityError","buildEmptyRepetitionError","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","pathNames","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","_arrayAggregator","arrayAggregator","setter","accumulator","_baseAggregator","baseAggregator","lodash_es_groupBy","createAggregator","baseAssignValue","lodash_es_dropRight","dropRight","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","_first","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","remainingPathWith","nextDef","newDef","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","numOfAlts","areAllOneTokenLookahead","currNumOfPaths","currPredicate","currPathLength","singleTokenAlts","buildSingleAlternativeLookaheadFunction","numOfPaths","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","pathToHashKeys","longerKeys","currShorterKey","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","AlternativeGAST","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","identifyProductionForDuplicates","OccurrenceValidationCollector","allProductions","manySep","atLeastOneSep","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","currRefRule","firstProd","currSubDef","OrCollector","alternations","RepetitionCollector","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","captureStackTrace","MismatchedTokenException","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","currRuleName","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","ruleIdx","DEFAULT_PARSER_CONFIG","leftRecursionErrors","emptyAltErrors","ambiguousAltsErrors","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","validateEmptyOrAlternative","orCollector","currOr","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","globalMaxLookahead","ors","altsAmbiguityErrors","checkAlternativesAmbiguities","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","altsPrefixAmbiguityErrors","checkPrefixAlternativesAmbiguities","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","isStrictPrefixOfPath","prefix","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","topLevelRules","collectorVisitor","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadFuncForOr","laFuncBuilder","buildLookaheadFuncForOptionalProd","lookaheadBuilder","DslMethodsCollectorVisitor","dslMethods","repetitionWithSeparator","repetitionMandatoryWithSeparator","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","setNodeLocationFull","defineNameProp","nameValue","writable","defaultVisit","param","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","CstVisitorDefinitionError","REDUNDANT_METHOD","MISSING_METHOD","RECORDING_NULL_OBJECT","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","peek","recordingProdStack","grammarAction","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","outputCst","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","INVALID_RULE_NAME","DUPLICATE_RULE_NAME","INVALID_RULE_OVERRIDE","DUPLICATE_PRODUCTIONS","CONFLICT_TOKENS_RULES_NAMESPACE","INVALID_TOKEN_NAME","TOO_MANY_ALTS","CUSTOM_LOOKAHEAD_VALIDATION","Parser","parserInstance","defErrorsMsgs","selfAnalysisDone","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","resolveGrammar","actualOptions","topRulesTable","topLevels","refResolver","orgResolveGrammar","validationErrors","validateGrammar","duplicateErrors","validateDuplicateProductions","productionGroups","groupBy","duplicates","currGroup","currDuplicates","defError","termsNamespaceConflictErrors","checkTerminalAndNoneTerminalsNameSpace","tokenNames","currToken","tooManyAltsErrors","curRule","validateTooManyAlts","duplicateRulesError","validateRuleDoesNotAlreadyExist","orgValidateGrammar","tokensMap","lookaheadValidationErrors","validateLookahead","lookaheadValidationErrorMessages","allFollows","computeAllProdsFollows","topProductions","reSyncFollows","currRefsFollow","resyncFollows","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","applyMixins","derivedCtor","baseCtors","baseCtor","baseProto","propName","basePropDescriptor","Recoverable","getTokenToInsert","tokToInsert","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","pathOccurrenceStack","currShortName","LooksAhead","lookAheadFuncsCache","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","TreeBuilder","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","fullRuleName","ruleCstNode","prevToken","consumedToken","rootCst","addTerminalToCst","tokenTypeName","ruleCstResult","preCstNode","addNoneTerminalToCst","ruleResult","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","createBaseSemanticVisitorConstructor","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","validateMissingCstMethods","missingRuleNames","methodName","errorMessages","currDefError","_RULE_NAMES","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","createBaseVisitorConstructorWithDefaults","baseConstructor","withDefaultsProto","LexerAdapter","tokVector","tokVectorLength","newInput","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","RecognizerEngine","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","noTokenCategoriesUsed","tokenConstructor","defineRule","shortName","BITS_FOR_METHOD_TYPE","invokeRuleWithTry","ruleInvocationStateUpdate","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","RecognizerApi","ACTION","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","ruleImplementation","OVERRIDE_RULE","ruleErrors","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","serializeGrammar","topRules","ErrorHandler","_errors","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","ContentAssist","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","GastRecorder","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","newNoneTerminal","PerformanceTracer","userTraceInitPerf","traceIsNumber","configClone","baseClone","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/langium/lib/utils/regexp-utils.js","./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs","./node_modules/langium/lib/utils/ast-utils.js","./node_modules/lodash-es/flatten.js","./node_modules/vscode-jsonrpc/lib/common/ral.js","./node_modules/lodash-es/last.js","./node_modules/lodash-es/flatMap.js","./node_modules/langium/lib/utils/cst-utils.js","./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs","./node_modules/langium/lib/dependency-injection.js","./node_modules/lodash-es/min.js","./node_modules/lodash-es/defaults.js","./node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","./node_modules/vscode-jsonrpc/lib/common/events.js","./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs","./node_modules/vscode-uri/lib/esm/index.mjs","./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs","./node_modules/lodash-es/findIndex.js","./node_modules/lodash-es/find.js","./node_modules/lodash-es/_createFind.js","./node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","./node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","./node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","./node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","./node_modules/langium/lib/languages/generated/ast.js","./node_modules/lodash-es/_baseExtremum.js","./node_modules/vscode-jsonrpc/lib/common/cancellation.js","./node_modules/langium/lib/parser/token-builder.js","./node_modules/langium/lib/utils/grammar-utils.js","./node_modules/lodash-es/toInteger.js","./node_modules/lodash-es/_trimmedEndIndex.js","./node_modules/lodash-es/_baseTrim.js","./node_modules/lodash-es/toNumber.js","./node_modules/lodash-es/toFinite.js","./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs","./node_modules/langium/lib/utils/stream.js","./node_modules/vscode-jsonrpc/lib/common/is.js","./node_modules/lodash-es/_baseLt.js","./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs","./node_modules/lodash-es/_baseSet.js","./node_modules/lodash-es/_basePickBy.js","./node_modules/lodash-es/map.js","./node_modules/chevrotain-allstar/lib/atn.js","./node_modules/chevrotain-allstar/lib/dfa.js","./node_modules/lodash-es/uniqBy.js","./node_modules/chevrotain-allstar/lib/all-star-lookahead.js","./node_modules/vscode-languageserver-types/lib/esm/main.js","./node_modules/langium/lib/parser/cst-node-builder.js","./node_modules/langium/lib/parser/langium-parser.js","./node_modules/langium/lib/parser/parser-builder-base.js","./node_modules/langium/lib/utils/promise-utils.js","./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","./node_modules/langium/lib/workspace/documents.js","./node_modules/langium/lib/references/linker.js","./node_modules/langium/lib/references/name-provider.js","./node_modules/langium/lib/utils/uri-utils.js","./node_modules/langium/lib/references/references.js","./node_modules/langium/lib/utils/collections.js","./node_modules/langium/lib/references/scope-computation.js","./node_modules/langium/lib/references/scope.js","./node_modules/langium/lib/utils/caching.js","./node_modules/langium/lib/references/scope-provider.js","./node_modules/langium/lib/serializer/json-serializer.js","./node_modules/langium/lib/service-registry.js","./node_modules/langium/lib/validation/validation-registry.js","./node_modules/langium/lib/validation/document-validator.js","./node_modules/langium/lib/workspace/ast-descriptions.js","./node_modules/langium/lib/workspace/ast-node-locator.js","./node_modules/langium/lib/utils/disposable.js","./node_modules/langium/lib/workspace/configuration.js","./node_modules/langium/lib/workspace/document-builder.js","./node_modules/langium/lib/workspace/index-manager.js","./node_modules/langium/lib/workspace/workspace-manager.js","./node_modules/langium/lib/parser/lexer.js","./node_modules/langium/lib/documentation/jsdoc.js","./node_modules/langium/lib/documentation/documentation-provider.js","./node_modules/langium/lib/documentation/comment-provider.js","./node_modules/langium/lib/parser/async-parser.js","./node_modules/langium/lib/workspace/workspace-lock.js","./node_modules/langium/lib/serializer/hydrator.js","./node_modules/langium/lib/default-module.js","./node_modules/langium/lib/languages/grammar-config.js","./node_modules/langium/lib/parser/langium-parser-builder.js","./node_modules/langium/lib/parser/completion-parser-builder.js","./node_modules/langium/lib/parser/value-converter.js","./node_modules/langium/lib/utils/grammar-loader.js","./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs","./node_modules/lodash-es/_baseHas.js","./node_modules/lodash-es/has.js","./node_modules/langium/lib/workspace/file-system-provider.js","./node_modules/langium/lib/syntax-tree.js","./node_modules/lodash-es/_baseMap.js","./node_modules/langium/lib/utils/errors.js","./node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","./node_modules/lodash-es/_baseSlice.js","./node_modules/lodash-es/drop.js","./node_modules/lodash-es/assign.js","./node_modules/lodash-es/pickBy.js","./node_modules/lodash-es/isRegExp.js","./node_modules/lodash-es/_baseIsRegExp.js","./node_modules/@chevrotain/gast/lib/src/model.js","./node_modules/@chevrotain/gast/lib/src/visitor.js","./node_modules/lodash-es/_baseSome.js","./node_modules/lodash-es/some.js","./node_modules/lodash-es/includes.js","./node_modules/lodash-es/_arrayEvery.js","./node_modules/lodash-es/_baseEvery.js","./node_modules/lodash-es/every.js","./node_modules/@chevrotain/gast/lib/src/helpers.js","./node_modules/chevrotain/lib/src/parse/grammar/rest.js","./node_modules/lodash-es/uniq.js","./node_modules/chevrotain/lib/src/parse/grammar/first.js","./node_modules/chevrotain/lib/src/parse/grammar/follow.js","./node_modules/chevrotain/lib/src/parse/constants.js","./node_modules/lodash-es/negate.js","./node_modules/lodash-es/reject.js","./node_modules/lodash-es/indexOf.js","./node_modules/lodash-es/difference.js","./node_modules/lodash-es/_baseDifference.js","./node_modules/lodash-es/compact.js","./node_modules/lodash-es/head.js","./node_modules/@chevrotain/utils/lib/src/print.js","./node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","./node_modules/chevrotain/lib/src/scan/reg_exp.js","./node_modules/chevrotain/lib/src/scan/lexer.js","./node_modules/@chevrotain/utils/lib/src/timer.js","./node_modules/chevrotain/lib/src/scan/tokens.js","./node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","./node_modules/chevrotain/lib/src/scan/lexer_public.js","./node_modules/chevrotain/lib/src/scan/tokens_public.js","./node_modules/chevrotain/lib/src/parse/errors_public.js","./node_modules/chevrotain/lib/src/parse/grammar/resolver.js","./node_modules/lodash-es/_arrayAggregator.js","./node_modules/lodash-es/_baseAggregator.js","./node_modules/lodash-es/groupBy.js","./node_modules/lodash-es/_createAggregator.js","./node_modules/lodash-es/dropRight.js","./node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","./node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","./node_modules/chevrotain/lib/src/parse/grammar/checks.js","./node_modules/chevrotain/lib/src/parse/exceptions_public.js","./node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","./node_modules/chevrotain/lib/src/parse/grammar/keys.js","./node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","./node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","./node_modules/chevrotain/lib/src/parse/cst/cst.js","./node_modules/chevrotain/lib/src/lang/lang_extensions.js","./node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","./node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","./node_modules/chevrotain/lib/src/parse/parser/parser.js","./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","./node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","./node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","./node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","./node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","./node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","./node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","./node_modules/lodash-es/clone.js","./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-JEIROHC2.mjs"],"sourcesContent":["/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-JEIROHC2.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs\";\nimport {\n  TreemapModule,\n  createTreemapServices\n} from \"./chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap\n} from \"./chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-63CPKGFF.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-HUATNLJX.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-WTHONI2E.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-O4VJ6CD3.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-ZV4HHKMB.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-NJJJXTRR.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\"),\n  treemap: /* @__PURE__ */ __name(async () => {\n    const { createTreemapServices: createTreemapServices2 } = await import(\"./chunks/mermaid-parser.core/treemap-75Q7IDZK.mjs\");\n    const parser = createTreemapServices2().Treemap.parser.LangiumParser;\n    parsers.treemap = parser;\n  }, \"treemap\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  TreemapModule,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  createTreemapServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap,\n  parse\n};\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  TreemapGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/treemap/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/treemap/tokenBuilder.ts\nvar TreemapTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"TreemapTokenBuilder\");\n  }\n  constructor() {\n    super([\"treemap\"]);\n  }\n};\n\n// src/language/treemap/valueConverter.ts\nvar classDefRegex = /classDef\\s+([A-Z_a-z]\\w+)(?:\\s+([^\\n\\r;]*))?;?/;\nvar TreemapValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"TreemapValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"NUMBER2\") {\n      return parseFloat(input.replace(/,/g, \"\"));\n    } else if (rule.name === \"SEPARATOR\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"STRING2\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"INDENTATION\") {\n      return input.length;\n    } else if (rule.name === \"ClassDef\") {\n      if (typeof input !== \"string\") {\n        return input;\n      }\n      const match = classDefRegex.exec(input);\n      if (match) {\n        return {\n          $type: \"ClassDefStatement\",\n          className: match[1],\n          styleText: match[2] || void 0\n        };\n      }\n    }\n    return void 0;\n  }\n};\n\n// src/language/treemap/treemap-validator.ts\nfunction registerValidationChecks(services) {\n  const validator = services.validation.TreemapValidator;\n  const registry = services.validation.ValidationRegistry;\n  if (registry) {\n    const checks = {\n      Treemap: validator.checkSingleRoot.bind(validator)\n      // Remove unused validation for TreemapRow\n    };\n    registry.register(checks, validator);\n  }\n}\n__name(registerValidationChecks, \"registerValidationChecks\");\nvar TreemapValidator = class {\n  static {\n    __name(this, \"TreemapValidator\");\n  }\n  /**\n   * Validates that a treemap has only one root node.\n   * A root node is defined as a node that has no indentation.\n   */\n  checkSingleRoot(doc, accept) {\n    let rootNodeIndentation;\n    for (const row of doc.TreemapRows) {\n      if (!row.item) {\n        continue;\n      }\n      if (rootNodeIndentation === void 0 && // Check if this is a root node (no indentation)\n      row.indent === void 0) {\n        rootNodeIndentation = 0;\n      } else if (row.indent === void 0) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      } else if (rootNodeIndentation !== void 0 && rootNodeIndentation >= parseInt(row.indent, 10)) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      }\n    }\n  }\n};\n\n// src/language/treemap/module.ts\nvar TreemapModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new TreemapTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new TreemapValueConverter(), \"ValueConverter\")\n  },\n  validation: {\n    TreemapValidator: /* @__PURE__ */ __name(() => new TreemapValidator(), \"TreemapValidator\")\n  }\n};\nfunction createTreemapServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Treemap = inject(\n    createDefaultCoreModule({ shared }),\n    TreemapGeneratedModule,\n    TreemapModule\n  );\n  shared.ServiceRegistry.register(Treemap);\n  registerValidationChecks(Treemap);\n  return { shared, Treemap };\n}\n__name(createTreemapServices, \"createTreemapServices\");\n\nexport {\n  TreemapModule,\n  createTreemapServices\n};\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar ClassDefStatement = \"ClassDefStatement\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Item = \"Item\";\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Treemap = \"Treemap\";\nfunction isTreemap(item) {\n  return reflection.isInstance(item, Treemap);\n}\n__name(isTreemap, \"isTreemap\");\nvar TreemapRow = \"TreemapRow\";\nvar Direction = \"Direction\";\nvar Leaf = \"Leaf\";\nvar Section = \"Section\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, ClassDefStatement, Commit, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Item, Junction, Leaf, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Section, Service, Statement, Treemap, TreemapRow];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      case Leaf:\n      case Section: {\n        return this.isSubtype(Item, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case ClassDefStatement: {\n        return {\n          name: ClassDefStatement,\n          properties: [\n            { name: \"className\" },\n            { name: \"styleText\" }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Item: {\n        return {\n          name: Item,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"bits\" },\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Treemap: {\n        return {\n          name: Treemap,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" },\n            { name: \"TreemapRows\", defaultValue: [] }\n          ]\n        };\n      }\n      case TreemapRow: {\n        return {\n          name: TreemapRow,\n          properties: [\n            { name: \"indent\" },\n            { name: \"item\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Leaf: {\n        return {\n          name: Leaf,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Section: {\n        return {\n          name: Section,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"packet\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"bits\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]}]},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"REFERENCE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@2\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@2\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\nvar loadedTreemapGrammar;\nvar TreemapGrammar = /* @__PURE__ */ __name(() => loadedTreemapGrammar ?? (loadedTreemapGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Treemap\",\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Treemap\",\"returnType\":{\"$ref\":\"#/interfaces@4\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"TreemapRows\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"TREEMAP_KEYWORD\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap-beta\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"CLASS_DEF\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/classDef\\\\\\\\s+([a-zA-Z_][a-zA-Z0-9_]+)(?:\\\\\\\\s+([^;\\\\\\\\r\\\\\\\\n]*))?(?:;)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STYLE_SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":::\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"COMMA\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\",\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WS\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"ML_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\%\\\\\\\\%[^\\\\\\\\n]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"NL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"TreemapRow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"indent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"item\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"ClassDef\",\"dataType\":\"string\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Item\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Section\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Leaf\",\"returnType\":{\"$ref\":\"#/interfaces@2\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INDENTATION\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]{1,}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9_\\\\\\\\.\\\\\\\\,]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"MyNumber\",\"dataType\":\"number\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Item\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"name\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"classSelector\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Section\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[]},{\"$type\":\"Interface\",\"name\":\"Leaf\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}]},{\"$type\":\"Interface\",\"name\":\"ClassDefStatement\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"className\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"styleText\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Treemap\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"TreemapRows\",\"type\":{\"$type\":\"ArrayType\",\"elementType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@14\"}}},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[],\"$comment\":\"/**\\\\n * Treemap grammar for Langium\\\\n * Converted from mindmap grammar\\\\n *\\\\n * The ML_COMMENT and NL hidden terminals handle whitespace, comments, and newlines\\\\n * before the treemap keyword, allowing for empty lines and comments before the\\\\n * treemap declaration.\\\\n */\"}`)), \"TreemapGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar TreemapLanguageMetaData = {\n  languageId: \"treemap\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar TreemapGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => TreemapGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => TreemapLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  Treemap,\n  isTreemap,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  TreemapGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160]}